openapi: 3.1.0
info:
  title: ZenStack Generated API
  version: 1.0.0
  description: My awesome API created with ZenStack
  summary: Created with ZenStack
tags:
  - name: organization
    description: Organization operations
  - name: orgEmail
    description: OrgEmail operations
  - name: orgDomain
    description: OrgDomain operations
  - name: user
    description: User operations
  - name: userSecret
    description: UserSecret operations
  - name: profile
    description: Profile operations
  - name: group
    description: Group operations
  - name: todo
    description: Todo operations
  - name: userTodoLink
    description: UserTodoLink operations
  - name: task
    description: Task operations
  - name: userTaskLink
    description: UserTaskLink operations
  - name: post
    description: Post operations
  - name: category
    description: Category operations
  - name: comment
    description: Comment operations
  - name: file
    description: File operations
  - name: userFollower
    description: UserFollower operations
  - name: postLike
    description: PostLike operations
  - name: story
    description: Story operations
  - name: image
    description: Image operations
  - name: configParam
    description: ConfigParam operations
  - name: orgEmailUseTo
    description: OrgEmailUseTo operations
  - name: appEmailDomain
    description: AppEmailDomain operations
  - name: refreshToken
    description: RefreshToken operations
  - name: apiKey
    description: ApiKey operations
  - name: scope
    description: Scope operations
  - name: token
    description: Token operations
  - name: changesTracking
    description: ChangesTracking operations
  - name: accountValidation
    description: AccountValidation operations
paths:
  /apizen/organization:
    get:
      operationId: list-Organization
      description: List "Organization" resources
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description]
          required: false
          description: Equality filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$contains]
          required: false
          description: String contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$icontains]
          required: false
          description: String case-insensitive contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$search]
          required: false
          description: String full-text search filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$startsWith]
          required: false
          description: String startsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$endsWith]
          required: false
          description: String endsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[emailITAdmin]
          required: false
          description: Equality filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$contains]
          required: false
          description: String contains filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$icontains]
          required: false
          description: String case-insensitive contains filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$search]
          required: false
          description: String full-text search filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$startsWith]
          required: false
          description: String startsWith filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$endsWith]
          required: false
          description: String endsWith filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite]
          required: false
          description: Equality filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$contains]
          required: false
          description: String contains filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$icontains]
          required: false
          description: String case-insensitive contains filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$search]
          required: false
          description: String full-text search filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$startsWith]
          required: false
          description: String startsWith filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$endsWith]
          required: false
          description: String endsWith filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEmails]
          required: false
          description: Equality filter for "OrgEmails"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[OrgDomains]
          required: false
          description: Equality filter for "OrgDomains"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[mainOrg]
          required: false
          description: Equality filter for "mainOrg"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEntity]
          required: false
          description: Equality filter for "OrgEntity"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Members]
          required: false
          description: Equality filter for "Members"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todos]
          required: false
          description: Equality filter for "Todos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OrganizationListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Organization
      description: Create a "Organization" resource
      tags:
        - organization
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/OrganizationCreateRequest"
      responses:
        "201":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OrganizationResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/organization/{id}:
    get:
      operationId: fetch-Organization
      description: Fetch a "Organization" resource
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OrganizationResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Organization-put
      description: Update a "Organization" resource
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/OrganizationUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OrganizationResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Organization-patch
      description: Update a "Organization" resource
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/OrganizationUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OrganizationResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    delete:
      operationId: delete-Organization
      description: Delete a "Organization" resource
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/organization/{id}/OrgEmails:
    get:
      operationId: fetch-Organization-related-OrgEmails
      description: Fetch the related "OrgEmails" resource for "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description]
          required: false
          description: Equality filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$contains]
          required: false
          description: String contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$icontains]
          required: false
          description: String case-insensitive contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$search]
          required: false
          description: String full-text search filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$startsWith]
          required: false
          description: String startsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$endsWith]
          required: false
          description: String endsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[emailITAdmin]
          required: false
          description: Equality filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$contains]
          required: false
          description: String contains filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$icontains]
          required: false
          description: String case-insensitive contains filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$search]
          required: false
          description: String full-text search filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$startsWith]
          required: false
          description: String startsWith filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$endsWith]
          required: false
          description: String endsWith filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite]
          required: false
          description: Equality filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$contains]
          required: false
          description: String contains filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$icontains]
          required: false
          description: String case-insensitive contains filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$search]
          required: false
          description: String full-text search filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$startsWith]
          required: false
          description: String startsWith filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$endsWith]
          required: false
          description: String endsWith filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEmails]
          required: false
          description: Equality filter for "OrgEmails"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[OrgDomains]
          required: false
          description: Equality filter for "OrgDomains"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[mainOrg]
          required: false
          description: Equality filter for "mainOrg"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEntity]
          required: false
          description: Equality filter for "OrgEntity"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Members]
          required: false
          description: Equality filter for "Members"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todos]
          required: false
          description: Equality filter for "Todos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OrgEmailListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/organization/{id}/relationships/OrgEmails:
    get:
      operationId: fetch-Organization-relationship-OrgEmails
      description: Fetch the "OrgEmails" relationships for a "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description]
          required: false
          description: Equality filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$contains]
          required: false
          description: String contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$icontains]
          required: false
          description: String case-insensitive contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$search]
          required: false
          description: String full-text search filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$startsWith]
          required: false
          description: String startsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$endsWith]
          required: false
          description: String endsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[emailITAdmin]
          required: false
          description: Equality filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$contains]
          required: false
          description: String contains filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$icontains]
          required: false
          description: String case-insensitive contains filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$search]
          required: false
          description: String full-text search filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$startsWith]
          required: false
          description: String startsWith filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$endsWith]
          required: false
          description: String endsWith filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite]
          required: false
          description: Equality filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$contains]
          required: false
          description: String contains filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$icontains]
          required: false
          description: String case-insensitive contains filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$search]
          required: false
          description: String full-text search filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$startsWith]
          required: false
          description: String startsWith filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$endsWith]
          required: false
          description: String endsWith filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEmails]
          required: false
          description: Equality filter for "OrgEmails"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[OrgDomains]
          required: false
          description: Equality filter for "OrgDomains"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[mainOrg]
          required: false
          description: Equality filter for "mainOrg"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEntity]
          required: false
          description: Equality filter for "OrgEntity"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Members]
          required: false
          description: Equality filter for "Members"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todos]
          required: false
          description: Equality filter for "Todos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Organization-relationship-OrgEmails-put
      description: Update "OrgEmails" relationships for a "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Organization-relationship-OrgEmails-patch
      description: Update "OrgEmails" relationships for a "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Organization-relationship-OrgEmails
      description: Create new "OrgEmails" relationships for a "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/organization/{id}/OrgDomains:
    get:
      operationId: fetch-Organization-related-OrgDomains
      description: Fetch the related "OrgDomains" resource for "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description]
          required: false
          description: Equality filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$contains]
          required: false
          description: String contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$icontains]
          required: false
          description: String case-insensitive contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$search]
          required: false
          description: String full-text search filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$startsWith]
          required: false
          description: String startsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$endsWith]
          required: false
          description: String endsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[emailITAdmin]
          required: false
          description: Equality filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$contains]
          required: false
          description: String contains filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$icontains]
          required: false
          description: String case-insensitive contains filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$search]
          required: false
          description: String full-text search filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$startsWith]
          required: false
          description: String startsWith filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$endsWith]
          required: false
          description: String endsWith filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite]
          required: false
          description: Equality filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$contains]
          required: false
          description: String contains filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$icontains]
          required: false
          description: String case-insensitive contains filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$search]
          required: false
          description: String full-text search filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$startsWith]
          required: false
          description: String startsWith filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$endsWith]
          required: false
          description: String endsWith filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEmails]
          required: false
          description: Equality filter for "OrgEmails"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[OrgDomains]
          required: false
          description: Equality filter for "OrgDomains"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[mainOrg]
          required: false
          description: Equality filter for "mainOrg"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEntity]
          required: false
          description: Equality filter for "OrgEntity"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Members]
          required: false
          description: Equality filter for "Members"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todos]
          required: false
          description: Equality filter for "Todos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OrgDomainListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/organization/{id}/relationships/OrgDomains:
    get:
      operationId: fetch-Organization-relationship-OrgDomains
      description: Fetch the "OrgDomains" relationships for a "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description]
          required: false
          description: Equality filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$contains]
          required: false
          description: String contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$icontains]
          required: false
          description: String case-insensitive contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$search]
          required: false
          description: String full-text search filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$startsWith]
          required: false
          description: String startsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$endsWith]
          required: false
          description: String endsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[emailITAdmin]
          required: false
          description: Equality filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$contains]
          required: false
          description: String contains filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$icontains]
          required: false
          description: String case-insensitive contains filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$search]
          required: false
          description: String full-text search filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$startsWith]
          required: false
          description: String startsWith filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$endsWith]
          required: false
          description: String endsWith filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite]
          required: false
          description: Equality filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$contains]
          required: false
          description: String contains filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$icontains]
          required: false
          description: String case-insensitive contains filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$search]
          required: false
          description: String full-text search filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$startsWith]
          required: false
          description: String startsWith filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$endsWith]
          required: false
          description: String endsWith filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEmails]
          required: false
          description: Equality filter for "OrgEmails"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[OrgDomains]
          required: false
          description: Equality filter for "OrgDomains"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[mainOrg]
          required: false
          description: Equality filter for "mainOrg"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEntity]
          required: false
          description: Equality filter for "OrgEntity"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Members]
          required: false
          description: Equality filter for "Members"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todos]
          required: false
          description: Equality filter for "Todos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Organization-relationship-OrgDomains-put
      description: Update "OrgDomains" relationships for a "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Organization-relationship-OrgDomains-patch
      description: Update "OrgDomains" relationships for a "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Organization-relationship-OrgDomains
      description: Create new "OrgDomains" relationships for a "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/organization/{id}/mainOrg:
    get:
      operationId: fetch-Organization-related-mainOrg
      description: Fetch the related "mainOrg" resource for "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OrganizationResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/organization/{id}/relationships/mainOrg:
    get:
      operationId: fetch-Organization-relationship-mainOrg
      description: Fetch the "mainOrg" relationships for a "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Organization-relationship-mainOrg-put
      description: Update "mainOrg" relationship for a "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Organization-relationship-mainOrg-patch
      description: Update "mainOrg" relationship for a "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/organization/{id}/OrgEntity:
    get:
      operationId: fetch-Organization-related-OrgEntity
      description: Fetch the related "OrgEntity" resource for "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description]
          required: false
          description: Equality filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$contains]
          required: false
          description: String contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$icontains]
          required: false
          description: String case-insensitive contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$search]
          required: false
          description: String full-text search filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$startsWith]
          required: false
          description: String startsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$endsWith]
          required: false
          description: String endsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[emailITAdmin]
          required: false
          description: Equality filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$contains]
          required: false
          description: String contains filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$icontains]
          required: false
          description: String case-insensitive contains filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$search]
          required: false
          description: String full-text search filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$startsWith]
          required: false
          description: String startsWith filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$endsWith]
          required: false
          description: String endsWith filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite]
          required: false
          description: Equality filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$contains]
          required: false
          description: String contains filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$icontains]
          required: false
          description: String case-insensitive contains filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$search]
          required: false
          description: String full-text search filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$startsWith]
          required: false
          description: String startsWith filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$endsWith]
          required: false
          description: String endsWith filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEmails]
          required: false
          description: Equality filter for "OrgEmails"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[OrgDomains]
          required: false
          description: Equality filter for "OrgDomains"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[mainOrg]
          required: false
          description: Equality filter for "mainOrg"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEntity]
          required: false
          description: Equality filter for "OrgEntity"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Members]
          required: false
          description: Equality filter for "Members"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todos]
          required: false
          description: Equality filter for "Todos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OrganizationListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/organization/{id}/relationships/OrgEntity:
    get:
      operationId: fetch-Organization-relationship-OrgEntity
      description: Fetch the "OrgEntity" relationships for a "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description]
          required: false
          description: Equality filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$contains]
          required: false
          description: String contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$icontains]
          required: false
          description: String case-insensitive contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$search]
          required: false
          description: String full-text search filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$startsWith]
          required: false
          description: String startsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$endsWith]
          required: false
          description: String endsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[emailITAdmin]
          required: false
          description: Equality filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$contains]
          required: false
          description: String contains filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$icontains]
          required: false
          description: String case-insensitive contains filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$search]
          required: false
          description: String full-text search filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$startsWith]
          required: false
          description: String startsWith filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$endsWith]
          required: false
          description: String endsWith filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite]
          required: false
          description: Equality filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$contains]
          required: false
          description: String contains filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$icontains]
          required: false
          description: String case-insensitive contains filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$search]
          required: false
          description: String full-text search filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$startsWith]
          required: false
          description: String startsWith filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$endsWith]
          required: false
          description: String endsWith filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEmails]
          required: false
          description: Equality filter for "OrgEmails"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[OrgDomains]
          required: false
          description: Equality filter for "OrgDomains"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[mainOrg]
          required: false
          description: Equality filter for "mainOrg"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEntity]
          required: false
          description: Equality filter for "OrgEntity"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Members]
          required: false
          description: Equality filter for "Members"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todos]
          required: false
          description: Equality filter for "Todos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Organization-relationship-OrgEntity-put
      description: Update "OrgEntity" relationships for a "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Organization-relationship-OrgEntity-patch
      description: Update "OrgEntity" relationships for a "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Organization-relationship-OrgEntity
      description: Create new "OrgEntity" relationships for a "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/organization/{id}/Members:
    get:
      operationId: fetch-Organization-related-Members
      description: Fetch the related "Members" resource for "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description]
          required: false
          description: Equality filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$contains]
          required: false
          description: String contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$icontains]
          required: false
          description: String case-insensitive contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$search]
          required: false
          description: String full-text search filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$startsWith]
          required: false
          description: String startsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$endsWith]
          required: false
          description: String endsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[emailITAdmin]
          required: false
          description: Equality filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$contains]
          required: false
          description: String contains filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$icontains]
          required: false
          description: String case-insensitive contains filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$search]
          required: false
          description: String full-text search filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$startsWith]
          required: false
          description: String startsWith filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$endsWith]
          required: false
          description: String endsWith filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite]
          required: false
          description: Equality filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$contains]
          required: false
          description: String contains filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$icontains]
          required: false
          description: String case-insensitive contains filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$search]
          required: false
          description: String full-text search filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$startsWith]
          required: false
          description: String startsWith filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$endsWith]
          required: false
          description: String endsWith filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEmails]
          required: false
          description: Equality filter for "OrgEmails"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[OrgDomains]
          required: false
          description: Equality filter for "OrgDomains"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[mainOrg]
          required: false
          description: Equality filter for "mainOrg"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEntity]
          required: false
          description: Equality filter for "OrgEntity"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Members]
          required: false
          description: Equality filter for "Members"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todos]
          required: false
          description: Equality filter for "Todos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/organization/{id}/relationships/Members:
    get:
      operationId: fetch-Organization-relationship-Members
      description: Fetch the "Members" relationships for a "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description]
          required: false
          description: Equality filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$contains]
          required: false
          description: String contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$icontains]
          required: false
          description: String case-insensitive contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$search]
          required: false
          description: String full-text search filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$startsWith]
          required: false
          description: String startsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$endsWith]
          required: false
          description: String endsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[emailITAdmin]
          required: false
          description: Equality filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$contains]
          required: false
          description: String contains filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$icontains]
          required: false
          description: String case-insensitive contains filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$search]
          required: false
          description: String full-text search filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$startsWith]
          required: false
          description: String startsWith filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$endsWith]
          required: false
          description: String endsWith filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite]
          required: false
          description: Equality filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$contains]
          required: false
          description: String contains filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$icontains]
          required: false
          description: String case-insensitive contains filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$search]
          required: false
          description: String full-text search filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$startsWith]
          required: false
          description: String startsWith filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$endsWith]
          required: false
          description: String endsWith filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEmails]
          required: false
          description: Equality filter for "OrgEmails"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[OrgDomains]
          required: false
          description: Equality filter for "OrgDomains"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[mainOrg]
          required: false
          description: Equality filter for "mainOrg"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEntity]
          required: false
          description: Equality filter for "OrgEntity"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Members]
          required: false
          description: Equality filter for "Members"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todos]
          required: false
          description: Equality filter for "Todos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Organization-relationship-Members-put
      description: Update "Members" relationships for a "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Organization-relationship-Members-patch
      description: Update "Members" relationships for a "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Organization-relationship-Members
      description: Create new "Members" relationships for a "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/organization/{id}/Posts:
    get:
      operationId: fetch-Organization-related-Posts
      description: Fetch the related "Posts" resource for "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description]
          required: false
          description: Equality filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$contains]
          required: false
          description: String contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$icontains]
          required: false
          description: String case-insensitive contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$search]
          required: false
          description: String full-text search filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$startsWith]
          required: false
          description: String startsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$endsWith]
          required: false
          description: String endsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[emailITAdmin]
          required: false
          description: Equality filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$contains]
          required: false
          description: String contains filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$icontains]
          required: false
          description: String case-insensitive contains filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$search]
          required: false
          description: String full-text search filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$startsWith]
          required: false
          description: String startsWith filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$endsWith]
          required: false
          description: String endsWith filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite]
          required: false
          description: Equality filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$contains]
          required: false
          description: String contains filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$icontains]
          required: false
          description: String case-insensitive contains filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$search]
          required: false
          description: String full-text search filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$startsWith]
          required: false
          description: String startsWith filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$endsWith]
          required: false
          description: String endsWith filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEmails]
          required: false
          description: Equality filter for "OrgEmails"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[OrgDomains]
          required: false
          description: Equality filter for "OrgDomains"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[mainOrg]
          required: false
          description: Equality filter for "mainOrg"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEntity]
          required: false
          description: Equality filter for "OrgEntity"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Members]
          required: false
          description: Equality filter for "Members"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todos]
          required: false
          description: Equality filter for "Todos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/PostListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/organization/{id}/relationships/Posts:
    get:
      operationId: fetch-Organization-relationship-Posts
      description: Fetch the "Posts" relationships for a "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description]
          required: false
          description: Equality filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$contains]
          required: false
          description: String contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$icontains]
          required: false
          description: String case-insensitive contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$search]
          required: false
          description: String full-text search filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$startsWith]
          required: false
          description: String startsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$endsWith]
          required: false
          description: String endsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[emailITAdmin]
          required: false
          description: Equality filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$contains]
          required: false
          description: String contains filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$icontains]
          required: false
          description: String case-insensitive contains filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$search]
          required: false
          description: String full-text search filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$startsWith]
          required: false
          description: String startsWith filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$endsWith]
          required: false
          description: String endsWith filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite]
          required: false
          description: Equality filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$contains]
          required: false
          description: String contains filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$icontains]
          required: false
          description: String case-insensitive contains filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$search]
          required: false
          description: String full-text search filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$startsWith]
          required: false
          description: String startsWith filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$endsWith]
          required: false
          description: String endsWith filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEmails]
          required: false
          description: Equality filter for "OrgEmails"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[OrgDomains]
          required: false
          description: Equality filter for "OrgDomains"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[mainOrg]
          required: false
          description: Equality filter for "mainOrg"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEntity]
          required: false
          description: Equality filter for "OrgEntity"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Members]
          required: false
          description: Equality filter for "Members"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todos]
          required: false
          description: Equality filter for "Todos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Organization-relationship-Posts-put
      description: Update "Posts" relationships for a "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Organization-relationship-Posts-patch
      description: Update "Posts" relationships for a "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Organization-relationship-Posts
      description: Create new "Posts" relationships for a "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/organization/{id}/Groups:
    get:
      operationId: fetch-Organization-related-Groups
      description: Fetch the related "Groups" resource for "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description]
          required: false
          description: Equality filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$contains]
          required: false
          description: String contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$icontains]
          required: false
          description: String case-insensitive contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$search]
          required: false
          description: String full-text search filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$startsWith]
          required: false
          description: String startsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$endsWith]
          required: false
          description: String endsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[emailITAdmin]
          required: false
          description: Equality filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$contains]
          required: false
          description: String contains filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$icontains]
          required: false
          description: String case-insensitive contains filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$search]
          required: false
          description: String full-text search filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$startsWith]
          required: false
          description: String startsWith filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$endsWith]
          required: false
          description: String endsWith filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite]
          required: false
          description: Equality filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$contains]
          required: false
          description: String contains filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$icontains]
          required: false
          description: String case-insensitive contains filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$search]
          required: false
          description: String full-text search filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$startsWith]
          required: false
          description: String startsWith filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$endsWith]
          required: false
          description: String endsWith filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEmails]
          required: false
          description: Equality filter for "OrgEmails"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[OrgDomains]
          required: false
          description: Equality filter for "OrgDomains"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[mainOrg]
          required: false
          description: Equality filter for "mainOrg"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEntity]
          required: false
          description: Equality filter for "OrgEntity"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Members]
          required: false
          description: Equality filter for "Members"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todos]
          required: false
          description: Equality filter for "Todos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GroupListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/organization/{id}/relationships/Groups:
    get:
      operationId: fetch-Organization-relationship-Groups
      description: Fetch the "Groups" relationships for a "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description]
          required: false
          description: Equality filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$contains]
          required: false
          description: String contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$icontains]
          required: false
          description: String case-insensitive contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$search]
          required: false
          description: String full-text search filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$startsWith]
          required: false
          description: String startsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$endsWith]
          required: false
          description: String endsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[emailITAdmin]
          required: false
          description: Equality filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$contains]
          required: false
          description: String contains filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$icontains]
          required: false
          description: String case-insensitive contains filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$search]
          required: false
          description: String full-text search filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$startsWith]
          required: false
          description: String startsWith filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$endsWith]
          required: false
          description: String endsWith filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite]
          required: false
          description: Equality filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$contains]
          required: false
          description: String contains filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$icontains]
          required: false
          description: String case-insensitive contains filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$search]
          required: false
          description: String full-text search filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$startsWith]
          required: false
          description: String startsWith filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$endsWith]
          required: false
          description: String endsWith filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEmails]
          required: false
          description: Equality filter for "OrgEmails"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[OrgDomains]
          required: false
          description: Equality filter for "OrgDomains"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[mainOrg]
          required: false
          description: Equality filter for "mainOrg"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEntity]
          required: false
          description: Equality filter for "OrgEntity"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Members]
          required: false
          description: Equality filter for "Members"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todos]
          required: false
          description: Equality filter for "Todos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Organization-relationship-Groups-put
      description: Update "Groups" relationships for a "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Organization-relationship-Groups-patch
      description: Update "Groups" relationships for a "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Organization-relationship-Groups
      description: Create new "Groups" relationships for a "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/organization/{id}/Files:
    get:
      operationId: fetch-Organization-related-Files
      description: Fetch the related "Files" resource for "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description]
          required: false
          description: Equality filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$contains]
          required: false
          description: String contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$icontains]
          required: false
          description: String case-insensitive contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$search]
          required: false
          description: String full-text search filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$startsWith]
          required: false
          description: String startsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$endsWith]
          required: false
          description: String endsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[emailITAdmin]
          required: false
          description: Equality filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$contains]
          required: false
          description: String contains filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$icontains]
          required: false
          description: String case-insensitive contains filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$search]
          required: false
          description: String full-text search filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$startsWith]
          required: false
          description: String startsWith filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$endsWith]
          required: false
          description: String endsWith filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite]
          required: false
          description: Equality filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$contains]
          required: false
          description: String contains filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$icontains]
          required: false
          description: String case-insensitive contains filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$search]
          required: false
          description: String full-text search filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$startsWith]
          required: false
          description: String startsWith filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$endsWith]
          required: false
          description: String endsWith filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEmails]
          required: false
          description: Equality filter for "OrgEmails"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[OrgDomains]
          required: false
          description: Equality filter for "OrgDomains"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[mainOrg]
          required: false
          description: Equality filter for "mainOrg"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEntity]
          required: false
          description: Equality filter for "OrgEntity"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Members]
          required: false
          description: Equality filter for "Members"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todos]
          required: false
          description: Equality filter for "Todos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/FileListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/organization/{id}/relationships/Files:
    get:
      operationId: fetch-Organization-relationship-Files
      description: Fetch the "Files" relationships for a "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description]
          required: false
          description: Equality filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$contains]
          required: false
          description: String contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$icontains]
          required: false
          description: String case-insensitive contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$search]
          required: false
          description: String full-text search filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$startsWith]
          required: false
          description: String startsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$endsWith]
          required: false
          description: String endsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[emailITAdmin]
          required: false
          description: Equality filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$contains]
          required: false
          description: String contains filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$icontains]
          required: false
          description: String case-insensitive contains filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$search]
          required: false
          description: String full-text search filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$startsWith]
          required: false
          description: String startsWith filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$endsWith]
          required: false
          description: String endsWith filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite]
          required: false
          description: Equality filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$contains]
          required: false
          description: String contains filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$icontains]
          required: false
          description: String case-insensitive contains filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$search]
          required: false
          description: String full-text search filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$startsWith]
          required: false
          description: String startsWith filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$endsWith]
          required: false
          description: String endsWith filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEmails]
          required: false
          description: Equality filter for "OrgEmails"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[OrgDomains]
          required: false
          description: Equality filter for "OrgDomains"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[mainOrg]
          required: false
          description: Equality filter for "mainOrg"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEntity]
          required: false
          description: Equality filter for "OrgEntity"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Members]
          required: false
          description: Equality filter for "Members"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todos]
          required: false
          description: Equality filter for "Todos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Organization-relationship-Files-put
      description: Update "Files" relationships for a "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Organization-relationship-Files-patch
      description: Update "Files" relationships for a "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Organization-relationship-Files
      description: Create new "Files" relationships for a "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/organization/{id}/Tasks:
    get:
      operationId: fetch-Organization-related-Tasks
      description: Fetch the related "Tasks" resource for "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description]
          required: false
          description: Equality filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$contains]
          required: false
          description: String contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$icontains]
          required: false
          description: String case-insensitive contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$search]
          required: false
          description: String full-text search filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$startsWith]
          required: false
          description: String startsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$endsWith]
          required: false
          description: String endsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[emailITAdmin]
          required: false
          description: Equality filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$contains]
          required: false
          description: String contains filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$icontains]
          required: false
          description: String case-insensitive contains filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$search]
          required: false
          description: String full-text search filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$startsWith]
          required: false
          description: String startsWith filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$endsWith]
          required: false
          description: String endsWith filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite]
          required: false
          description: Equality filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$contains]
          required: false
          description: String contains filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$icontains]
          required: false
          description: String case-insensitive contains filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$search]
          required: false
          description: String full-text search filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$startsWith]
          required: false
          description: String startsWith filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$endsWith]
          required: false
          description: String endsWith filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEmails]
          required: false
          description: Equality filter for "OrgEmails"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[OrgDomains]
          required: false
          description: Equality filter for "OrgDomains"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[mainOrg]
          required: false
          description: Equality filter for "mainOrg"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEntity]
          required: false
          description: Equality filter for "OrgEntity"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Members]
          required: false
          description: Equality filter for "Members"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todos]
          required: false
          description: Equality filter for "Todos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/TaskListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/organization/{id}/relationships/Tasks:
    get:
      operationId: fetch-Organization-relationship-Tasks
      description: Fetch the "Tasks" relationships for a "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description]
          required: false
          description: Equality filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$contains]
          required: false
          description: String contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$icontains]
          required: false
          description: String case-insensitive contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$search]
          required: false
          description: String full-text search filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$startsWith]
          required: false
          description: String startsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$endsWith]
          required: false
          description: String endsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[emailITAdmin]
          required: false
          description: Equality filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$contains]
          required: false
          description: String contains filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$icontains]
          required: false
          description: String case-insensitive contains filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$search]
          required: false
          description: String full-text search filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$startsWith]
          required: false
          description: String startsWith filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$endsWith]
          required: false
          description: String endsWith filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite]
          required: false
          description: Equality filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$contains]
          required: false
          description: String contains filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$icontains]
          required: false
          description: String case-insensitive contains filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$search]
          required: false
          description: String full-text search filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$startsWith]
          required: false
          description: String startsWith filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$endsWith]
          required: false
          description: String endsWith filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEmails]
          required: false
          description: Equality filter for "OrgEmails"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[OrgDomains]
          required: false
          description: Equality filter for "OrgDomains"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[mainOrg]
          required: false
          description: Equality filter for "mainOrg"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEntity]
          required: false
          description: Equality filter for "OrgEntity"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Members]
          required: false
          description: Equality filter for "Members"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todos]
          required: false
          description: Equality filter for "Todos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Organization-relationship-Tasks-put
      description: Update "Tasks" relationships for a "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Organization-relationship-Tasks-patch
      description: Update "Tasks" relationships for a "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Organization-relationship-Tasks
      description: Create new "Tasks" relationships for a "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/organization/{id}/Todos:
    get:
      operationId: fetch-Organization-related-Todos
      description: Fetch the related "Todos" resource for "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description]
          required: false
          description: Equality filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$contains]
          required: false
          description: String contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$icontains]
          required: false
          description: String case-insensitive contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$search]
          required: false
          description: String full-text search filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$startsWith]
          required: false
          description: String startsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$endsWith]
          required: false
          description: String endsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[emailITAdmin]
          required: false
          description: Equality filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$contains]
          required: false
          description: String contains filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$icontains]
          required: false
          description: String case-insensitive contains filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$search]
          required: false
          description: String full-text search filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$startsWith]
          required: false
          description: String startsWith filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$endsWith]
          required: false
          description: String endsWith filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite]
          required: false
          description: Equality filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$contains]
          required: false
          description: String contains filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$icontains]
          required: false
          description: String case-insensitive contains filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$search]
          required: false
          description: String full-text search filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$startsWith]
          required: false
          description: String startsWith filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$endsWith]
          required: false
          description: String endsWith filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEmails]
          required: false
          description: Equality filter for "OrgEmails"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[OrgDomains]
          required: false
          description: Equality filter for "OrgDomains"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[mainOrg]
          required: false
          description: Equality filter for "mainOrg"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEntity]
          required: false
          description: Equality filter for "OrgEntity"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Members]
          required: false
          description: Equality filter for "Members"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todos]
          required: false
          description: Equality filter for "Todos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/TodoListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/organization/{id}/relationships/Todos:
    get:
      operationId: fetch-Organization-relationship-Todos
      description: Fetch the "Todos" relationships for a "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description]
          required: false
          description: Equality filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$contains]
          required: false
          description: String contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$icontains]
          required: false
          description: String case-insensitive contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$search]
          required: false
          description: String full-text search filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$startsWith]
          required: false
          description: String startsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$endsWith]
          required: false
          description: String endsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[emailITAdmin]
          required: false
          description: Equality filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$contains]
          required: false
          description: String contains filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$icontains]
          required: false
          description: String case-insensitive contains filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$search]
          required: false
          description: String full-text search filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$startsWith]
          required: false
          description: String startsWith filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailITAdmin$endsWith]
          required: false
          description: String endsWith filter for "emailITAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite]
          required: false
          description: Equality filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$contains]
          required: false
          description: String contains filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$icontains]
          required: false
          description: String case-insensitive contains filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$search]
          required: false
          description: String full-text search filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$startsWith]
          required: false
          description: String startsWith filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[webSite$endsWith]
          required: false
          description: String endsWith filter for "webSite"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEmails]
          required: false
          description: Equality filter for "OrgEmails"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[OrgDomains]
          required: false
          description: Equality filter for "OrgDomains"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[mainOrg]
          required: false
          description: Equality filter for "mainOrg"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEntity]
          required: false
          description: Equality filter for "OrgEntity"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Members]
          required: false
          description: Equality filter for "Members"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todos]
          required: false
          description: Equality filter for "Todos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Organization-relationship-Todos-put
      description: Update "Todos" relationships for a "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Organization-relationship-Todos-patch
      description: Update "Todos" relationships for a "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Organization-relationship-Todos
      description: Create new "Todos" relationships for a "Organization"
      tags:
        - organization
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/orgEmail:
    get:
      operationId: list-OrgEmail
      description: List "OrgEmail" resources
      tags:
        - orgEmail
      parameters:
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description]
          required: false
          description: Equality filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$contains]
          required: false
          description: String contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$icontains]
          required: false
          description: String case-insensitive contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$search]
          required: false
          description: String full-text search filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$startsWith]
          required: false
          description: String startsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$endsWith]
          required: false
          description: String endsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEmailUseTos]
          required: false
          description: Equality filter for "OrgEmailUseTos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OrgEmailListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-OrgEmail
      description: Create a "OrgEmail" resource
      tags:
        - orgEmail
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/OrgEmailCreateRequest"
      responses:
        "201":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OrgEmailResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/orgEmail/{id}:
    get:
      operationId: fetch-OrgEmail
      description: Fetch a "OrgEmail" resource
      tags:
        - orgEmail
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OrgEmailResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-OrgEmail-put
      description: Update a "OrgEmail" resource
      tags:
        - orgEmail
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/OrgEmailUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OrgEmailResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-OrgEmail-patch
      description: Update a "OrgEmail" resource
      tags:
        - orgEmail
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/OrgEmailUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OrgEmailResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    delete:
      operationId: delete-OrgEmail
      description: Delete a "OrgEmail" resource
      tags:
        - orgEmail
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/orgEmail/{id}/org:
    get:
      operationId: fetch-OrgEmail-related-org
      description: Fetch the related "org" resource for "OrgEmail"
      tags:
        - orgEmail
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OrganizationResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/orgEmail/{id}/relationships/org:
    get:
      operationId: fetch-OrgEmail-relationship-org
      description: Fetch the "org" relationships for a "OrgEmail"
      tags:
        - orgEmail
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-OrgEmail-relationship-org-put
      description: Update "org" relationship for a "OrgEmail"
      tags:
        - orgEmail
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-OrgEmail-relationship-org-patch
      description: Update "org" relationship for a "OrgEmail"
      tags:
        - orgEmail
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/orgEmail/{id}/OrgEmailUseTos:
    get:
      operationId: fetch-OrgEmail-related-OrgEmailUseTos
      description: Fetch the related "OrgEmailUseTos" resource for "OrgEmail"
      tags:
        - orgEmail
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description]
          required: false
          description: Equality filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$contains]
          required: false
          description: String contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$icontains]
          required: false
          description: String case-insensitive contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$search]
          required: false
          description: String full-text search filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$startsWith]
          required: false
          description: String startsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$endsWith]
          required: false
          description: String endsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEmailUseTos]
          required: false
          description: Equality filter for "OrgEmailUseTos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OrgEmailUseToListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/orgEmail/{id}/relationships/OrgEmailUseTos:
    get:
      operationId: fetch-OrgEmail-relationship-OrgEmailUseTos
      description: Fetch the "OrgEmailUseTos" relationships for a "OrgEmail"
      tags:
        - orgEmail
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description]
          required: false
          description: Equality filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$contains]
          required: false
          description: String contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$icontains]
          required: false
          description: String case-insensitive contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$search]
          required: false
          description: String full-text search filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$startsWith]
          required: false
          description: String startsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$endsWith]
          required: false
          description: String endsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[OrgEmailUseTos]
          required: false
          description: Equality filter for "OrgEmailUseTos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-OrgEmail-relationship-OrgEmailUseTos-put
      description: Update "OrgEmailUseTos" relationships for a "OrgEmail"
      tags:
        - orgEmail
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-OrgEmail-relationship-OrgEmailUseTos-patch
      description: Update "OrgEmailUseTos" relationships for a "OrgEmail"
      tags:
        - orgEmail
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-OrgEmail-relationship-OrgEmailUseTos
      description: Create new "OrgEmailUseTos" relationships for a "OrgEmail"
      tags:
        - orgEmail
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/orgDomain:
    get:
      operationId: list-OrgDomain
      description: List "OrgDomain" resources
      tags:
        - orgDomain
      parameters:
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[domainName]
          required: false
          description: Equality filter for "domainName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[domainName$contains]
          required: false
          description: String contains filter for "domainName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[domainName$icontains]
          required: false
          description: String case-insensitive contains filter for "domainName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[domainName$search]
          required: false
          description: String full-text search filter for "domainName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[domainName$startsWith]
          required: false
          description: String startsWith filter for "domainName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[domainName$endsWith]
          required: false
          description: String endsWith filter for "domainName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[extension]
          required: false
          description: Equality filter for "extension"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[extension$contains]
          required: false
          description: String contains filter for "extension"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[extension$icontains]
          required: false
          description: String case-insensitive contains filter for "extension"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[extension$search]
          required: false
          description: String full-text search filter for "extension"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[extension$startsWith]
          required: false
          description: String startsWith filter for "extension"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[extension$endsWith]
          required: false
          description: String endsWith filter for "extension"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OrgDomainListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-OrgDomain
      description: Create a "OrgDomain" resource
      tags:
        - orgDomain
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/OrgDomainCreateRequest"
      responses:
        "201":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OrgDomainResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/orgDomain/{id}:
    get:
      operationId: fetch-OrgDomain
      description: Fetch a "OrgDomain" resource
      tags:
        - orgDomain
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OrgDomainResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-OrgDomain-put
      description: Update a "OrgDomain" resource
      tags:
        - orgDomain
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/OrgDomainUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OrgDomainResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-OrgDomain-patch
      description: Update a "OrgDomain" resource
      tags:
        - orgDomain
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/OrgDomainUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OrgDomainResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    delete:
      operationId: delete-OrgDomain
      description: Delete a "OrgDomain" resource
      tags:
        - orgDomain
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/orgDomain/{id}/org:
    get:
      operationId: fetch-OrgDomain-related-org
      description: Fetch the related "org" resource for "OrgDomain"
      tags:
        - orgDomain
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OrganizationResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/orgDomain/{id}/relationships/org:
    get:
      operationId: fetch-OrgDomain-relationship-org
      description: Fetch the "org" relationships for a "OrgDomain"
      tags:
        - orgDomain
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-OrgDomain-relationship-org-put
      description: Update "org" relationship for a "OrgDomain"
      tags:
        - orgDomain
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-OrgDomain-relationship-org-patch
      description: Update "org" relationship for a "OrgDomain"
      tags:
        - orgDomain
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user:
    get:
      operationId: list-User
      description: List "User" resources
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName]
          required: false
          description: Equality filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$contains]
          required: false
          description: String contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$icontains]
          required: false
          description: String case-insensitive contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$search]
          required: false
          description: String full-text search filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$startsWith]
          required: false
          description: String startsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$endsWith]
          required: false
          description: String endsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName]
          required: false
          description: Equality filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$contains]
          required: false
          description: String contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$icontains]
          required: false
          description: String case-insensitive contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$search]
          required: false
          description: String full-text search filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$startsWith]
          required: false
          description: String startsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$endsWith]
          required: false
          description: String endsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Title"
        - name: filter[nickName]
          required: false
          description: Equality filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$contains]
          required: false
          description: String contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$icontains]
          required: false
          description: String case-insensitive contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$search]
          required: false
          description: String full-text search filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$startsWith]
          required: false
          description: String startsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$endsWith]
          required: false
          description: String endsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Gender]
          required: false
          description: Equality filter for "Gender"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Gender"
        - name: filter[social]
          required: false
          description: Equality filter for "social"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[Language]
          required: false
          description: Equality filter for "Language"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Language"
        - name: filter[dob]
          required: false
          description: Equality filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lt]
          required: false
          description: Less-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lte]
          required: false
          description: Less-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gt]
          required: false
          description: Greater-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gte]
          required: false
          description: Greater-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[isValidated]
          required: false
          description: Equality filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lt]
          required: false
          description: Less-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lte]
          required: false
          description: Less-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gt]
          required: false
          description: Greater-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gte]
          required: false
          description: Greater-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended]
          required: false
          description: Equality filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lt]
          required: false
          description: Less-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lte]
          required: false
          description: Less-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gt]
          required: false
          description: Greater-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gte]
          required: false
          description: Greater-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Orgs]
          required: false
          description: Equality filter for "Orgs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[manager]
          required: false
          description: Equality filter for "manager"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Team]
          required: false
          description: Equality filter for "Team"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Profiles]
          required: false
          description: Equality filter for "Profiles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Stories]
          required: false
          description: Equality filter for "Stories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todo]
          required: false
          description: Equality filter for "Todo"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TodosAuthor]
          required: false
          description: Equality filter for "TodosAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TasksAuthor]
          required: false
          description: Equality filter for "TasksAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ChangesLogs]
          required: false
          description: Equality filter for "ChangesLogs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Roles]
          required: false
          description: Equality filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$has]
          required: false
          description: Collection contains filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasEvery]
          required: false
          description: Collection contains-all filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasSome]
          required: false
          description: Collection contains-any filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$isEmpty]
          required: false
          description: Collection is empty filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Permissions]
          required: false
          description: Equality filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$has]
          required: false
          description: Collection contains filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasEvery]
          required: false
          description: Collection contains-all filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasSome]
          required: false
          description: Collection contains-any filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$isEmpty]
          required: false
          description: Collection is empty filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Tokens]
          required: false
          description: Equality filter for "Tokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ApiKeys]
          required: false
          description: Equality filter for "ApiKeys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[isTfaEnable]
          required: false
          description: Equality filter for "isTfaEnable"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[tfaSecret]
          required: false
          description: Equality filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$contains]
          required: false
          description: String contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$icontains]
          required: false
          description: String case-insensitive contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$search]
          required: false
          description: String full-text search filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$startsWith]
          required: false
          description: String startsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$endsWith]
          required: false
          description: String endsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userSecret]
          required: false
          description: Equality filter for "userSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[followers]
          required: false
          description: Equality filter for "followers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[followings]
          required: false
          description: Equality filter for "followings"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[posts_liked]
          required: false
          description: Equality filter for "posts_liked"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[passWordFaker]
          required: false
          description: Equality filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$contains]
          required: false
          description: String contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$icontains]
          required: false
          description: String case-insensitive contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$search]
          required: false
          description: String full-text search filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$startsWith]
          required: false
          description: String startsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$endsWith]
          required: false
          description: String endsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-User
      description: Create a "User" resource
      tags:
        - user
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/UserCreateRequest"
      responses:
        "201":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
      security: []
  /apizen/user/{id}:
    get:
      operationId: fetch-User
      description: Fetch a "User" resource
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-User-put
      description: Update a "User" resource
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/UserUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-User-patch
      description: Update a "User" resource
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/UserUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    delete:
      operationId: delete-User
      description: Delete a "User" resource
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/Orgs:
    get:
      operationId: fetch-User-related-Orgs
      description: Fetch the related "Orgs" resource for "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName]
          required: false
          description: Equality filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$contains]
          required: false
          description: String contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$icontains]
          required: false
          description: String case-insensitive contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$search]
          required: false
          description: String full-text search filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$startsWith]
          required: false
          description: String startsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$endsWith]
          required: false
          description: String endsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName]
          required: false
          description: Equality filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$contains]
          required: false
          description: String contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$icontains]
          required: false
          description: String case-insensitive contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$search]
          required: false
          description: String full-text search filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$startsWith]
          required: false
          description: String startsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$endsWith]
          required: false
          description: String endsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Title"
        - name: filter[nickName]
          required: false
          description: Equality filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$contains]
          required: false
          description: String contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$icontains]
          required: false
          description: String case-insensitive contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$search]
          required: false
          description: String full-text search filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$startsWith]
          required: false
          description: String startsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$endsWith]
          required: false
          description: String endsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Gender]
          required: false
          description: Equality filter for "Gender"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Gender"
        - name: filter[social]
          required: false
          description: Equality filter for "social"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[Language]
          required: false
          description: Equality filter for "Language"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Language"
        - name: filter[dob]
          required: false
          description: Equality filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lt]
          required: false
          description: Less-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lte]
          required: false
          description: Less-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gt]
          required: false
          description: Greater-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gte]
          required: false
          description: Greater-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[isValidated]
          required: false
          description: Equality filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lt]
          required: false
          description: Less-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lte]
          required: false
          description: Less-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gt]
          required: false
          description: Greater-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gte]
          required: false
          description: Greater-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended]
          required: false
          description: Equality filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lt]
          required: false
          description: Less-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lte]
          required: false
          description: Less-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gt]
          required: false
          description: Greater-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gte]
          required: false
          description: Greater-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Orgs]
          required: false
          description: Equality filter for "Orgs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[manager]
          required: false
          description: Equality filter for "manager"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Team]
          required: false
          description: Equality filter for "Team"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Profiles]
          required: false
          description: Equality filter for "Profiles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Stories]
          required: false
          description: Equality filter for "Stories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todo]
          required: false
          description: Equality filter for "Todo"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TodosAuthor]
          required: false
          description: Equality filter for "TodosAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TasksAuthor]
          required: false
          description: Equality filter for "TasksAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ChangesLogs]
          required: false
          description: Equality filter for "ChangesLogs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Roles]
          required: false
          description: Equality filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$has]
          required: false
          description: Collection contains filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasEvery]
          required: false
          description: Collection contains-all filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasSome]
          required: false
          description: Collection contains-any filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$isEmpty]
          required: false
          description: Collection is empty filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Permissions]
          required: false
          description: Equality filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$has]
          required: false
          description: Collection contains filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasEvery]
          required: false
          description: Collection contains-all filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasSome]
          required: false
          description: Collection contains-any filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$isEmpty]
          required: false
          description: Collection is empty filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Tokens]
          required: false
          description: Equality filter for "Tokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ApiKeys]
          required: false
          description: Equality filter for "ApiKeys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[isTfaEnable]
          required: false
          description: Equality filter for "isTfaEnable"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[tfaSecret]
          required: false
          description: Equality filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$contains]
          required: false
          description: String contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$icontains]
          required: false
          description: String case-insensitive contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$search]
          required: false
          description: String full-text search filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$startsWith]
          required: false
          description: String startsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$endsWith]
          required: false
          description: String endsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userSecret]
          required: false
          description: Equality filter for "userSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[followers]
          required: false
          description: Equality filter for "followers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[followings]
          required: false
          description: Equality filter for "followings"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[posts_liked]
          required: false
          description: Equality filter for "posts_liked"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[passWordFaker]
          required: false
          description: Equality filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$contains]
          required: false
          description: String contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$icontains]
          required: false
          description: String case-insensitive contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$search]
          required: false
          description: String full-text search filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$startsWith]
          required: false
          description: String startsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$endsWith]
          required: false
          description: String endsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OrganizationListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/relationships/Orgs:
    get:
      operationId: fetch-User-relationship-Orgs
      description: Fetch the "Orgs" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName]
          required: false
          description: Equality filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$contains]
          required: false
          description: String contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$icontains]
          required: false
          description: String case-insensitive contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$search]
          required: false
          description: String full-text search filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$startsWith]
          required: false
          description: String startsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$endsWith]
          required: false
          description: String endsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName]
          required: false
          description: Equality filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$contains]
          required: false
          description: String contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$icontains]
          required: false
          description: String case-insensitive contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$search]
          required: false
          description: String full-text search filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$startsWith]
          required: false
          description: String startsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$endsWith]
          required: false
          description: String endsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Title"
        - name: filter[nickName]
          required: false
          description: Equality filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$contains]
          required: false
          description: String contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$icontains]
          required: false
          description: String case-insensitive contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$search]
          required: false
          description: String full-text search filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$startsWith]
          required: false
          description: String startsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$endsWith]
          required: false
          description: String endsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Gender]
          required: false
          description: Equality filter for "Gender"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Gender"
        - name: filter[social]
          required: false
          description: Equality filter for "social"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[Language]
          required: false
          description: Equality filter for "Language"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Language"
        - name: filter[dob]
          required: false
          description: Equality filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lt]
          required: false
          description: Less-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lte]
          required: false
          description: Less-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gt]
          required: false
          description: Greater-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gte]
          required: false
          description: Greater-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[isValidated]
          required: false
          description: Equality filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lt]
          required: false
          description: Less-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lte]
          required: false
          description: Less-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gt]
          required: false
          description: Greater-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gte]
          required: false
          description: Greater-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended]
          required: false
          description: Equality filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lt]
          required: false
          description: Less-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lte]
          required: false
          description: Less-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gt]
          required: false
          description: Greater-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gte]
          required: false
          description: Greater-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Orgs]
          required: false
          description: Equality filter for "Orgs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[manager]
          required: false
          description: Equality filter for "manager"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Team]
          required: false
          description: Equality filter for "Team"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Profiles]
          required: false
          description: Equality filter for "Profiles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Stories]
          required: false
          description: Equality filter for "Stories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todo]
          required: false
          description: Equality filter for "Todo"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TodosAuthor]
          required: false
          description: Equality filter for "TodosAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TasksAuthor]
          required: false
          description: Equality filter for "TasksAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ChangesLogs]
          required: false
          description: Equality filter for "ChangesLogs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Roles]
          required: false
          description: Equality filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$has]
          required: false
          description: Collection contains filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasEvery]
          required: false
          description: Collection contains-all filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasSome]
          required: false
          description: Collection contains-any filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$isEmpty]
          required: false
          description: Collection is empty filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Permissions]
          required: false
          description: Equality filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$has]
          required: false
          description: Collection contains filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasEvery]
          required: false
          description: Collection contains-all filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasSome]
          required: false
          description: Collection contains-any filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$isEmpty]
          required: false
          description: Collection is empty filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Tokens]
          required: false
          description: Equality filter for "Tokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ApiKeys]
          required: false
          description: Equality filter for "ApiKeys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[isTfaEnable]
          required: false
          description: Equality filter for "isTfaEnable"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[tfaSecret]
          required: false
          description: Equality filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$contains]
          required: false
          description: String contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$icontains]
          required: false
          description: String case-insensitive contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$search]
          required: false
          description: String full-text search filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$startsWith]
          required: false
          description: String startsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$endsWith]
          required: false
          description: String endsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userSecret]
          required: false
          description: Equality filter for "userSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[followers]
          required: false
          description: Equality filter for "followers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[followings]
          required: false
          description: Equality filter for "followings"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[posts_liked]
          required: false
          description: Equality filter for "posts_liked"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[passWordFaker]
          required: false
          description: Equality filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$contains]
          required: false
          description: String contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$icontains]
          required: false
          description: String case-insensitive contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$search]
          required: false
          description: String full-text search filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$startsWith]
          required: false
          description: String startsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$endsWith]
          required: false
          description: String endsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-User-relationship-Orgs-put
      description: Update "Orgs" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-User-relationship-Orgs-patch
      description: Update "Orgs" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-User-relationship-Orgs
      description: Create new "Orgs" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/manager:
    get:
      operationId: fetch-User-related-manager
      description: Fetch the related "manager" resource for "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/relationships/manager:
    get:
      operationId: fetch-User-relationship-manager
      description: Fetch the "manager" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-User-relationship-manager-put
      description: Update "manager" relationship for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-User-relationship-manager-patch
      description: Update "manager" relationship for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/Team:
    get:
      operationId: fetch-User-related-Team
      description: Fetch the related "Team" resource for "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName]
          required: false
          description: Equality filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$contains]
          required: false
          description: String contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$icontains]
          required: false
          description: String case-insensitive contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$search]
          required: false
          description: String full-text search filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$startsWith]
          required: false
          description: String startsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$endsWith]
          required: false
          description: String endsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName]
          required: false
          description: Equality filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$contains]
          required: false
          description: String contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$icontains]
          required: false
          description: String case-insensitive contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$search]
          required: false
          description: String full-text search filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$startsWith]
          required: false
          description: String startsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$endsWith]
          required: false
          description: String endsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Title"
        - name: filter[nickName]
          required: false
          description: Equality filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$contains]
          required: false
          description: String contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$icontains]
          required: false
          description: String case-insensitive contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$search]
          required: false
          description: String full-text search filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$startsWith]
          required: false
          description: String startsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$endsWith]
          required: false
          description: String endsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Gender]
          required: false
          description: Equality filter for "Gender"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Gender"
        - name: filter[social]
          required: false
          description: Equality filter for "social"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[Language]
          required: false
          description: Equality filter for "Language"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Language"
        - name: filter[dob]
          required: false
          description: Equality filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lt]
          required: false
          description: Less-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lte]
          required: false
          description: Less-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gt]
          required: false
          description: Greater-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gte]
          required: false
          description: Greater-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[isValidated]
          required: false
          description: Equality filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lt]
          required: false
          description: Less-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lte]
          required: false
          description: Less-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gt]
          required: false
          description: Greater-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gte]
          required: false
          description: Greater-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended]
          required: false
          description: Equality filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lt]
          required: false
          description: Less-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lte]
          required: false
          description: Less-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gt]
          required: false
          description: Greater-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gte]
          required: false
          description: Greater-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Orgs]
          required: false
          description: Equality filter for "Orgs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[manager]
          required: false
          description: Equality filter for "manager"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Team]
          required: false
          description: Equality filter for "Team"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Profiles]
          required: false
          description: Equality filter for "Profiles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Stories]
          required: false
          description: Equality filter for "Stories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todo]
          required: false
          description: Equality filter for "Todo"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TodosAuthor]
          required: false
          description: Equality filter for "TodosAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TasksAuthor]
          required: false
          description: Equality filter for "TasksAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ChangesLogs]
          required: false
          description: Equality filter for "ChangesLogs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Roles]
          required: false
          description: Equality filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$has]
          required: false
          description: Collection contains filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasEvery]
          required: false
          description: Collection contains-all filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasSome]
          required: false
          description: Collection contains-any filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$isEmpty]
          required: false
          description: Collection is empty filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Permissions]
          required: false
          description: Equality filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$has]
          required: false
          description: Collection contains filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasEvery]
          required: false
          description: Collection contains-all filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasSome]
          required: false
          description: Collection contains-any filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$isEmpty]
          required: false
          description: Collection is empty filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Tokens]
          required: false
          description: Equality filter for "Tokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ApiKeys]
          required: false
          description: Equality filter for "ApiKeys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[isTfaEnable]
          required: false
          description: Equality filter for "isTfaEnable"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[tfaSecret]
          required: false
          description: Equality filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$contains]
          required: false
          description: String contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$icontains]
          required: false
          description: String case-insensitive contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$search]
          required: false
          description: String full-text search filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$startsWith]
          required: false
          description: String startsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$endsWith]
          required: false
          description: String endsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userSecret]
          required: false
          description: Equality filter for "userSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[followers]
          required: false
          description: Equality filter for "followers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[followings]
          required: false
          description: Equality filter for "followings"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[posts_liked]
          required: false
          description: Equality filter for "posts_liked"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[passWordFaker]
          required: false
          description: Equality filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$contains]
          required: false
          description: String contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$icontains]
          required: false
          description: String case-insensitive contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$search]
          required: false
          description: String full-text search filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$startsWith]
          required: false
          description: String startsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$endsWith]
          required: false
          description: String endsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/relationships/Team:
    get:
      operationId: fetch-User-relationship-Team
      description: Fetch the "Team" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName]
          required: false
          description: Equality filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$contains]
          required: false
          description: String contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$icontains]
          required: false
          description: String case-insensitive contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$search]
          required: false
          description: String full-text search filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$startsWith]
          required: false
          description: String startsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$endsWith]
          required: false
          description: String endsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName]
          required: false
          description: Equality filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$contains]
          required: false
          description: String contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$icontains]
          required: false
          description: String case-insensitive contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$search]
          required: false
          description: String full-text search filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$startsWith]
          required: false
          description: String startsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$endsWith]
          required: false
          description: String endsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Title"
        - name: filter[nickName]
          required: false
          description: Equality filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$contains]
          required: false
          description: String contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$icontains]
          required: false
          description: String case-insensitive contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$search]
          required: false
          description: String full-text search filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$startsWith]
          required: false
          description: String startsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$endsWith]
          required: false
          description: String endsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Gender]
          required: false
          description: Equality filter for "Gender"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Gender"
        - name: filter[social]
          required: false
          description: Equality filter for "social"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[Language]
          required: false
          description: Equality filter for "Language"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Language"
        - name: filter[dob]
          required: false
          description: Equality filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lt]
          required: false
          description: Less-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lte]
          required: false
          description: Less-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gt]
          required: false
          description: Greater-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gte]
          required: false
          description: Greater-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[isValidated]
          required: false
          description: Equality filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lt]
          required: false
          description: Less-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lte]
          required: false
          description: Less-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gt]
          required: false
          description: Greater-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gte]
          required: false
          description: Greater-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended]
          required: false
          description: Equality filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lt]
          required: false
          description: Less-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lte]
          required: false
          description: Less-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gt]
          required: false
          description: Greater-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gte]
          required: false
          description: Greater-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Orgs]
          required: false
          description: Equality filter for "Orgs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[manager]
          required: false
          description: Equality filter for "manager"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Team]
          required: false
          description: Equality filter for "Team"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Profiles]
          required: false
          description: Equality filter for "Profiles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Stories]
          required: false
          description: Equality filter for "Stories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todo]
          required: false
          description: Equality filter for "Todo"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TodosAuthor]
          required: false
          description: Equality filter for "TodosAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TasksAuthor]
          required: false
          description: Equality filter for "TasksAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ChangesLogs]
          required: false
          description: Equality filter for "ChangesLogs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Roles]
          required: false
          description: Equality filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$has]
          required: false
          description: Collection contains filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasEvery]
          required: false
          description: Collection contains-all filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasSome]
          required: false
          description: Collection contains-any filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$isEmpty]
          required: false
          description: Collection is empty filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Permissions]
          required: false
          description: Equality filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$has]
          required: false
          description: Collection contains filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasEvery]
          required: false
          description: Collection contains-all filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasSome]
          required: false
          description: Collection contains-any filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$isEmpty]
          required: false
          description: Collection is empty filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Tokens]
          required: false
          description: Equality filter for "Tokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ApiKeys]
          required: false
          description: Equality filter for "ApiKeys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[isTfaEnable]
          required: false
          description: Equality filter for "isTfaEnable"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[tfaSecret]
          required: false
          description: Equality filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$contains]
          required: false
          description: String contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$icontains]
          required: false
          description: String case-insensitive contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$search]
          required: false
          description: String full-text search filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$startsWith]
          required: false
          description: String startsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$endsWith]
          required: false
          description: String endsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userSecret]
          required: false
          description: Equality filter for "userSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[followers]
          required: false
          description: Equality filter for "followers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[followings]
          required: false
          description: Equality filter for "followings"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[posts_liked]
          required: false
          description: Equality filter for "posts_liked"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[passWordFaker]
          required: false
          description: Equality filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$contains]
          required: false
          description: String contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$icontains]
          required: false
          description: String case-insensitive contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$search]
          required: false
          description: String full-text search filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$startsWith]
          required: false
          description: String startsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$endsWith]
          required: false
          description: String endsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-User-relationship-Team-put
      description: Update "Team" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-User-relationship-Team-patch
      description: Update "Team" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-User-relationship-Team
      description: Create new "Team" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/Profiles:
    get:
      operationId: fetch-User-related-Profiles
      description: Fetch the related "Profiles" resource for "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName]
          required: false
          description: Equality filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$contains]
          required: false
          description: String contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$icontains]
          required: false
          description: String case-insensitive contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$search]
          required: false
          description: String full-text search filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$startsWith]
          required: false
          description: String startsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$endsWith]
          required: false
          description: String endsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName]
          required: false
          description: Equality filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$contains]
          required: false
          description: String contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$icontains]
          required: false
          description: String case-insensitive contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$search]
          required: false
          description: String full-text search filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$startsWith]
          required: false
          description: String startsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$endsWith]
          required: false
          description: String endsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Title"
        - name: filter[nickName]
          required: false
          description: Equality filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$contains]
          required: false
          description: String contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$icontains]
          required: false
          description: String case-insensitive contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$search]
          required: false
          description: String full-text search filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$startsWith]
          required: false
          description: String startsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$endsWith]
          required: false
          description: String endsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Gender]
          required: false
          description: Equality filter for "Gender"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Gender"
        - name: filter[social]
          required: false
          description: Equality filter for "social"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[Language]
          required: false
          description: Equality filter for "Language"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Language"
        - name: filter[dob]
          required: false
          description: Equality filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lt]
          required: false
          description: Less-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lte]
          required: false
          description: Less-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gt]
          required: false
          description: Greater-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gte]
          required: false
          description: Greater-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[isValidated]
          required: false
          description: Equality filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lt]
          required: false
          description: Less-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lte]
          required: false
          description: Less-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gt]
          required: false
          description: Greater-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gte]
          required: false
          description: Greater-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended]
          required: false
          description: Equality filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lt]
          required: false
          description: Less-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lte]
          required: false
          description: Less-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gt]
          required: false
          description: Greater-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gte]
          required: false
          description: Greater-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Orgs]
          required: false
          description: Equality filter for "Orgs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[manager]
          required: false
          description: Equality filter for "manager"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Team]
          required: false
          description: Equality filter for "Team"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Profiles]
          required: false
          description: Equality filter for "Profiles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Stories]
          required: false
          description: Equality filter for "Stories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todo]
          required: false
          description: Equality filter for "Todo"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TodosAuthor]
          required: false
          description: Equality filter for "TodosAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TasksAuthor]
          required: false
          description: Equality filter for "TasksAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ChangesLogs]
          required: false
          description: Equality filter for "ChangesLogs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Roles]
          required: false
          description: Equality filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$has]
          required: false
          description: Collection contains filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasEvery]
          required: false
          description: Collection contains-all filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasSome]
          required: false
          description: Collection contains-any filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$isEmpty]
          required: false
          description: Collection is empty filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Permissions]
          required: false
          description: Equality filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$has]
          required: false
          description: Collection contains filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasEvery]
          required: false
          description: Collection contains-all filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasSome]
          required: false
          description: Collection contains-any filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$isEmpty]
          required: false
          description: Collection is empty filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Tokens]
          required: false
          description: Equality filter for "Tokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ApiKeys]
          required: false
          description: Equality filter for "ApiKeys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[isTfaEnable]
          required: false
          description: Equality filter for "isTfaEnable"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[tfaSecret]
          required: false
          description: Equality filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$contains]
          required: false
          description: String contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$icontains]
          required: false
          description: String case-insensitive contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$search]
          required: false
          description: String full-text search filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$startsWith]
          required: false
          description: String startsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$endsWith]
          required: false
          description: String endsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userSecret]
          required: false
          description: Equality filter for "userSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[followers]
          required: false
          description: Equality filter for "followers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[followings]
          required: false
          description: Equality filter for "followings"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[posts_liked]
          required: false
          description: Equality filter for "posts_liked"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[passWordFaker]
          required: false
          description: Equality filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$contains]
          required: false
          description: String contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$icontains]
          required: false
          description: String case-insensitive contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$search]
          required: false
          description: String full-text search filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$startsWith]
          required: false
          description: String startsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$endsWith]
          required: false
          description: String endsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ProfileListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/relationships/Profiles:
    get:
      operationId: fetch-User-relationship-Profiles
      description: Fetch the "Profiles" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName]
          required: false
          description: Equality filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$contains]
          required: false
          description: String contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$icontains]
          required: false
          description: String case-insensitive contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$search]
          required: false
          description: String full-text search filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$startsWith]
          required: false
          description: String startsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$endsWith]
          required: false
          description: String endsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName]
          required: false
          description: Equality filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$contains]
          required: false
          description: String contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$icontains]
          required: false
          description: String case-insensitive contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$search]
          required: false
          description: String full-text search filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$startsWith]
          required: false
          description: String startsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$endsWith]
          required: false
          description: String endsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Title"
        - name: filter[nickName]
          required: false
          description: Equality filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$contains]
          required: false
          description: String contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$icontains]
          required: false
          description: String case-insensitive contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$search]
          required: false
          description: String full-text search filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$startsWith]
          required: false
          description: String startsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$endsWith]
          required: false
          description: String endsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Gender]
          required: false
          description: Equality filter for "Gender"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Gender"
        - name: filter[social]
          required: false
          description: Equality filter for "social"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[Language]
          required: false
          description: Equality filter for "Language"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Language"
        - name: filter[dob]
          required: false
          description: Equality filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lt]
          required: false
          description: Less-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lte]
          required: false
          description: Less-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gt]
          required: false
          description: Greater-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gte]
          required: false
          description: Greater-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[isValidated]
          required: false
          description: Equality filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lt]
          required: false
          description: Less-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lte]
          required: false
          description: Less-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gt]
          required: false
          description: Greater-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gte]
          required: false
          description: Greater-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended]
          required: false
          description: Equality filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lt]
          required: false
          description: Less-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lte]
          required: false
          description: Less-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gt]
          required: false
          description: Greater-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gte]
          required: false
          description: Greater-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Orgs]
          required: false
          description: Equality filter for "Orgs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[manager]
          required: false
          description: Equality filter for "manager"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Team]
          required: false
          description: Equality filter for "Team"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Profiles]
          required: false
          description: Equality filter for "Profiles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Stories]
          required: false
          description: Equality filter for "Stories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todo]
          required: false
          description: Equality filter for "Todo"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TodosAuthor]
          required: false
          description: Equality filter for "TodosAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TasksAuthor]
          required: false
          description: Equality filter for "TasksAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ChangesLogs]
          required: false
          description: Equality filter for "ChangesLogs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Roles]
          required: false
          description: Equality filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$has]
          required: false
          description: Collection contains filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasEvery]
          required: false
          description: Collection contains-all filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasSome]
          required: false
          description: Collection contains-any filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$isEmpty]
          required: false
          description: Collection is empty filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Permissions]
          required: false
          description: Equality filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$has]
          required: false
          description: Collection contains filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasEvery]
          required: false
          description: Collection contains-all filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasSome]
          required: false
          description: Collection contains-any filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$isEmpty]
          required: false
          description: Collection is empty filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Tokens]
          required: false
          description: Equality filter for "Tokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ApiKeys]
          required: false
          description: Equality filter for "ApiKeys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[isTfaEnable]
          required: false
          description: Equality filter for "isTfaEnable"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[tfaSecret]
          required: false
          description: Equality filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$contains]
          required: false
          description: String contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$icontains]
          required: false
          description: String case-insensitive contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$search]
          required: false
          description: String full-text search filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$startsWith]
          required: false
          description: String startsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$endsWith]
          required: false
          description: String endsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userSecret]
          required: false
          description: Equality filter for "userSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[followers]
          required: false
          description: Equality filter for "followers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[followings]
          required: false
          description: Equality filter for "followings"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[posts_liked]
          required: false
          description: Equality filter for "posts_liked"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[passWordFaker]
          required: false
          description: Equality filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$contains]
          required: false
          description: String contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$icontains]
          required: false
          description: String case-insensitive contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$search]
          required: false
          description: String full-text search filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$startsWith]
          required: false
          description: String startsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$endsWith]
          required: false
          description: String endsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-User-relationship-Profiles-put
      description: Update "Profiles" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-User-relationship-Profiles-patch
      description: Update "Profiles" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-User-relationship-Profiles
      description: Create new "Profiles" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/Groups:
    get:
      operationId: fetch-User-related-Groups
      description: Fetch the related "Groups" resource for "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName]
          required: false
          description: Equality filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$contains]
          required: false
          description: String contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$icontains]
          required: false
          description: String case-insensitive contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$search]
          required: false
          description: String full-text search filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$startsWith]
          required: false
          description: String startsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$endsWith]
          required: false
          description: String endsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName]
          required: false
          description: Equality filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$contains]
          required: false
          description: String contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$icontains]
          required: false
          description: String case-insensitive contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$search]
          required: false
          description: String full-text search filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$startsWith]
          required: false
          description: String startsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$endsWith]
          required: false
          description: String endsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Title"
        - name: filter[nickName]
          required: false
          description: Equality filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$contains]
          required: false
          description: String contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$icontains]
          required: false
          description: String case-insensitive contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$search]
          required: false
          description: String full-text search filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$startsWith]
          required: false
          description: String startsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$endsWith]
          required: false
          description: String endsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Gender]
          required: false
          description: Equality filter for "Gender"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Gender"
        - name: filter[social]
          required: false
          description: Equality filter for "social"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[Language]
          required: false
          description: Equality filter for "Language"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Language"
        - name: filter[dob]
          required: false
          description: Equality filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lt]
          required: false
          description: Less-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lte]
          required: false
          description: Less-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gt]
          required: false
          description: Greater-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gte]
          required: false
          description: Greater-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[isValidated]
          required: false
          description: Equality filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lt]
          required: false
          description: Less-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lte]
          required: false
          description: Less-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gt]
          required: false
          description: Greater-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gte]
          required: false
          description: Greater-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended]
          required: false
          description: Equality filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lt]
          required: false
          description: Less-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lte]
          required: false
          description: Less-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gt]
          required: false
          description: Greater-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gte]
          required: false
          description: Greater-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Orgs]
          required: false
          description: Equality filter for "Orgs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[manager]
          required: false
          description: Equality filter for "manager"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Team]
          required: false
          description: Equality filter for "Team"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Profiles]
          required: false
          description: Equality filter for "Profiles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Stories]
          required: false
          description: Equality filter for "Stories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todo]
          required: false
          description: Equality filter for "Todo"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TodosAuthor]
          required: false
          description: Equality filter for "TodosAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TasksAuthor]
          required: false
          description: Equality filter for "TasksAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ChangesLogs]
          required: false
          description: Equality filter for "ChangesLogs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Roles]
          required: false
          description: Equality filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$has]
          required: false
          description: Collection contains filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasEvery]
          required: false
          description: Collection contains-all filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasSome]
          required: false
          description: Collection contains-any filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$isEmpty]
          required: false
          description: Collection is empty filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Permissions]
          required: false
          description: Equality filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$has]
          required: false
          description: Collection contains filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasEvery]
          required: false
          description: Collection contains-all filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasSome]
          required: false
          description: Collection contains-any filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$isEmpty]
          required: false
          description: Collection is empty filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Tokens]
          required: false
          description: Equality filter for "Tokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ApiKeys]
          required: false
          description: Equality filter for "ApiKeys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[isTfaEnable]
          required: false
          description: Equality filter for "isTfaEnable"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[tfaSecret]
          required: false
          description: Equality filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$contains]
          required: false
          description: String contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$icontains]
          required: false
          description: String case-insensitive contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$search]
          required: false
          description: String full-text search filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$startsWith]
          required: false
          description: String startsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$endsWith]
          required: false
          description: String endsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userSecret]
          required: false
          description: Equality filter for "userSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[followers]
          required: false
          description: Equality filter for "followers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[followings]
          required: false
          description: Equality filter for "followings"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[posts_liked]
          required: false
          description: Equality filter for "posts_liked"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[passWordFaker]
          required: false
          description: Equality filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$contains]
          required: false
          description: String contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$icontains]
          required: false
          description: String case-insensitive contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$search]
          required: false
          description: String full-text search filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$startsWith]
          required: false
          description: String startsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$endsWith]
          required: false
          description: String endsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GroupListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/relationships/Groups:
    get:
      operationId: fetch-User-relationship-Groups
      description: Fetch the "Groups" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName]
          required: false
          description: Equality filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$contains]
          required: false
          description: String contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$icontains]
          required: false
          description: String case-insensitive contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$search]
          required: false
          description: String full-text search filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$startsWith]
          required: false
          description: String startsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$endsWith]
          required: false
          description: String endsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName]
          required: false
          description: Equality filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$contains]
          required: false
          description: String contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$icontains]
          required: false
          description: String case-insensitive contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$search]
          required: false
          description: String full-text search filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$startsWith]
          required: false
          description: String startsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$endsWith]
          required: false
          description: String endsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Title"
        - name: filter[nickName]
          required: false
          description: Equality filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$contains]
          required: false
          description: String contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$icontains]
          required: false
          description: String case-insensitive contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$search]
          required: false
          description: String full-text search filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$startsWith]
          required: false
          description: String startsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$endsWith]
          required: false
          description: String endsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Gender]
          required: false
          description: Equality filter for "Gender"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Gender"
        - name: filter[social]
          required: false
          description: Equality filter for "social"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[Language]
          required: false
          description: Equality filter for "Language"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Language"
        - name: filter[dob]
          required: false
          description: Equality filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lt]
          required: false
          description: Less-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lte]
          required: false
          description: Less-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gt]
          required: false
          description: Greater-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gte]
          required: false
          description: Greater-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[isValidated]
          required: false
          description: Equality filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lt]
          required: false
          description: Less-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lte]
          required: false
          description: Less-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gt]
          required: false
          description: Greater-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gte]
          required: false
          description: Greater-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended]
          required: false
          description: Equality filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lt]
          required: false
          description: Less-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lte]
          required: false
          description: Less-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gt]
          required: false
          description: Greater-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gte]
          required: false
          description: Greater-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Orgs]
          required: false
          description: Equality filter for "Orgs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[manager]
          required: false
          description: Equality filter for "manager"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Team]
          required: false
          description: Equality filter for "Team"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Profiles]
          required: false
          description: Equality filter for "Profiles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Stories]
          required: false
          description: Equality filter for "Stories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todo]
          required: false
          description: Equality filter for "Todo"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TodosAuthor]
          required: false
          description: Equality filter for "TodosAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TasksAuthor]
          required: false
          description: Equality filter for "TasksAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ChangesLogs]
          required: false
          description: Equality filter for "ChangesLogs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Roles]
          required: false
          description: Equality filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$has]
          required: false
          description: Collection contains filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasEvery]
          required: false
          description: Collection contains-all filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasSome]
          required: false
          description: Collection contains-any filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$isEmpty]
          required: false
          description: Collection is empty filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Permissions]
          required: false
          description: Equality filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$has]
          required: false
          description: Collection contains filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasEvery]
          required: false
          description: Collection contains-all filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasSome]
          required: false
          description: Collection contains-any filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$isEmpty]
          required: false
          description: Collection is empty filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Tokens]
          required: false
          description: Equality filter for "Tokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ApiKeys]
          required: false
          description: Equality filter for "ApiKeys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[isTfaEnable]
          required: false
          description: Equality filter for "isTfaEnable"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[tfaSecret]
          required: false
          description: Equality filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$contains]
          required: false
          description: String contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$icontains]
          required: false
          description: String case-insensitive contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$search]
          required: false
          description: String full-text search filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$startsWith]
          required: false
          description: String startsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$endsWith]
          required: false
          description: String endsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userSecret]
          required: false
          description: Equality filter for "userSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[followers]
          required: false
          description: Equality filter for "followers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[followings]
          required: false
          description: Equality filter for "followings"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[posts_liked]
          required: false
          description: Equality filter for "posts_liked"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[passWordFaker]
          required: false
          description: Equality filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$contains]
          required: false
          description: String contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$icontains]
          required: false
          description: String case-insensitive contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$search]
          required: false
          description: String full-text search filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$startsWith]
          required: false
          description: String startsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$endsWith]
          required: false
          description: String endsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-User-relationship-Groups-put
      description: Update "Groups" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-User-relationship-Groups-patch
      description: Update "Groups" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-User-relationship-Groups
      description: Create new "Groups" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/Posts:
    get:
      operationId: fetch-User-related-Posts
      description: Fetch the related "Posts" resource for "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName]
          required: false
          description: Equality filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$contains]
          required: false
          description: String contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$icontains]
          required: false
          description: String case-insensitive contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$search]
          required: false
          description: String full-text search filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$startsWith]
          required: false
          description: String startsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$endsWith]
          required: false
          description: String endsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName]
          required: false
          description: Equality filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$contains]
          required: false
          description: String contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$icontains]
          required: false
          description: String case-insensitive contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$search]
          required: false
          description: String full-text search filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$startsWith]
          required: false
          description: String startsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$endsWith]
          required: false
          description: String endsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Title"
        - name: filter[nickName]
          required: false
          description: Equality filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$contains]
          required: false
          description: String contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$icontains]
          required: false
          description: String case-insensitive contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$search]
          required: false
          description: String full-text search filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$startsWith]
          required: false
          description: String startsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$endsWith]
          required: false
          description: String endsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Gender]
          required: false
          description: Equality filter for "Gender"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Gender"
        - name: filter[social]
          required: false
          description: Equality filter for "social"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[Language]
          required: false
          description: Equality filter for "Language"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Language"
        - name: filter[dob]
          required: false
          description: Equality filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lt]
          required: false
          description: Less-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lte]
          required: false
          description: Less-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gt]
          required: false
          description: Greater-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gte]
          required: false
          description: Greater-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[isValidated]
          required: false
          description: Equality filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lt]
          required: false
          description: Less-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lte]
          required: false
          description: Less-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gt]
          required: false
          description: Greater-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gte]
          required: false
          description: Greater-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended]
          required: false
          description: Equality filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lt]
          required: false
          description: Less-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lte]
          required: false
          description: Less-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gt]
          required: false
          description: Greater-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gte]
          required: false
          description: Greater-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Orgs]
          required: false
          description: Equality filter for "Orgs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[manager]
          required: false
          description: Equality filter for "manager"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Team]
          required: false
          description: Equality filter for "Team"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Profiles]
          required: false
          description: Equality filter for "Profiles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Stories]
          required: false
          description: Equality filter for "Stories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todo]
          required: false
          description: Equality filter for "Todo"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TodosAuthor]
          required: false
          description: Equality filter for "TodosAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TasksAuthor]
          required: false
          description: Equality filter for "TasksAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ChangesLogs]
          required: false
          description: Equality filter for "ChangesLogs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Roles]
          required: false
          description: Equality filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$has]
          required: false
          description: Collection contains filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasEvery]
          required: false
          description: Collection contains-all filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasSome]
          required: false
          description: Collection contains-any filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$isEmpty]
          required: false
          description: Collection is empty filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Permissions]
          required: false
          description: Equality filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$has]
          required: false
          description: Collection contains filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasEvery]
          required: false
          description: Collection contains-all filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasSome]
          required: false
          description: Collection contains-any filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$isEmpty]
          required: false
          description: Collection is empty filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Tokens]
          required: false
          description: Equality filter for "Tokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ApiKeys]
          required: false
          description: Equality filter for "ApiKeys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[isTfaEnable]
          required: false
          description: Equality filter for "isTfaEnable"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[tfaSecret]
          required: false
          description: Equality filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$contains]
          required: false
          description: String contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$icontains]
          required: false
          description: String case-insensitive contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$search]
          required: false
          description: String full-text search filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$startsWith]
          required: false
          description: String startsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$endsWith]
          required: false
          description: String endsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userSecret]
          required: false
          description: Equality filter for "userSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[followers]
          required: false
          description: Equality filter for "followers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[followings]
          required: false
          description: Equality filter for "followings"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[posts_liked]
          required: false
          description: Equality filter for "posts_liked"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[passWordFaker]
          required: false
          description: Equality filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$contains]
          required: false
          description: String contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$icontains]
          required: false
          description: String case-insensitive contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$search]
          required: false
          description: String full-text search filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$startsWith]
          required: false
          description: String startsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$endsWith]
          required: false
          description: String endsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/PostListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/relationships/Posts:
    get:
      operationId: fetch-User-relationship-Posts
      description: Fetch the "Posts" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName]
          required: false
          description: Equality filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$contains]
          required: false
          description: String contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$icontains]
          required: false
          description: String case-insensitive contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$search]
          required: false
          description: String full-text search filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$startsWith]
          required: false
          description: String startsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$endsWith]
          required: false
          description: String endsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName]
          required: false
          description: Equality filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$contains]
          required: false
          description: String contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$icontains]
          required: false
          description: String case-insensitive contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$search]
          required: false
          description: String full-text search filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$startsWith]
          required: false
          description: String startsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$endsWith]
          required: false
          description: String endsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Title"
        - name: filter[nickName]
          required: false
          description: Equality filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$contains]
          required: false
          description: String contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$icontains]
          required: false
          description: String case-insensitive contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$search]
          required: false
          description: String full-text search filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$startsWith]
          required: false
          description: String startsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$endsWith]
          required: false
          description: String endsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Gender]
          required: false
          description: Equality filter for "Gender"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Gender"
        - name: filter[social]
          required: false
          description: Equality filter for "social"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[Language]
          required: false
          description: Equality filter for "Language"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Language"
        - name: filter[dob]
          required: false
          description: Equality filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lt]
          required: false
          description: Less-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lte]
          required: false
          description: Less-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gt]
          required: false
          description: Greater-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gte]
          required: false
          description: Greater-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[isValidated]
          required: false
          description: Equality filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lt]
          required: false
          description: Less-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lte]
          required: false
          description: Less-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gt]
          required: false
          description: Greater-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gte]
          required: false
          description: Greater-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended]
          required: false
          description: Equality filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lt]
          required: false
          description: Less-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lte]
          required: false
          description: Less-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gt]
          required: false
          description: Greater-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gte]
          required: false
          description: Greater-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Orgs]
          required: false
          description: Equality filter for "Orgs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[manager]
          required: false
          description: Equality filter for "manager"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Team]
          required: false
          description: Equality filter for "Team"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Profiles]
          required: false
          description: Equality filter for "Profiles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Stories]
          required: false
          description: Equality filter for "Stories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todo]
          required: false
          description: Equality filter for "Todo"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TodosAuthor]
          required: false
          description: Equality filter for "TodosAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TasksAuthor]
          required: false
          description: Equality filter for "TasksAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ChangesLogs]
          required: false
          description: Equality filter for "ChangesLogs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Roles]
          required: false
          description: Equality filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$has]
          required: false
          description: Collection contains filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasEvery]
          required: false
          description: Collection contains-all filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasSome]
          required: false
          description: Collection contains-any filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$isEmpty]
          required: false
          description: Collection is empty filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Permissions]
          required: false
          description: Equality filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$has]
          required: false
          description: Collection contains filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasEvery]
          required: false
          description: Collection contains-all filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasSome]
          required: false
          description: Collection contains-any filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$isEmpty]
          required: false
          description: Collection is empty filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Tokens]
          required: false
          description: Equality filter for "Tokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ApiKeys]
          required: false
          description: Equality filter for "ApiKeys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[isTfaEnable]
          required: false
          description: Equality filter for "isTfaEnable"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[tfaSecret]
          required: false
          description: Equality filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$contains]
          required: false
          description: String contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$icontains]
          required: false
          description: String case-insensitive contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$search]
          required: false
          description: String full-text search filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$startsWith]
          required: false
          description: String startsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$endsWith]
          required: false
          description: String endsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userSecret]
          required: false
          description: Equality filter for "userSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[followers]
          required: false
          description: Equality filter for "followers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[followings]
          required: false
          description: Equality filter for "followings"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[posts_liked]
          required: false
          description: Equality filter for "posts_liked"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[passWordFaker]
          required: false
          description: Equality filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$contains]
          required: false
          description: String contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$icontains]
          required: false
          description: String case-insensitive contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$search]
          required: false
          description: String full-text search filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$startsWith]
          required: false
          description: String startsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$endsWith]
          required: false
          description: String endsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-User-relationship-Posts-put
      description: Update "Posts" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-User-relationship-Posts-patch
      description: Update "Posts" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-User-relationship-Posts
      description: Create new "Posts" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/Comments:
    get:
      operationId: fetch-User-related-Comments
      description: Fetch the related "Comments" resource for "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName]
          required: false
          description: Equality filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$contains]
          required: false
          description: String contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$icontains]
          required: false
          description: String case-insensitive contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$search]
          required: false
          description: String full-text search filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$startsWith]
          required: false
          description: String startsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$endsWith]
          required: false
          description: String endsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName]
          required: false
          description: Equality filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$contains]
          required: false
          description: String contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$icontains]
          required: false
          description: String case-insensitive contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$search]
          required: false
          description: String full-text search filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$startsWith]
          required: false
          description: String startsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$endsWith]
          required: false
          description: String endsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Title"
        - name: filter[nickName]
          required: false
          description: Equality filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$contains]
          required: false
          description: String contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$icontains]
          required: false
          description: String case-insensitive contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$search]
          required: false
          description: String full-text search filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$startsWith]
          required: false
          description: String startsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$endsWith]
          required: false
          description: String endsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Gender]
          required: false
          description: Equality filter for "Gender"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Gender"
        - name: filter[social]
          required: false
          description: Equality filter for "social"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[Language]
          required: false
          description: Equality filter for "Language"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Language"
        - name: filter[dob]
          required: false
          description: Equality filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lt]
          required: false
          description: Less-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lte]
          required: false
          description: Less-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gt]
          required: false
          description: Greater-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gte]
          required: false
          description: Greater-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[isValidated]
          required: false
          description: Equality filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lt]
          required: false
          description: Less-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lte]
          required: false
          description: Less-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gt]
          required: false
          description: Greater-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gte]
          required: false
          description: Greater-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended]
          required: false
          description: Equality filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lt]
          required: false
          description: Less-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lte]
          required: false
          description: Less-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gt]
          required: false
          description: Greater-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gte]
          required: false
          description: Greater-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Orgs]
          required: false
          description: Equality filter for "Orgs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[manager]
          required: false
          description: Equality filter for "manager"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Team]
          required: false
          description: Equality filter for "Team"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Profiles]
          required: false
          description: Equality filter for "Profiles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Stories]
          required: false
          description: Equality filter for "Stories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todo]
          required: false
          description: Equality filter for "Todo"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TodosAuthor]
          required: false
          description: Equality filter for "TodosAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TasksAuthor]
          required: false
          description: Equality filter for "TasksAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ChangesLogs]
          required: false
          description: Equality filter for "ChangesLogs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Roles]
          required: false
          description: Equality filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$has]
          required: false
          description: Collection contains filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasEvery]
          required: false
          description: Collection contains-all filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasSome]
          required: false
          description: Collection contains-any filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$isEmpty]
          required: false
          description: Collection is empty filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Permissions]
          required: false
          description: Equality filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$has]
          required: false
          description: Collection contains filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasEvery]
          required: false
          description: Collection contains-all filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasSome]
          required: false
          description: Collection contains-any filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$isEmpty]
          required: false
          description: Collection is empty filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Tokens]
          required: false
          description: Equality filter for "Tokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ApiKeys]
          required: false
          description: Equality filter for "ApiKeys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[isTfaEnable]
          required: false
          description: Equality filter for "isTfaEnable"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[tfaSecret]
          required: false
          description: Equality filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$contains]
          required: false
          description: String contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$icontains]
          required: false
          description: String case-insensitive contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$search]
          required: false
          description: String full-text search filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$startsWith]
          required: false
          description: String startsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$endsWith]
          required: false
          description: String endsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userSecret]
          required: false
          description: Equality filter for "userSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[followers]
          required: false
          description: Equality filter for "followers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[followings]
          required: false
          description: Equality filter for "followings"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[posts_liked]
          required: false
          description: Equality filter for "posts_liked"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[passWordFaker]
          required: false
          description: Equality filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$contains]
          required: false
          description: String contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$icontains]
          required: false
          description: String case-insensitive contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$search]
          required: false
          description: String full-text search filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$startsWith]
          required: false
          description: String startsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$endsWith]
          required: false
          description: String endsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/CommentListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/relationships/Comments:
    get:
      operationId: fetch-User-relationship-Comments
      description: Fetch the "Comments" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName]
          required: false
          description: Equality filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$contains]
          required: false
          description: String contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$icontains]
          required: false
          description: String case-insensitive contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$search]
          required: false
          description: String full-text search filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$startsWith]
          required: false
          description: String startsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$endsWith]
          required: false
          description: String endsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName]
          required: false
          description: Equality filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$contains]
          required: false
          description: String contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$icontains]
          required: false
          description: String case-insensitive contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$search]
          required: false
          description: String full-text search filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$startsWith]
          required: false
          description: String startsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$endsWith]
          required: false
          description: String endsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Title"
        - name: filter[nickName]
          required: false
          description: Equality filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$contains]
          required: false
          description: String contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$icontains]
          required: false
          description: String case-insensitive contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$search]
          required: false
          description: String full-text search filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$startsWith]
          required: false
          description: String startsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$endsWith]
          required: false
          description: String endsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Gender]
          required: false
          description: Equality filter for "Gender"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Gender"
        - name: filter[social]
          required: false
          description: Equality filter for "social"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[Language]
          required: false
          description: Equality filter for "Language"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Language"
        - name: filter[dob]
          required: false
          description: Equality filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lt]
          required: false
          description: Less-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lte]
          required: false
          description: Less-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gt]
          required: false
          description: Greater-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gte]
          required: false
          description: Greater-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[isValidated]
          required: false
          description: Equality filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lt]
          required: false
          description: Less-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lte]
          required: false
          description: Less-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gt]
          required: false
          description: Greater-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gte]
          required: false
          description: Greater-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended]
          required: false
          description: Equality filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lt]
          required: false
          description: Less-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lte]
          required: false
          description: Less-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gt]
          required: false
          description: Greater-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gte]
          required: false
          description: Greater-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Orgs]
          required: false
          description: Equality filter for "Orgs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[manager]
          required: false
          description: Equality filter for "manager"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Team]
          required: false
          description: Equality filter for "Team"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Profiles]
          required: false
          description: Equality filter for "Profiles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Stories]
          required: false
          description: Equality filter for "Stories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todo]
          required: false
          description: Equality filter for "Todo"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TodosAuthor]
          required: false
          description: Equality filter for "TodosAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TasksAuthor]
          required: false
          description: Equality filter for "TasksAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ChangesLogs]
          required: false
          description: Equality filter for "ChangesLogs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Roles]
          required: false
          description: Equality filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$has]
          required: false
          description: Collection contains filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasEvery]
          required: false
          description: Collection contains-all filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasSome]
          required: false
          description: Collection contains-any filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$isEmpty]
          required: false
          description: Collection is empty filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Permissions]
          required: false
          description: Equality filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$has]
          required: false
          description: Collection contains filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasEvery]
          required: false
          description: Collection contains-all filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasSome]
          required: false
          description: Collection contains-any filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$isEmpty]
          required: false
          description: Collection is empty filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Tokens]
          required: false
          description: Equality filter for "Tokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ApiKeys]
          required: false
          description: Equality filter for "ApiKeys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[isTfaEnable]
          required: false
          description: Equality filter for "isTfaEnable"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[tfaSecret]
          required: false
          description: Equality filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$contains]
          required: false
          description: String contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$icontains]
          required: false
          description: String case-insensitive contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$search]
          required: false
          description: String full-text search filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$startsWith]
          required: false
          description: String startsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$endsWith]
          required: false
          description: String endsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userSecret]
          required: false
          description: Equality filter for "userSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[followers]
          required: false
          description: Equality filter for "followers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[followings]
          required: false
          description: Equality filter for "followings"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[posts_liked]
          required: false
          description: Equality filter for "posts_liked"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[passWordFaker]
          required: false
          description: Equality filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$contains]
          required: false
          description: String contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$icontains]
          required: false
          description: String case-insensitive contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$search]
          required: false
          description: String full-text search filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$startsWith]
          required: false
          description: String startsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$endsWith]
          required: false
          description: String endsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-User-relationship-Comments-put
      description: Update "Comments" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-User-relationship-Comments-patch
      description: Update "Comments" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-User-relationship-Comments
      description: Create new "Comments" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/Stories:
    get:
      operationId: fetch-User-related-Stories
      description: Fetch the related "Stories" resource for "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName]
          required: false
          description: Equality filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$contains]
          required: false
          description: String contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$icontains]
          required: false
          description: String case-insensitive contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$search]
          required: false
          description: String full-text search filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$startsWith]
          required: false
          description: String startsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$endsWith]
          required: false
          description: String endsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName]
          required: false
          description: Equality filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$contains]
          required: false
          description: String contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$icontains]
          required: false
          description: String case-insensitive contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$search]
          required: false
          description: String full-text search filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$startsWith]
          required: false
          description: String startsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$endsWith]
          required: false
          description: String endsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Title"
        - name: filter[nickName]
          required: false
          description: Equality filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$contains]
          required: false
          description: String contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$icontains]
          required: false
          description: String case-insensitive contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$search]
          required: false
          description: String full-text search filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$startsWith]
          required: false
          description: String startsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$endsWith]
          required: false
          description: String endsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Gender]
          required: false
          description: Equality filter for "Gender"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Gender"
        - name: filter[social]
          required: false
          description: Equality filter for "social"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[Language]
          required: false
          description: Equality filter for "Language"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Language"
        - name: filter[dob]
          required: false
          description: Equality filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lt]
          required: false
          description: Less-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lte]
          required: false
          description: Less-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gt]
          required: false
          description: Greater-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gte]
          required: false
          description: Greater-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[isValidated]
          required: false
          description: Equality filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lt]
          required: false
          description: Less-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lte]
          required: false
          description: Less-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gt]
          required: false
          description: Greater-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gte]
          required: false
          description: Greater-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended]
          required: false
          description: Equality filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lt]
          required: false
          description: Less-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lte]
          required: false
          description: Less-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gt]
          required: false
          description: Greater-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gte]
          required: false
          description: Greater-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Orgs]
          required: false
          description: Equality filter for "Orgs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[manager]
          required: false
          description: Equality filter for "manager"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Team]
          required: false
          description: Equality filter for "Team"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Profiles]
          required: false
          description: Equality filter for "Profiles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Stories]
          required: false
          description: Equality filter for "Stories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todo]
          required: false
          description: Equality filter for "Todo"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TodosAuthor]
          required: false
          description: Equality filter for "TodosAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TasksAuthor]
          required: false
          description: Equality filter for "TasksAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ChangesLogs]
          required: false
          description: Equality filter for "ChangesLogs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Roles]
          required: false
          description: Equality filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$has]
          required: false
          description: Collection contains filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasEvery]
          required: false
          description: Collection contains-all filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasSome]
          required: false
          description: Collection contains-any filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$isEmpty]
          required: false
          description: Collection is empty filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Permissions]
          required: false
          description: Equality filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$has]
          required: false
          description: Collection contains filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasEvery]
          required: false
          description: Collection contains-all filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasSome]
          required: false
          description: Collection contains-any filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$isEmpty]
          required: false
          description: Collection is empty filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Tokens]
          required: false
          description: Equality filter for "Tokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ApiKeys]
          required: false
          description: Equality filter for "ApiKeys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[isTfaEnable]
          required: false
          description: Equality filter for "isTfaEnable"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[tfaSecret]
          required: false
          description: Equality filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$contains]
          required: false
          description: String contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$icontains]
          required: false
          description: String case-insensitive contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$search]
          required: false
          description: String full-text search filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$startsWith]
          required: false
          description: String startsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$endsWith]
          required: false
          description: String endsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userSecret]
          required: false
          description: Equality filter for "userSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[followers]
          required: false
          description: Equality filter for "followers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[followings]
          required: false
          description: Equality filter for "followings"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[posts_liked]
          required: false
          description: Equality filter for "posts_liked"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[passWordFaker]
          required: false
          description: Equality filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$contains]
          required: false
          description: String contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$icontains]
          required: false
          description: String case-insensitive contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$search]
          required: false
          description: String full-text search filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$startsWith]
          required: false
          description: String startsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$endsWith]
          required: false
          description: String endsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/StoryListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/relationships/Stories:
    get:
      operationId: fetch-User-relationship-Stories
      description: Fetch the "Stories" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName]
          required: false
          description: Equality filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$contains]
          required: false
          description: String contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$icontains]
          required: false
          description: String case-insensitive contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$search]
          required: false
          description: String full-text search filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$startsWith]
          required: false
          description: String startsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$endsWith]
          required: false
          description: String endsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName]
          required: false
          description: Equality filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$contains]
          required: false
          description: String contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$icontains]
          required: false
          description: String case-insensitive contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$search]
          required: false
          description: String full-text search filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$startsWith]
          required: false
          description: String startsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$endsWith]
          required: false
          description: String endsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Title"
        - name: filter[nickName]
          required: false
          description: Equality filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$contains]
          required: false
          description: String contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$icontains]
          required: false
          description: String case-insensitive contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$search]
          required: false
          description: String full-text search filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$startsWith]
          required: false
          description: String startsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$endsWith]
          required: false
          description: String endsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Gender]
          required: false
          description: Equality filter for "Gender"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Gender"
        - name: filter[social]
          required: false
          description: Equality filter for "social"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[Language]
          required: false
          description: Equality filter for "Language"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Language"
        - name: filter[dob]
          required: false
          description: Equality filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lt]
          required: false
          description: Less-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lte]
          required: false
          description: Less-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gt]
          required: false
          description: Greater-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gte]
          required: false
          description: Greater-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[isValidated]
          required: false
          description: Equality filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lt]
          required: false
          description: Less-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lte]
          required: false
          description: Less-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gt]
          required: false
          description: Greater-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gte]
          required: false
          description: Greater-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended]
          required: false
          description: Equality filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lt]
          required: false
          description: Less-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lte]
          required: false
          description: Less-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gt]
          required: false
          description: Greater-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gte]
          required: false
          description: Greater-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Orgs]
          required: false
          description: Equality filter for "Orgs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[manager]
          required: false
          description: Equality filter for "manager"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Team]
          required: false
          description: Equality filter for "Team"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Profiles]
          required: false
          description: Equality filter for "Profiles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Stories]
          required: false
          description: Equality filter for "Stories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todo]
          required: false
          description: Equality filter for "Todo"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TodosAuthor]
          required: false
          description: Equality filter for "TodosAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TasksAuthor]
          required: false
          description: Equality filter for "TasksAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ChangesLogs]
          required: false
          description: Equality filter for "ChangesLogs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Roles]
          required: false
          description: Equality filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$has]
          required: false
          description: Collection contains filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasEvery]
          required: false
          description: Collection contains-all filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasSome]
          required: false
          description: Collection contains-any filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$isEmpty]
          required: false
          description: Collection is empty filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Permissions]
          required: false
          description: Equality filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$has]
          required: false
          description: Collection contains filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasEvery]
          required: false
          description: Collection contains-all filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasSome]
          required: false
          description: Collection contains-any filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$isEmpty]
          required: false
          description: Collection is empty filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Tokens]
          required: false
          description: Equality filter for "Tokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ApiKeys]
          required: false
          description: Equality filter for "ApiKeys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[isTfaEnable]
          required: false
          description: Equality filter for "isTfaEnable"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[tfaSecret]
          required: false
          description: Equality filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$contains]
          required: false
          description: String contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$icontains]
          required: false
          description: String case-insensitive contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$search]
          required: false
          description: String full-text search filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$startsWith]
          required: false
          description: String startsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$endsWith]
          required: false
          description: String endsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userSecret]
          required: false
          description: Equality filter for "userSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[followers]
          required: false
          description: Equality filter for "followers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[followings]
          required: false
          description: Equality filter for "followings"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[posts_liked]
          required: false
          description: Equality filter for "posts_liked"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[passWordFaker]
          required: false
          description: Equality filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$contains]
          required: false
          description: String contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$icontains]
          required: false
          description: String case-insensitive contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$search]
          required: false
          description: String full-text search filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$startsWith]
          required: false
          description: String startsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$endsWith]
          required: false
          description: String endsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-User-relationship-Stories-put
      description: Update "Stories" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-User-relationship-Stories-patch
      description: Update "Stories" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-User-relationship-Stories
      description: Create new "Stories" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/Todo:
    get:
      operationId: fetch-User-related-Todo
      description: Fetch the related "Todo" resource for "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName]
          required: false
          description: Equality filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$contains]
          required: false
          description: String contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$icontains]
          required: false
          description: String case-insensitive contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$search]
          required: false
          description: String full-text search filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$startsWith]
          required: false
          description: String startsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$endsWith]
          required: false
          description: String endsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName]
          required: false
          description: Equality filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$contains]
          required: false
          description: String contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$icontains]
          required: false
          description: String case-insensitive contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$search]
          required: false
          description: String full-text search filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$startsWith]
          required: false
          description: String startsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$endsWith]
          required: false
          description: String endsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Title"
        - name: filter[nickName]
          required: false
          description: Equality filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$contains]
          required: false
          description: String contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$icontains]
          required: false
          description: String case-insensitive contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$search]
          required: false
          description: String full-text search filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$startsWith]
          required: false
          description: String startsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$endsWith]
          required: false
          description: String endsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Gender]
          required: false
          description: Equality filter for "Gender"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Gender"
        - name: filter[social]
          required: false
          description: Equality filter for "social"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[Language]
          required: false
          description: Equality filter for "Language"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Language"
        - name: filter[dob]
          required: false
          description: Equality filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lt]
          required: false
          description: Less-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lte]
          required: false
          description: Less-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gt]
          required: false
          description: Greater-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gte]
          required: false
          description: Greater-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[isValidated]
          required: false
          description: Equality filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lt]
          required: false
          description: Less-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lte]
          required: false
          description: Less-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gt]
          required: false
          description: Greater-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gte]
          required: false
          description: Greater-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended]
          required: false
          description: Equality filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lt]
          required: false
          description: Less-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lte]
          required: false
          description: Less-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gt]
          required: false
          description: Greater-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gte]
          required: false
          description: Greater-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Orgs]
          required: false
          description: Equality filter for "Orgs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[manager]
          required: false
          description: Equality filter for "manager"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Team]
          required: false
          description: Equality filter for "Team"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Profiles]
          required: false
          description: Equality filter for "Profiles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Stories]
          required: false
          description: Equality filter for "Stories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todo]
          required: false
          description: Equality filter for "Todo"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TodosAuthor]
          required: false
          description: Equality filter for "TodosAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TasksAuthor]
          required: false
          description: Equality filter for "TasksAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ChangesLogs]
          required: false
          description: Equality filter for "ChangesLogs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Roles]
          required: false
          description: Equality filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$has]
          required: false
          description: Collection contains filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasEvery]
          required: false
          description: Collection contains-all filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasSome]
          required: false
          description: Collection contains-any filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$isEmpty]
          required: false
          description: Collection is empty filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Permissions]
          required: false
          description: Equality filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$has]
          required: false
          description: Collection contains filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasEvery]
          required: false
          description: Collection contains-all filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasSome]
          required: false
          description: Collection contains-any filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$isEmpty]
          required: false
          description: Collection is empty filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Tokens]
          required: false
          description: Equality filter for "Tokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ApiKeys]
          required: false
          description: Equality filter for "ApiKeys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[isTfaEnable]
          required: false
          description: Equality filter for "isTfaEnable"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[tfaSecret]
          required: false
          description: Equality filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$contains]
          required: false
          description: String contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$icontains]
          required: false
          description: String case-insensitive contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$search]
          required: false
          description: String full-text search filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$startsWith]
          required: false
          description: String startsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$endsWith]
          required: false
          description: String endsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userSecret]
          required: false
          description: Equality filter for "userSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[followers]
          required: false
          description: Equality filter for "followers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[followings]
          required: false
          description: Equality filter for "followings"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[posts_liked]
          required: false
          description: Equality filter for "posts_liked"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[passWordFaker]
          required: false
          description: Equality filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$contains]
          required: false
          description: String contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$icontains]
          required: false
          description: String case-insensitive contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$search]
          required: false
          description: String full-text search filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$startsWith]
          required: false
          description: String startsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$endsWith]
          required: false
          description: String endsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserTodoLinkListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/relationships/Todo:
    get:
      operationId: fetch-User-relationship-Todo
      description: Fetch the "Todo" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName]
          required: false
          description: Equality filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$contains]
          required: false
          description: String contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$icontains]
          required: false
          description: String case-insensitive contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$search]
          required: false
          description: String full-text search filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$startsWith]
          required: false
          description: String startsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$endsWith]
          required: false
          description: String endsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName]
          required: false
          description: Equality filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$contains]
          required: false
          description: String contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$icontains]
          required: false
          description: String case-insensitive contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$search]
          required: false
          description: String full-text search filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$startsWith]
          required: false
          description: String startsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$endsWith]
          required: false
          description: String endsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Title"
        - name: filter[nickName]
          required: false
          description: Equality filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$contains]
          required: false
          description: String contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$icontains]
          required: false
          description: String case-insensitive contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$search]
          required: false
          description: String full-text search filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$startsWith]
          required: false
          description: String startsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$endsWith]
          required: false
          description: String endsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Gender]
          required: false
          description: Equality filter for "Gender"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Gender"
        - name: filter[social]
          required: false
          description: Equality filter for "social"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[Language]
          required: false
          description: Equality filter for "Language"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Language"
        - name: filter[dob]
          required: false
          description: Equality filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lt]
          required: false
          description: Less-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lte]
          required: false
          description: Less-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gt]
          required: false
          description: Greater-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gte]
          required: false
          description: Greater-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[isValidated]
          required: false
          description: Equality filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lt]
          required: false
          description: Less-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lte]
          required: false
          description: Less-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gt]
          required: false
          description: Greater-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gte]
          required: false
          description: Greater-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended]
          required: false
          description: Equality filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lt]
          required: false
          description: Less-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lte]
          required: false
          description: Less-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gt]
          required: false
          description: Greater-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gte]
          required: false
          description: Greater-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Orgs]
          required: false
          description: Equality filter for "Orgs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[manager]
          required: false
          description: Equality filter for "manager"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Team]
          required: false
          description: Equality filter for "Team"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Profiles]
          required: false
          description: Equality filter for "Profiles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Stories]
          required: false
          description: Equality filter for "Stories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todo]
          required: false
          description: Equality filter for "Todo"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TodosAuthor]
          required: false
          description: Equality filter for "TodosAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TasksAuthor]
          required: false
          description: Equality filter for "TasksAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ChangesLogs]
          required: false
          description: Equality filter for "ChangesLogs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Roles]
          required: false
          description: Equality filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$has]
          required: false
          description: Collection contains filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasEvery]
          required: false
          description: Collection contains-all filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasSome]
          required: false
          description: Collection contains-any filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$isEmpty]
          required: false
          description: Collection is empty filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Permissions]
          required: false
          description: Equality filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$has]
          required: false
          description: Collection contains filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasEvery]
          required: false
          description: Collection contains-all filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasSome]
          required: false
          description: Collection contains-any filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$isEmpty]
          required: false
          description: Collection is empty filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Tokens]
          required: false
          description: Equality filter for "Tokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ApiKeys]
          required: false
          description: Equality filter for "ApiKeys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[isTfaEnable]
          required: false
          description: Equality filter for "isTfaEnable"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[tfaSecret]
          required: false
          description: Equality filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$contains]
          required: false
          description: String contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$icontains]
          required: false
          description: String case-insensitive contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$search]
          required: false
          description: String full-text search filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$startsWith]
          required: false
          description: String startsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$endsWith]
          required: false
          description: String endsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userSecret]
          required: false
          description: Equality filter for "userSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[followers]
          required: false
          description: Equality filter for "followers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[followings]
          required: false
          description: Equality filter for "followings"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[posts_liked]
          required: false
          description: Equality filter for "posts_liked"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[passWordFaker]
          required: false
          description: Equality filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$contains]
          required: false
          description: String contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$icontains]
          required: false
          description: String case-insensitive contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$search]
          required: false
          description: String full-text search filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$startsWith]
          required: false
          description: String startsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$endsWith]
          required: false
          description: String endsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-User-relationship-Todo-put
      description: Update "Todo" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-User-relationship-Todo-patch
      description: Update "Todo" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-User-relationship-Todo
      description: Create new "Todo" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/TodosAuthor:
    get:
      operationId: fetch-User-related-TodosAuthor
      description: Fetch the related "TodosAuthor" resource for "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName]
          required: false
          description: Equality filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$contains]
          required: false
          description: String contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$icontains]
          required: false
          description: String case-insensitive contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$search]
          required: false
          description: String full-text search filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$startsWith]
          required: false
          description: String startsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$endsWith]
          required: false
          description: String endsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName]
          required: false
          description: Equality filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$contains]
          required: false
          description: String contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$icontains]
          required: false
          description: String case-insensitive contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$search]
          required: false
          description: String full-text search filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$startsWith]
          required: false
          description: String startsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$endsWith]
          required: false
          description: String endsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Title"
        - name: filter[nickName]
          required: false
          description: Equality filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$contains]
          required: false
          description: String contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$icontains]
          required: false
          description: String case-insensitive contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$search]
          required: false
          description: String full-text search filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$startsWith]
          required: false
          description: String startsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$endsWith]
          required: false
          description: String endsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Gender]
          required: false
          description: Equality filter for "Gender"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Gender"
        - name: filter[social]
          required: false
          description: Equality filter for "social"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[Language]
          required: false
          description: Equality filter for "Language"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Language"
        - name: filter[dob]
          required: false
          description: Equality filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lt]
          required: false
          description: Less-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lte]
          required: false
          description: Less-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gt]
          required: false
          description: Greater-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gte]
          required: false
          description: Greater-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[isValidated]
          required: false
          description: Equality filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lt]
          required: false
          description: Less-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lte]
          required: false
          description: Less-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gt]
          required: false
          description: Greater-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gte]
          required: false
          description: Greater-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended]
          required: false
          description: Equality filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lt]
          required: false
          description: Less-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lte]
          required: false
          description: Less-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gt]
          required: false
          description: Greater-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gte]
          required: false
          description: Greater-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Orgs]
          required: false
          description: Equality filter for "Orgs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[manager]
          required: false
          description: Equality filter for "manager"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Team]
          required: false
          description: Equality filter for "Team"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Profiles]
          required: false
          description: Equality filter for "Profiles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Stories]
          required: false
          description: Equality filter for "Stories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todo]
          required: false
          description: Equality filter for "Todo"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TodosAuthor]
          required: false
          description: Equality filter for "TodosAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TasksAuthor]
          required: false
          description: Equality filter for "TasksAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ChangesLogs]
          required: false
          description: Equality filter for "ChangesLogs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Roles]
          required: false
          description: Equality filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$has]
          required: false
          description: Collection contains filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasEvery]
          required: false
          description: Collection contains-all filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasSome]
          required: false
          description: Collection contains-any filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$isEmpty]
          required: false
          description: Collection is empty filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Permissions]
          required: false
          description: Equality filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$has]
          required: false
          description: Collection contains filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasEvery]
          required: false
          description: Collection contains-all filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasSome]
          required: false
          description: Collection contains-any filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$isEmpty]
          required: false
          description: Collection is empty filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Tokens]
          required: false
          description: Equality filter for "Tokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ApiKeys]
          required: false
          description: Equality filter for "ApiKeys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[isTfaEnable]
          required: false
          description: Equality filter for "isTfaEnable"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[tfaSecret]
          required: false
          description: Equality filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$contains]
          required: false
          description: String contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$icontains]
          required: false
          description: String case-insensitive contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$search]
          required: false
          description: String full-text search filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$startsWith]
          required: false
          description: String startsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$endsWith]
          required: false
          description: String endsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userSecret]
          required: false
          description: Equality filter for "userSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[followers]
          required: false
          description: Equality filter for "followers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[followings]
          required: false
          description: Equality filter for "followings"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[posts_liked]
          required: false
          description: Equality filter for "posts_liked"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[passWordFaker]
          required: false
          description: Equality filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$contains]
          required: false
          description: String contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$icontains]
          required: false
          description: String case-insensitive contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$search]
          required: false
          description: String full-text search filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$startsWith]
          required: false
          description: String startsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$endsWith]
          required: false
          description: String endsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/TodoListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/relationships/TodosAuthor:
    get:
      operationId: fetch-User-relationship-TodosAuthor
      description: Fetch the "TodosAuthor" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName]
          required: false
          description: Equality filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$contains]
          required: false
          description: String contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$icontains]
          required: false
          description: String case-insensitive contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$search]
          required: false
          description: String full-text search filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$startsWith]
          required: false
          description: String startsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$endsWith]
          required: false
          description: String endsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName]
          required: false
          description: Equality filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$contains]
          required: false
          description: String contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$icontains]
          required: false
          description: String case-insensitive contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$search]
          required: false
          description: String full-text search filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$startsWith]
          required: false
          description: String startsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$endsWith]
          required: false
          description: String endsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Title"
        - name: filter[nickName]
          required: false
          description: Equality filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$contains]
          required: false
          description: String contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$icontains]
          required: false
          description: String case-insensitive contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$search]
          required: false
          description: String full-text search filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$startsWith]
          required: false
          description: String startsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$endsWith]
          required: false
          description: String endsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Gender]
          required: false
          description: Equality filter for "Gender"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Gender"
        - name: filter[social]
          required: false
          description: Equality filter for "social"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[Language]
          required: false
          description: Equality filter for "Language"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Language"
        - name: filter[dob]
          required: false
          description: Equality filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lt]
          required: false
          description: Less-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lte]
          required: false
          description: Less-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gt]
          required: false
          description: Greater-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gte]
          required: false
          description: Greater-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[isValidated]
          required: false
          description: Equality filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lt]
          required: false
          description: Less-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lte]
          required: false
          description: Less-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gt]
          required: false
          description: Greater-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gte]
          required: false
          description: Greater-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended]
          required: false
          description: Equality filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lt]
          required: false
          description: Less-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lte]
          required: false
          description: Less-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gt]
          required: false
          description: Greater-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gte]
          required: false
          description: Greater-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Orgs]
          required: false
          description: Equality filter for "Orgs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[manager]
          required: false
          description: Equality filter for "manager"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Team]
          required: false
          description: Equality filter for "Team"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Profiles]
          required: false
          description: Equality filter for "Profiles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Stories]
          required: false
          description: Equality filter for "Stories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todo]
          required: false
          description: Equality filter for "Todo"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TodosAuthor]
          required: false
          description: Equality filter for "TodosAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TasksAuthor]
          required: false
          description: Equality filter for "TasksAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ChangesLogs]
          required: false
          description: Equality filter for "ChangesLogs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Roles]
          required: false
          description: Equality filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$has]
          required: false
          description: Collection contains filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasEvery]
          required: false
          description: Collection contains-all filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasSome]
          required: false
          description: Collection contains-any filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$isEmpty]
          required: false
          description: Collection is empty filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Permissions]
          required: false
          description: Equality filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$has]
          required: false
          description: Collection contains filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasEvery]
          required: false
          description: Collection contains-all filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasSome]
          required: false
          description: Collection contains-any filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$isEmpty]
          required: false
          description: Collection is empty filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Tokens]
          required: false
          description: Equality filter for "Tokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ApiKeys]
          required: false
          description: Equality filter for "ApiKeys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[isTfaEnable]
          required: false
          description: Equality filter for "isTfaEnable"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[tfaSecret]
          required: false
          description: Equality filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$contains]
          required: false
          description: String contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$icontains]
          required: false
          description: String case-insensitive contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$search]
          required: false
          description: String full-text search filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$startsWith]
          required: false
          description: String startsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$endsWith]
          required: false
          description: String endsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userSecret]
          required: false
          description: Equality filter for "userSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[followers]
          required: false
          description: Equality filter for "followers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[followings]
          required: false
          description: Equality filter for "followings"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[posts_liked]
          required: false
          description: Equality filter for "posts_liked"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[passWordFaker]
          required: false
          description: Equality filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$contains]
          required: false
          description: String contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$icontains]
          required: false
          description: String case-insensitive contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$search]
          required: false
          description: String full-text search filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$startsWith]
          required: false
          description: String startsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$endsWith]
          required: false
          description: String endsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-User-relationship-TodosAuthor-put
      description: Update "TodosAuthor" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-User-relationship-TodosAuthor-patch
      description: Update "TodosAuthor" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-User-relationship-TodosAuthor
      description: Create new "TodosAuthor" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/Tasks:
    get:
      operationId: fetch-User-related-Tasks
      description: Fetch the related "Tasks" resource for "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName]
          required: false
          description: Equality filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$contains]
          required: false
          description: String contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$icontains]
          required: false
          description: String case-insensitive contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$search]
          required: false
          description: String full-text search filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$startsWith]
          required: false
          description: String startsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$endsWith]
          required: false
          description: String endsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName]
          required: false
          description: Equality filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$contains]
          required: false
          description: String contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$icontains]
          required: false
          description: String case-insensitive contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$search]
          required: false
          description: String full-text search filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$startsWith]
          required: false
          description: String startsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$endsWith]
          required: false
          description: String endsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Title"
        - name: filter[nickName]
          required: false
          description: Equality filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$contains]
          required: false
          description: String contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$icontains]
          required: false
          description: String case-insensitive contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$search]
          required: false
          description: String full-text search filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$startsWith]
          required: false
          description: String startsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$endsWith]
          required: false
          description: String endsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Gender]
          required: false
          description: Equality filter for "Gender"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Gender"
        - name: filter[social]
          required: false
          description: Equality filter for "social"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[Language]
          required: false
          description: Equality filter for "Language"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Language"
        - name: filter[dob]
          required: false
          description: Equality filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lt]
          required: false
          description: Less-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lte]
          required: false
          description: Less-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gt]
          required: false
          description: Greater-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gte]
          required: false
          description: Greater-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[isValidated]
          required: false
          description: Equality filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lt]
          required: false
          description: Less-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lte]
          required: false
          description: Less-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gt]
          required: false
          description: Greater-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gte]
          required: false
          description: Greater-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended]
          required: false
          description: Equality filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lt]
          required: false
          description: Less-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lte]
          required: false
          description: Less-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gt]
          required: false
          description: Greater-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gte]
          required: false
          description: Greater-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Orgs]
          required: false
          description: Equality filter for "Orgs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[manager]
          required: false
          description: Equality filter for "manager"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Team]
          required: false
          description: Equality filter for "Team"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Profiles]
          required: false
          description: Equality filter for "Profiles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Stories]
          required: false
          description: Equality filter for "Stories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todo]
          required: false
          description: Equality filter for "Todo"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TodosAuthor]
          required: false
          description: Equality filter for "TodosAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TasksAuthor]
          required: false
          description: Equality filter for "TasksAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ChangesLogs]
          required: false
          description: Equality filter for "ChangesLogs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Roles]
          required: false
          description: Equality filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$has]
          required: false
          description: Collection contains filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasEvery]
          required: false
          description: Collection contains-all filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasSome]
          required: false
          description: Collection contains-any filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$isEmpty]
          required: false
          description: Collection is empty filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Permissions]
          required: false
          description: Equality filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$has]
          required: false
          description: Collection contains filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasEvery]
          required: false
          description: Collection contains-all filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasSome]
          required: false
          description: Collection contains-any filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$isEmpty]
          required: false
          description: Collection is empty filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Tokens]
          required: false
          description: Equality filter for "Tokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ApiKeys]
          required: false
          description: Equality filter for "ApiKeys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[isTfaEnable]
          required: false
          description: Equality filter for "isTfaEnable"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[tfaSecret]
          required: false
          description: Equality filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$contains]
          required: false
          description: String contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$icontains]
          required: false
          description: String case-insensitive contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$search]
          required: false
          description: String full-text search filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$startsWith]
          required: false
          description: String startsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$endsWith]
          required: false
          description: String endsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userSecret]
          required: false
          description: Equality filter for "userSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[followers]
          required: false
          description: Equality filter for "followers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[followings]
          required: false
          description: Equality filter for "followings"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[posts_liked]
          required: false
          description: Equality filter for "posts_liked"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[passWordFaker]
          required: false
          description: Equality filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$contains]
          required: false
          description: String contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$icontains]
          required: false
          description: String case-insensitive contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$search]
          required: false
          description: String full-text search filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$startsWith]
          required: false
          description: String startsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$endsWith]
          required: false
          description: String endsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserTaskLinkListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/relationships/Tasks:
    get:
      operationId: fetch-User-relationship-Tasks
      description: Fetch the "Tasks" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName]
          required: false
          description: Equality filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$contains]
          required: false
          description: String contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$icontains]
          required: false
          description: String case-insensitive contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$search]
          required: false
          description: String full-text search filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$startsWith]
          required: false
          description: String startsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$endsWith]
          required: false
          description: String endsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName]
          required: false
          description: Equality filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$contains]
          required: false
          description: String contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$icontains]
          required: false
          description: String case-insensitive contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$search]
          required: false
          description: String full-text search filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$startsWith]
          required: false
          description: String startsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$endsWith]
          required: false
          description: String endsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Title"
        - name: filter[nickName]
          required: false
          description: Equality filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$contains]
          required: false
          description: String contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$icontains]
          required: false
          description: String case-insensitive contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$search]
          required: false
          description: String full-text search filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$startsWith]
          required: false
          description: String startsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$endsWith]
          required: false
          description: String endsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Gender]
          required: false
          description: Equality filter for "Gender"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Gender"
        - name: filter[social]
          required: false
          description: Equality filter for "social"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[Language]
          required: false
          description: Equality filter for "Language"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Language"
        - name: filter[dob]
          required: false
          description: Equality filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lt]
          required: false
          description: Less-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lte]
          required: false
          description: Less-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gt]
          required: false
          description: Greater-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gte]
          required: false
          description: Greater-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[isValidated]
          required: false
          description: Equality filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lt]
          required: false
          description: Less-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lte]
          required: false
          description: Less-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gt]
          required: false
          description: Greater-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gte]
          required: false
          description: Greater-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended]
          required: false
          description: Equality filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lt]
          required: false
          description: Less-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lte]
          required: false
          description: Less-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gt]
          required: false
          description: Greater-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gte]
          required: false
          description: Greater-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Orgs]
          required: false
          description: Equality filter for "Orgs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[manager]
          required: false
          description: Equality filter for "manager"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Team]
          required: false
          description: Equality filter for "Team"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Profiles]
          required: false
          description: Equality filter for "Profiles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Stories]
          required: false
          description: Equality filter for "Stories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todo]
          required: false
          description: Equality filter for "Todo"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TodosAuthor]
          required: false
          description: Equality filter for "TodosAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TasksAuthor]
          required: false
          description: Equality filter for "TasksAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ChangesLogs]
          required: false
          description: Equality filter for "ChangesLogs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Roles]
          required: false
          description: Equality filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$has]
          required: false
          description: Collection contains filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasEvery]
          required: false
          description: Collection contains-all filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasSome]
          required: false
          description: Collection contains-any filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$isEmpty]
          required: false
          description: Collection is empty filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Permissions]
          required: false
          description: Equality filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$has]
          required: false
          description: Collection contains filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasEvery]
          required: false
          description: Collection contains-all filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasSome]
          required: false
          description: Collection contains-any filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$isEmpty]
          required: false
          description: Collection is empty filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Tokens]
          required: false
          description: Equality filter for "Tokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ApiKeys]
          required: false
          description: Equality filter for "ApiKeys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[isTfaEnable]
          required: false
          description: Equality filter for "isTfaEnable"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[tfaSecret]
          required: false
          description: Equality filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$contains]
          required: false
          description: String contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$icontains]
          required: false
          description: String case-insensitive contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$search]
          required: false
          description: String full-text search filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$startsWith]
          required: false
          description: String startsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$endsWith]
          required: false
          description: String endsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userSecret]
          required: false
          description: Equality filter for "userSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[followers]
          required: false
          description: Equality filter for "followers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[followings]
          required: false
          description: Equality filter for "followings"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[posts_liked]
          required: false
          description: Equality filter for "posts_liked"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[passWordFaker]
          required: false
          description: Equality filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$contains]
          required: false
          description: String contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$icontains]
          required: false
          description: String case-insensitive contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$search]
          required: false
          description: String full-text search filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$startsWith]
          required: false
          description: String startsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$endsWith]
          required: false
          description: String endsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-User-relationship-Tasks-put
      description: Update "Tasks" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-User-relationship-Tasks-patch
      description: Update "Tasks" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-User-relationship-Tasks
      description: Create new "Tasks" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/TasksAuthor:
    get:
      operationId: fetch-User-related-TasksAuthor
      description: Fetch the related "TasksAuthor" resource for "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName]
          required: false
          description: Equality filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$contains]
          required: false
          description: String contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$icontains]
          required: false
          description: String case-insensitive contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$search]
          required: false
          description: String full-text search filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$startsWith]
          required: false
          description: String startsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$endsWith]
          required: false
          description: String endsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName]
          required: false
          description: Equality filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$contains]
          required: false
          description: String contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$icontains]
          required: false
          description: String case-insensitive contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$search]
          required: false
          description: String full-text search filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$startsWith]
          required: false
          description: String startsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$endsWith]
          required: false
          description: String endsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Title"
        - name: filter[nickName]
          required: false
          description: Equality filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$contains]
          required: false
          description: String contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$icontains]
          required: false
          description: String case-insensitive contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$search]
          required: false
          description: String full-text search filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$startsWith]
          required: false
          description: String startsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$endsWith]
          required: false
          description: String endsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Gender]
          required: false
          description: Equality filter for "Gender"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Gender"
        - name: filter[social]
          required: false
          description: Equality filter for "social"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[Language]
          required: false
          description: Equality filter for "Language"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Language"
        - name: filter[dob]
          required: false
          description: Equality filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lt]
          required: false
          description: Less-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lte]
          required: false
          description: Less-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gt]
          required: false
          description: Greater-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gte]
          required: false
          description: Greater-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[isValidated]
          required: false
          description: Equality filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lt]
          required: false
          description: Less-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lte]
          required: false
          description: Less-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gt]
          required: false
          description: Greater-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gte]
          required: false
          description: Greater-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended]
          required: false
          description: Equality filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lt]
          required: false
          description: Less-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lte]
          required: false
          description: Less-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gt]
          required: false
          description: Greater-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gte]
          required: false
          description: Greater-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Orgs]
          required: false
          description: Equality filter for "Orgs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[manager]
          required: false
          description: Equality filter for "manager"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Team]
          required: false
          description: Equality filter for "Team"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Profiles]
          required: false
          description: Equality filter for "Profiles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Stories]
          required: false
          description: Equality filter for "Stories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todo]
          required: false
          description: Equality filter for "Todo"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TodosAuthor]
          required: false
          description: Equality filter for "TodosAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TasksAuthor]
          required: false
          description: Equality filter for "TasksAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ChangesLogs]
          required: false
          description: Equality filter for "ChangesLogs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Roles]
          required: false
          description: Equality filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$has]
          required: false
          description: Collection contains filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasEvery]
          required: false
          description: Collection contains-all filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasSome]
          required: false
          description: Collection contains-any filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$isEmpty]
          required: false
          description: Collection is empty filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Permissions]
          required: false
          description: Equality filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$has]
          required: false
          description: Collection contains filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasEvery]
          required: false
          description: Collection contains-all filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasSome]
          required: false
          description: Collection contains-any filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$isEmpty]
          required: false
          description: Collection is empty filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Tokens]
          required: false
          description: Equality filter for "Tokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ApiKeys]
          required: false
          description: Equality filter for "ApiKeys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[isTfaEnable]
          required: false
          description: Equality filter for "isTfaEnable"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[tfaSecret]
          required: false
          description: Equality filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$contains]
          required: false
          description: String contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$icontains]
          required: false
          description: String case-insensitive contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$search]
          required: false
          description: String full-text search filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$startsWith]
          required: false
          description: String startsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$endsWith]
          required: false
          description: String endsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userSecret]
          required: false
          description: Equality filter for "userSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[followers]
          required: false
          description: Equality filter for "followers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[followings]
          required: false
          description: Equality filter for "followings"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[posts_liked]
          required: false
          description: Equality filter for "posts_liked"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[passWordFaker]
          required: false
          description: Equality filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$contains]
          required: false
          description: String contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$icontains]
          required: false
          description: String case-insensitive contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$search]
          required: false
          description: String full-text search filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$startsWith]
          required: false
          description: String startsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$endsWith]
          required: false
          description: String endsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/TaskListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/relationships/TasksAuthor:
    get:
      operationId: fetch-User-relationship-TasksAuthor
      description: Fetch the "TasksAuthor" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName]
          required: false
          description: Equality filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$contains]
          required: false
          description: String contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$icontains]
          required: false
          description: String case-insensitive contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$search]
          required: false
          description: String full-text search filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$startsWith]
          required: false
          description: String startsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$endsWith]
          required: false
          description: String endsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName]
          required: false
          description: Equality filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$contains]
          required: false
          description: String contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$icontains]
          required: false
          description: String case-insensitive contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$search]
          required: false
          description: String full-text search filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$startsWith]
          required: false
          description: String startsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$endsWith]
          required: false
          description: String endsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Title"
        - name: filter[nickName]
          required: false
          description: Equality filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$contains]
          required: false
          description: String contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$icontains]
          required: false
          description: String case-insensitive contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$search]
          required: false
          description: String full-text search filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$startsWith]
          required: false
          description: String startsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$endsWith]
          required: false
          description: String endsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Gender]
          required: false
          description: Equality filter for "Gender"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Gender"
        - name: filter[social]
          required: false
          description: Equality filter for "social"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[Language]
          required: false
          description: Equality filter for "Language"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Language"
        - name: filter[dob]
          required: false
          description: Equality filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lt]
          required: false
          description: Less-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lte]
          required: false
          description: Less-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gt]
          required: false
          description: Greater-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gte]
          required: false
          description: Greater-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[isValidated]
          required: false
          description: Equality filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lt]
          required: false
          description: Less-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lte]
          required: false
          description: Less-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gt]
          required: false
          description: Greater-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gte]
          required: false
          description: Greater-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended]
          required: false
          description: Equality filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lt]
          required: false
          description: Less-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lte]
          required: false
          description: Less-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gt]
          required: false
          description: Greater-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gte]
          required: false
          description: Greater-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Orgs]
          required: false
          description: Equality filter for "Orgs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[manager]
          required: false
          description: Equality filter for "manager"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Team]
          required: false
          description: Equality filter for "Team"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Profiles]
          required: false
          description: Equality filter for "Profiles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Stories]
          required: false
          description: Equality filter for "Stories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todo]
          required: false
          description: Equality filter for "Todo"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TodosAuthor]
          required: false
          description: Equality filter for "TodosAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TasksAuthor]
          required: false
          description: Equality filter for "TasksAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ChangesLogs]
          required: false
          description: Equality filter for "ChangesLogs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Roles]
          required: false
          description: Equality filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$has]
          required: false
          description: Collection contains filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasEvery]
          required: false
          description: Collection contains-all filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasSome]
          required: false
          description: Collection contains-any filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$isEmpty]
          required: false
          description: Collection is empty filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Permissions]
          required: false
          description: Equality filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$has]
          required: false
          description: Collection contains filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasEvery]
          required: false
          description: Collection contains-all filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasSome]
          required: false
          description: Collection contains-any filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$isEmpty]
          required: false
          description: Collection is empty filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Tokens]
          required: false
          description: Equality filter for "Tokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ApiKeys]
          required: false
          description: Equality filter for "ApiKeys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[isTfaEnable]
          required: false
          description: Equality filter for "isTfaEnable"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[tfaSecret]
          required: false
          description: Equality filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$contains]
          required: false
          description: String contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$icontains]
          required: false
          description: String case-insensitive contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$search]
          required: false
          description: String full-text search filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$startsWith]
          required: false
          description: String startsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$endsWith]
          required: false
          description: String endsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userSecret]
          required: false
          description: Equality filter for "userSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[followers]
          required: false
          description: Equality filter for "followers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[followings]
          required: false
          description: Equality filter for "followings"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[posts_liked]
          required: false
          description: Equality filter for "posts_liked"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[passWordFaker]
          required: false
          description: Equality filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$contains]
          required: false
          description: String contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$icontains]
          required: false
          description: String case-insensitive contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$search]
          required: false
          description: String full-text search filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$startsWith]
          required: false
          description: String startsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$endsWith]
          required: false
          description: String endsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-User-relationship-TasksAuthor-put
      description: Update "TasksAuthor" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-User-relationship-TasksAuthor-patch
      description: Update "TasksAuthor" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-User-relationship-TasksAuthor
      description: Create new "TasksAuthor" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/Files:
    get:
      operationId: fetch-User-related-Files
      description: Fetch the related "Files" resource for "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName]
          required: false
          description: Equality filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$contains]
          required: false
          description: String contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$icontains]
          required: false
          description: String case-insensitive contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$search]
          required: false
          description: String full-text search filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$startsWith]
          required: false
          description: String startsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$endsWith]
          required: false
          description: String endsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName]
          required: false
          description: Equality filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$contains]
          required: false
          description: String contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$icontains]
          required: false
          description: String case-insensitive contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$search]
          required: false
          description: String full-text search filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$startsWith]
          required: false
          description: String startsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$endsWith]
          required: false
          description: String endsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Title"
        - name: filter[nickName]
          required: false
          description: Equality filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$contains]
          required: false
          description: String contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$icontains]
          required: false
          description: String case-insensitive contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$search]
          required: false
          description: String full-text search filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$startsWith]
          required: false
          description: String startsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$endsWith]
          required: false
          description: String endsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Gender]
          required: false
          description: Equality filter for "Gender"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Gender"
        - name: filter[social]
          required: false
          description: Equality filter for "social"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[Language]
          required: false
          description: Equality filter for "Language"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Language"
        - name: filter[dob]
          required: false
          description: Equality filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lt]
          required: false
          description: Less-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lte]
          required: false
          description: Less-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gt]
          required: false
          description: Greater-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gte]
          required: false
          description: Greater-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[isValidated]
          required: false
          description: Equality filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lt]
          required: false
          description: Less-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lte]
          required: false
          description: Less-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gt]
          required: false
          description: Greater-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gte]
          required: false
          description: Greater-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended]
          required: false
          description: Equality filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lt]
          required: false
          description: Less-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lte]
          required: false
          description: Less-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gt]
          required: false
          description: Greater-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gte]
          required: false
          description: Greater-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Orgs]
          required: false
          description: Equality filter for "Orgs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[manager]
          required: false
          description: Equality filter for "manager"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Team]
          required: false
          description: Equality filter for "Team"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Profiles]
          required: false
          description: Equality filter for "Profiles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Stories]
          required: false
          description: Equality filter for "Stories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todo]
          required: false
          description: Equality filter for "Todo"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TodosAuthor]
          required: false
          description: Equality filter for "TodosAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TasksAuthor]
          required: false
          description: Equality filter for "TasksAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ChangesLogs]
          required: false
          description: Equality filter for "ChangesLogs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Roles]
          required: false
          description: Equality filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$has]
          required: false
          description: Collection contains filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasEvery]
          required: false
          description: Collection contains-all filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasSome]
          required: false
          description: Collection contains-any filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$isEmpty]
          required: false
          description: Collection is empty filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Permissions]
          required: false
          description: Equality filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$has]
          required: false
          description: Collection contains filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasEvery]
          required: false
          description: Collection contains-all filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasSome]
          required: false
          description: Collection contains-any filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$isEmpty]
          required: false
          description: Collection is empty filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Tokens]
          required: false
          description: Equality filter for "Tokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ApiKeys]
          required: false
          description: Equality filter for "ApiKeys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[isTfaEnable]
          required: false
          description: Equality filter for "isTfaEnable"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[tfaSecret]
          required: false
          description: Equality filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$contains]
          required: false
          description: String contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$icontains]
          required: false
          description: String case-insensitive contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$search]
          required: false
          description: String full-text search filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$startsWith]
          required: false
          description: String startsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$endsWith]
          required: false
          description: String endsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userSecret]
          required: false
          description: Equality filter for "userSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[followers]
          required: false
          description: Equality filter for "followers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[followings]
          required: false
          description: Equality filter for "followings"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[posts_liked]
          required: false
          description: Equality filter for "posts_liked"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[passWordFaker]
          required: false
          description: Equality filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$contains]
          required: false
          description: String contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$icontains]
          required: false
          description: String case-insensitive contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$search]
          required: false
          description: String full-text search filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$startsWith]
          required: false
          description: String startsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$endsWith]
          required: false
          description: String endsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/FileListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/relationships/Files:
    get:
      operationId: fetch-User-relationship-Files
      description: Fetch the "Files" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName]
          required: false
          description: Equality filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$contains]
          required: false
          description: String contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$icontains]
          required: false
          description: String case-insensitive contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$search]
          required: false
          description: String full-text search filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$startsWith]
          required: false
          description: String startsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$endsWith]
          required: false
          description: String endsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName]
          required: false
          description: Equality filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$contains]
          required: false
          description: String contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$icontains]
          required: false
          description: String case-insensitive contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$search]
          required: false
          description: String full-text search filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$startsWith]
          required: false
          description: String startsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$endsWith]
          required: false
          description: String endsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Title"
        - name: filter[nickName]
          required: false
          description: Equality filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$contains]
          required: false
          description: String contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$icontains]
          required: false
          description: String case-insensitive contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$search]
          required: false
          description: String full-text search filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$startsWith]
          required: false
          description: String startsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$endsWith]
          required: false
          description: String endsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Gender]
          required: false
          description: Equality filter for "Gender"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Gender"
        - name: filter[social]
          required: false
          description: Equality filter for "social"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[Language]
          required: false
          description: Equality filter for "Language"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Language"
        - name: filter[dob]
          required: false
          description: Equality filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lt]
          required: false
          description: Less-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lte]
          required: false
          description: Less-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gt]
          required: false
          description: Greater-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gte]
          required: false
          description: Greater-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[isValidated]
          required: false
          description: Equality filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lt]
          required: false
          description: Less-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lte]
          required: false
          description: Less-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gt]
          required: false
          description: Greater-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gte]
          required: false
          description: Greater-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended]
          required: false
          description: Equality filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lt]
          required: false
          description: Less-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lte]
          required: false
          description: Less-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gt]
          required: false
          description: Greater-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gte]
          required: false
          description: Greater-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Orgs]
          required: false
          description: Equality filter for "Orgs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[manager]
          required: false
          description: Equality filter for "manager"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Team]
          required: false
          description: Equality filter for "Team"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Profiles]
          required: false
          description: Equality filter for "Profiles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Stories]
          required: false
          description: Equality filter for "Stories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todo]
          required: false
          description: Equality filter for "Todo"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TodosAuthor]
          required: false
          description: Equality filter for "TodosAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TasksAuthor]
          required: false
          description: Equality filter for "TasksAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ChangesLogs]
          required: false
          description: Equality filter for "ChangesLogs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Roles]
          required: false
          description: Equality filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$has]
          required: false
          description: Collection contains filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasEvery]
          required: false
          description: Collection contains-all filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasSome]
          required: false
          description: Collection contains-any filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$isEmpty]
          required: false
          description: Collection is empty filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Permissions]
          required: false
          description: Equality filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$has]
          required: false
          description: Collection contains filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasEvery]
          required: false
          description: Collection contains-all filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasSome]
          required: false
          description: Collection contains-any filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$isEmpty]
          required: false
          description: Collection is empty filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Tokens]
          required: false
          description: Equality filter for "Tokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ApiKeys]
          required: false
          description: Equality filter for "ApiKeys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[isTfaEnable]
          required: false
          description: Equality filter for "isTfaEnable"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[tfaSecret]
          required: false
          description: Equality filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$contains]
          required: false
          description: String contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$icontains]
          required: false
          description: String case-insensitive contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$search]
          required: false
          description: String full-text search filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$startsWith]
          required: false
          description: String startsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$endsWith]
          required: false
          description: String endsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userSecret]
          required: false
          description: Equality filter for "userSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[followers]
          required: false
          description: Equality filter for "followers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[followings]
          required: false
          description: Equality filter for "followings"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[posts_liked]
          required: false
          description: Equality filter for "posts_liked"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[passWordFaker]
          required: false
          description: Equality filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$contains]
          required: false
          description: String contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$icontains]
          required: false
          description: String case-insensitive contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$search]
          required: false
          description: String full-text search filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$startsWith]
          required: false
          description: String startsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$endsWith]
          required: false
          description: String endsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-User-relationship-Files-put
      description: Update "Files" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-User-relationship-Files-patch
      description: Update "Files" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-User-relationship-Files
      description: Create new "Files" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/ChangesLogs:
    get:
      operationId: fetch-User-related-ChangesLogs
      description: Fetch the related "ChangesLogs" resource for "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName]
          required: false
          description: Equality filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$contains]
          required: false
          description: String contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$icontains]
          required: false
          description: String case-insensitive contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$search]
          required: false
          description: String full-text search filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$startsWith]
          required: false
          description: String startsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$endsWith]
          required: false
          description: String endsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName]
          required: false
          description: Equality filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$contains]
          required: false
          description: String contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$icontains]
          required: false
          description: String case-insensitive contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$search]
          required: false
          description: String full-text search filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$startsWith]
          required: false
          description: String startsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$endsWith]
          required: false
          description: String endsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Title"
        - name: filter[nickName]
          required: false
          description: Equality filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$contains]
          required: false
          description: String contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$icontains]
          required: false
          description: String case-insensitive contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$search]
          required: false
          description: String full-text search filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$startsWith]
          required: false
          description: String startsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$endsWith]
          required: false
          description: String endsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Gender]
          required: false
          description: Equality filter for "Gender"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Gender"
        - name: filter[social]
          required: false
          description: Equality filter for "social"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[Language]
          required: false
          description: Equality filter for "Language"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Language"
        - name: filter[dob]
          required: false
          description: Equality filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lt]
          required: false
          description: Less-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lte]
          required: false
          description: Less-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gt]
          required: false
          description: Greater-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gte]
          required: false
          description: Greater-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[isValidated]
          required: false
          description: Equality filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lt]
          required: false
          description: Less-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lte]
          required: false
          description: Less-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gt]
          required: false
          description: Greater-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gte]
          required: false
          description: Greater-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended]
          required: false
          description: Equality filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lt]
          required: false
          description: Less-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lte]
          required: false
          description: Less-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gt]
          required: false
          description: Greater-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gte]
          required: false
          description: Greater-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Orgs]
          required: false
          description: Equality filter for "Orgs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[manager]
          required: false
          description: Equality filter for "manager"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Team]
          required: false
          description: Equality filter for "Team"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Profiles]
          required: false
          description: Equality filter for "Profiles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Stories]
          required: false
          description: Equality filter for "Stories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todo]
          required: false
          description: Equality filter for "Todo"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TodosAuthor]
          required: false
          description: Equality filter for "TodosAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TasksAuthor]
          required: false
          description: Equality filter for "TasksAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ChangesLogs]
          required: false
          description: Equality filter for "ChangesLogs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Roles]
          required: false
          description: Equality filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$has]
          required: false
          description: Collection contains filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasEvery]
          required: false
          description: Collection contains-all filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasSome]
          required: false
          description: Collection contains-any filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$isEmpty]
          required: false
          description: Collection is empty filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Permissions]
          required: false
          description: Equality filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$has]
          required: false
          description: Collection contains filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasEvery]
          required: false
          description: Collection contains-all filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasSome]
          required: false
          description: Collection contains-any filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$isEmpty]
          required: false
          description: Collection is empty filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Tokens]
          required: false
          description: Equality filter for "Tokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ApiKeys]
          required: false
          description: Equality filter for "ApiKeys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[isTfaEnable]
          required: false
          description: Equality filter for "isTfaEnable"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[tfaSecret]
          required: false
          description: Equality filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$contains]
          required: false
          description: String contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$icontains]
          required: false
          description: String case-insensitive contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$search]
          required: false
          description: String full-text search filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$startsWith]
          required: false
          description: String startsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$endsWith]
          required: false
          description: String endsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userSecret]
          required: false
          description: Equality filter for "userSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[followers]
          required: false
          description: Equality filter for "followers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[followings]
          required: false
          description: Equality filter for "followings"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[posts_liked]
          required: false
          description: Equality filter for "posts_liked"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[passWordFaker]
          required: false
          description: Equality filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$contains]
          required: false
          description: String contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$icontains]
          required: false
          description: String case-insensitive contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$search]
          required: false
          description: String full-text search filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$startsWith]
          required: false
          description: String startsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$endsWith]
          required: false
          description: String endsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ChangesTrackingListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/relationships/ChangesLogs:
    get:
      operationId: fetch-User-relationship-ChangesLogs
      description: Fetch the "ChangesLogs" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName]
          required: false
          description: Equality filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$contains]
          required: false
          description: String contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$icontains]
          required: false
          description: String case-insensitive contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$search]
          required: false
          description: String full-text search filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$startsWith]
          required: false
          description: String startsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$endsWith]
          required: false
          description: String endsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName]
          required: false
          description: Equality filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$contains]
          required: false
          description: String contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$icontains]
          required: false
          description: String case-insensitive contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$search]
          required: false
          description: String full-text search filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$startsWith]
          required: false
          description: String startsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$endsWith]
          required: false
          description: String endsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Title"
        - name: filter[nickName]
          required: false
          description: Equality filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$contains]
          required: false
          description: String contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$icontains]
          required: false
          description: String case-insensitive contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$search]
          required: false
          description: String full-text search filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$startsWith]
          required: false
          description: String startsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$endsWith]
          required: false
          description: String endsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Gender]
          required: false
          description: Equality filter for "Gender"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Gender"
        - name: filter[social]
          required: false
          description: Equality filter for "social"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[Language]
          required: false
          description: Equality filter for "Language"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Language"
        - name: filter[dob]
          required: false
          description: Equality filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lt]
          required: false
          description: Less-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lte]
          required: false
          description: Less-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gt]
          required: false
          description: Greater-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gte]
          required: false
          description: Greater-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[isValidated]
          required: false
          description: Equality filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lt]
          required: false
          description: Less-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lte]
          required: false
          description: Less-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gt]
          required: false
          description: Greater-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gte]
          required: false
          description: Greater-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended]
          required: false
          description: Equality filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lt]
          required: false
          description: Less-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lte]
          required: false
          description: Less-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gt]
          required: false
          description: Greater-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gte]
          required: false
          description: Greater-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Orgs]
          required: false
          description: Equality filter for "Orgs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[manager]
          required: false
          description: Equality filter for "manager"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Team]
          required: false
          description: Equality filter for "Team"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Profiles]
          required: false
          description: Equality filter for "Profiles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Stories]
          required: false
          description: Equality filter for "Stories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todo]
          required: false
          description: Equality filter for "Todo"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TodosAuthor]
          required: false
          description: Equality filter for "TodosAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TasksAuthor]
          required: false
          description: Equality filter for "TasksAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ChangesLogs]
          required: false
          description: Equality filter for "ChangesLogs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Roles]
          required: false
          description: Equality filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$has]
          required: false
          description: Collection contains filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasEvery]
          required: false
          description: Collection contains-all filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasSome]
          required: false
          description: Collection contains-any filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$isEmpty]
          required: false
          description: Collection is empty filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Permissions]
          required: false
          description: Equality filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$has]
          required: false
          description: Collection contains filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasEvery]
          required: false
          description: Collection contains-all filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasSome]
          required: false
          description: Collection contains-any filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$isEmpty]
          required: false
          description: Collection is empty filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Tokens]
          required: false
          description: Equality filter for "Tokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ApiKeys]
          required: false
          description: Equality filter for "ApiKeys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[isTfaEnable]
          required: false
          description: Equality filter for "isTfaEnable"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[tfaSecret]
          required: false
          description: Equality filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$contains]
          required: false
          description: String contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$icontains]
          required: false
          description: String case-insensitive contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$search]
          required: false
          description: String full-text search filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$startsWith]
          required: false
          description: String startsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$endsWith]
          required: false
          description: String endsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userSecret]
          required: false
          description: Equality filter for "userSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[followers]
          required: false
          description: Equality filter for "followers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[followings]
          required: false
          description: Equality filter for "followings"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[posts_liked]
          required: false
          description: Equality filter for "posts_liked"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[passWordFaker]
          required: false
          description: Equality filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$contains]
          required: false
          description: String contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$icontains]
          required: false
          description: String case-insensitive contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$search]
          required: false
          description: String full-text search filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$startsWith]
          required: false
          description: String startsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$endsWith]
          required: false
          description: String endsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-User-relationship-ChangesLogs-put
      description: Update "ChangesLogs" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-User-relationship-ChangesLogs-patch
      description: Update "ChangesLogs" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-User-relationship-ChangesLogs
      description: Create new "ChangesLogs" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/Tokens:
    get:
      operationId: fetch-User-related-Tokens
      description: Fetch the related "Tokens" resource for "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName]
          required: false
          description: Equality filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$contains]
          required: false
          description: String contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$icontains]
          required: false
          description: String case-insensitive contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$search]
          required: false
          description: String full-text search filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$startsWith]
          required: false
          description: String startsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$endsWith]
          required: false
          description: String endsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName]
          required: false
          description: Equality filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$contains]
          required: false
          description: String contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$icontains]
          required: false
          description: String case-insensitive contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$search]
          required: false
          description: String full-text search filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$startsWith]
          required: false
          description: String startsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$endsWith]
          required: false
          description: String endsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Title"
        - name: filter[nickName]
          required: false
          description: Equality filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$contains]
          required: false
          description: String contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$icontains]
          required: false
          description: String case-insensitive contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$search]
          required: false
          description: String full-text search filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$startsWith]
          required: false
          description: String startsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$endsWith]
          required: false
          description: String endsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Gender]
          required: false
          description: Equality filter for "Gender"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Gender"
        - name: filter[social]
          required: false
          description: Equality filter for "social"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[Language]
          required: false
          description: Equality filter for "Language"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Language"
        - name: filter[dob]
          required: false
          description: Equality filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lt]
          required: false
          description: Less-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lte]
          required: false
          description: Less-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gt]
          required: false
          description: Greater-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gte]
          required: false
          description: Greater-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[isValidated]
          required: false
          description: Equality filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lt]
          required: false
          description: Less-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lte]
          required: false
          description: Less-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gt]
          required: false
          description: Greater-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gte]
          required: false
          description: Greater-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended]
          required: false
          description: Equality filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lt]
          required: false
          description: Less-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lte]
          required: false
          description: Less-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gt]
          required: false
          description: Greater-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gte]
          required: false
          description: Greater-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Orgs]
          required: false
          description: Equality filter for "Orgs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[manager]
          required: false
          description: Equality filter for "manager"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Team]
          required: false
          description: Equality filter for "Team"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Profiles]
          required: false
          description: Equality filter for "Profiles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Stories]
          required: false
          description: Equality filter for "Stories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todo]
          required: false
          description: Equality filter for "Todo"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TodosAuthor]
          required: false
          description: Equality filter for "TodosAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TasksAuthor]
          required: false
          description: Equality filter for "TasksAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ChangesLogs]
          required: false
          description: Equality filter for "ChangesLogs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Roles]
          required: false
          description: Equality filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$has]
          required: false
          description: Collection contains filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasEvery]
          required: false
          description: Collection contains-all filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasSome]
          required: false
          description: Collection contains-any filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$isEmpty]
          required: false
          description: Collection is empty filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Permissions]
          required: false
          description: Equality filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$has]
          required: false
          description: Collection contains filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasEvery]
          required: false
          description: Collection contains-all filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasSome]
          required: false
          description: Collection contains-any filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$isEmpty]
          required: false
          description: Collection is empty filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Tokens]
          required: false
          description: Equality filter for "Tokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ApiKeys]
          required: false
          description: Equality filter for "ApiKeys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[isTfaEnable]
          required: false
          description: Equality filter for "isTfaEnable"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[tfaSecret]
          required: false
          description: Equality filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$contains]
          required: false
          description: String contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$icontains]
          required: false
          description: String case-insensitive contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$search]
          required: false
          description: String full-text search filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$startsWith]
          required: false
          description: String startsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$endsWith]
          required: false
          description: String endsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userSecret]
          required: false
          description: Equality filter for "userSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[followers]
          required: false
          description: Equality filter for "followers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[followings]
          required: false
          description: Equality filter for "followings"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[posts_liked]
          required: false
          description: Equality filter for "posts_liked"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[passWordFaker]
          required: false
          description: Equality filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$contains]
          required: false
          description: String contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$icontains]
          required: false
          description: String case-insensitive contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$search]
          required: false
          description: String full-text search filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$startsWith]
          required: false
          description: String startsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$endsWith]
          required: false
          description: String endsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/TokenListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/relationships/Tokens:
    get:
      operationId: fetch-User-relationship-Tokens
      description: Fetch the "Tokens" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName]
          required: false
          description: Equality filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$contains]
          required: false
          description: String contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$icontains]
          required: false
          description: String case-insensitive contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$search]
          required: false
          description: String full-text search filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$startsWith]
          required: false
          description: String startsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$endsWith]
          required: false
          description: String endsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName]
          required: false
          description: Equality filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$contains]
          required: false
          description: String contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$icontains]
          required: false
          description: String case-insensitive contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$search]
          required: false
          description: String full-text search filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$startsWith]
          required: false
          description: String startsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$endsWith]
          required: false
          description: String endsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Title"
        - name: filter[nickName]
          required: false
          description: Equality filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$contains]
          required: false
          description: String contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$icontains]
          required: false
          description: String case-insensitive contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$search]
          required: false
          description: String full-text search filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$startsWith]
          required: false
          description: String startsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$endsWith]
          required: false
          description: String endsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Gender]
          required: false
          description: Equality filter for "Gender"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Gender"
        - name: filter[social]
          required: false
          description: Equality filter for "social"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[Language]
          required: false
          description: Equality filter for "Language"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Language"
        - name: filter[dob]
          required: false
          description: Equality filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lt]
          required: false
          description: Less-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lte]
          required: false
          description: Less-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gt]
          required: false
          description: Greater-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gte]
          required: false
          description: Greater-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[isValidated]
          required: false
          description: Equality filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lt]
          required: false
          description: Less-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lte]
          required: false
          description: Less-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gt]
          required: false
          description: Greater-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gte]
          required: false
          description: Greater-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended]
          required: false
          description: Equality filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lt]
          required: false
          description: Less-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lte]
          required: false
          description: Less-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gt]
          required: false
          description: Greater-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gte]
          required: false
          description: Greater-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Orgs]
          required: false
          description: Equality filter for "Orgs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[manager]
          required: false
          description: Equality filter for "manager"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Team]
          required: false
          description: Equality filter for "Team"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Profiles]
          required: false
          description: Equality filter for "Profiles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Stories]
          required: false
          description: Equality filter for "Stories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todo]
          required: false
          description: Equality filter for "Todo"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TodosAuthor]
          required: false
          description: Equality filter for "TodosAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TasksAuthor]
          required: false
          description: Equality filter for "TasksAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ChangesLogs]
          required: false
          description: Equality filter for "ChangesLogs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Roles]
          required: false
          description: Equality filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$has]
          required: false
          description: Collection contains filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasEvery]
          required: false
          description: Collection contains-all filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasSome]
          required: false
          description: Collection contains-any filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$isEmpty]
          required: false
          description: Collection is empty filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Permissions]
          required: false
          description: Equality filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$has]
          required: false
          description: Collection contains filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasEvery]
          required: false
          description: Collection contains-all filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasSome]
          required: false
          description: Collection contains-any filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$isEmpty]
          required: false
          description: Collection is empty filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Tokens]
          required: false
          description: Equality filter for "Tokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ApiKeys]
          required: false
          description: Equality filter for "ApiKeys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[isTfaEnable]
          required: false
          description: Equality filter for "isTfaEnable"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[tfaSecret]
          required: false
          description: Equality filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$contains]
          required: false
          description: String contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$icontains]
          required: false
          description: String case-insensitive contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$search]
          required: false
          description: String full-text search filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$startsWith]
          required: false
          description: String startsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$endsWith]
          required: false
          description: String endsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userSecret]
          required: false
          description: Equality filter for "userSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[followers]
          required: false
          description: Equality filter for "followers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[followings]
          required: false
          description: Equality filter for "followings"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[posts_liked]
          required: false
          description: Equality filter for "posts_liked"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[passWordFaker]
          required: false
          description: Equality filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$contains]
          required: false
          description: String contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$icontains]
          required: false
          description: String case-insensitive contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$search]
          required: false
          description: String full-text search filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$startsWith]
          required: false
          description: String startsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$endsWith]
          required: false
          description: String endsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-User-relationship-Tokens-put
      description: Update "Tokens" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-User-relationship-Tokens-patch
      description: Update "Tokens" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-User-relationship-Tokens
      description: Create new "Tokens" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/ApiKeys:
    get:
      operationId: fetch-User-related-ApiKeys
      description: Fetch the related "ApiKeys" resource for "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName]
          required: false
          description: Equality filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$contains]
          required: false
          description: String contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$icontains]
          required: false
          description: String case-insensitive contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$search]
          required: false
          description: String full-text search filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$startsWith]
          required: false
          description: String startsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$endsWith]
          required: false
          description: String endsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName]
          required: false
          description: Equality filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$contains]
          required: false
          description: String contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$icontains]
          required: false
          description: String case-insensitive contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$search]
          required: false
          description: String full-text search filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$startsWith]
          required: false
          description: String startsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$endsWith]
          required: false
          description: String endsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Title"
        - name: filter[nickName]
          required: false
          description: Equality filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$contains]
          required: false
          description: String contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$icontains]
          required: false
          description: String case-insensitive contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$search]
          required: false
          description: String full-text search filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$startsWith]
          required: false
          description: String startsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$endsWith]
          required: false
          description: String endsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Gender]
          required: false
          description: Equality filter for "Gender"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Gender"
        - name: filter[social]
          required: false
          description: Equality filter for "social"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[Language]
          required: false
          description: Equality filter for "Language"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Language"
        - name: filter[dob]
          required: false
          description: Equality filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lt]
          required: false
          description: Less-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lte]
          required: false
          description: Less-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gt]
          required: false
          description: Greater-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gte]
          required: false
          description: Greater-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[isValidated]
          required: false
          description: Equality filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lt]
          required: false
          description: Less-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lte]
          required: false
          description: Less-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gt]
          required: false
          description: Greater-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gte]
          required: false
          description: Greater-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended]
          required: false
          description: Equality filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lt]
          required: false
          description: Less-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lte]
          required: false
          description: Less-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gt]
          required: false
          description: Greater-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gte]
          required: false
          description: Greater-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Orgs]
          required: false
          description: Equality filter for "Orgs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[manager]
          required: false
          description: Equality filter for "manager"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Team]
          required: false
          description: Equality filter for "Team"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Profiles]
          required: false
          description: Equality filter for "Profiles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Stories]
          required: false
          description: Equality filter for "Stories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todo]
          required: false
          description: Equality filter for "Todo"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TodosAuthor]
          required: false
          description: Equality filter for "TodosAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TasksAuthor]
          required: false
          description: Equality filter for "TasksAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ChangesLogs]
          required: false
          description: Equality filter for "ChangesLogs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Roles]
          required: false
          description: Equality filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$has]
          required: false
          description: Collection contains filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasEvery]
          required: false
          description: Collection contains-all filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasSome]
          required: false
          description: Collection contains-any filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$isEmpty]
          required: false
          description: Collection is empty filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Permissions]
          required: false
          description: Equality filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$has]
          required: false
          description: Collection contains filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasEvery]
          required: false
          description: Collection contains-all filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasSome]
          required: false
          description: Collection contains-any filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$isEmpty]
          required: false
          description: Collection is empty filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Tokens]
          required: false
          description: Equality filter for "Tokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ApiKeys]
          required: false
          description: Equality filter for "ApiKeys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[isTfaEnable]
          required: false
          description: Equality filter for "isTfaEnable"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[tfaSecret]
          required: false
          description: Equality filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$contains]
          required: false
          description: String contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$icontains]
          required: false
          description: String case-insensitive contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$search]
          required: false
          description: String full-text search filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$startsWith]
          required: false
          description: String startsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$endsWith]
          required: false
          description: String endsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userSecret]
          required: false
          description: Equality filter for "userSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[followers]
          required: false
          description: Equality filter for "followers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[followings]
          required: false
          description: Equality filter for "followings"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[posts_liked]
          required: false
          description: Equality filter for "posts_liked"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[passWordFaker]
          required: false
          description: Equality filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$contains]
          required: false
          description: String contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$icontains]
          required: false
          description: String case-insensitive contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$search]
          required: false
          description: String full-text search filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$startsWith]
          required: false
          description: String startsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$endsWith]
          required: false
          description: String endsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ApiKeyListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/relationships/ApiKeys:
    get:
      operationId: fetch-User-relationship-ApiKeys
      description: Fetch the "ApiKeys" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName]
          required: false
          description: Equality filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$contains]
          required: false
          description: String contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$icontains]
          required: false
          description: String case-insensitive contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$search]
          required: false
          description: String full-text search filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$startsWith]
          required: false
          description: String startsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$endsWith]
          required: false
          description: String endsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName]
          required: false
          description: Equality filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$contains]
          required: false
          description: String contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$icontains]
          required: false
          description: String case-insensitive contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$search]
          required: false
          description: String full-text search filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$startsWith]
          required: false
          description: String startsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$endsWith]
          required: false
          description: String endsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Title"
        - name: filter[nickName]
          required: false
          description: Equality filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$contains]
          required: false
          description: String contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$icontains]
          required: false
          description: String case-insensitive contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$search]
          required: false
          description: String full-text search filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$startsWith]
          required: false
          description: String startsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$endsWith]
          required: false
          description: String endsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Gender]
          required: false
          description: Equality filter for "Gender"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Gender"
        - name: filter[social]
          required: false
          description: Equality filter for "social"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[Language]
          required: false
          description: Equality filter for "Language"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Language"
        - name: filter[dob]
          required: false
          description: Equality filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lt]
          required: false
          description: Less-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lte]
          required: false
          description: Less-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gt]
          required: false
          description: Greater-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gte]
          required: false
          description: Greater-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[isValidated]
          required: false
          description: Equality filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lt]
          required: false
          description: Less-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lte]
          required: false
          description: Less-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gt]
          required: false
          description: Greater-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gte]
          required: false
          description: Greater-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended]
          required: false
          description: Equality filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lt]
          required: false
          description: Less-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lte]
          required: false
          description: Less-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gt]
          required: false
          description: Greater-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gte]
          required: false
          description: Greater-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Orgs]
          required: false
          description: Equality filter for "Orgs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[manager]
          required: false
          description: Equality filter for "manager"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Team]
          required: false
          description: Equality filter for "Team"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Profiles]
          required: false
          description: Equality filter for "Profiles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Stories]
          required: false
          description: Equality filter for "Stories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todo]
          required: false
          description: Equality filter for "Todo"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TodosAuthor]
          required: false
          description: Equality filter for "TodosAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TasksAuthor]
          required: false
          description: Equality filter for "TasksAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ChangesLogs]
          required: false
          description: Equality filter for "ChangesLogs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Roles]
          required: false
          description: Equality filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$has]
          required: false
          description: Collection contains filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasEvery]
          required: false
          description: Collection contains-all filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasSome]
          required: false
          description: Collection contains-any filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$isEmpty]
          required: false
          description: Collection is empty filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Permissions]
          required: false
          description: Equality filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$has]
          required: false
          description: Collection contains filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasEvery]
          required: false
          description: Collection contains-all filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasSome]
          required: false
          description: Collection contains-any filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$isEmpty]
          required: false
          description: Collection is empty filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Tokens]
          required: false
          description: Equality filter for "Tokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ApiKeys]
          required: false
          description: Equality filter for "ApiKeys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[isTfaEnable]
          required: false
          description: Equality filter for "isTfaEnable"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[tfaSecret]
          required: false
          description: Equality filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$contains]
          required: false
          description: String contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$icontains]
          required: false
          description: String case-insensitive contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$search]
          required: false
          description: String full-text search filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$startsWith]
          required: false
          description: String startsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$endsWith]
          required: false
          description: String endsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userSecret]
          required: false
          description: Equality filter for "userSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[followers]
          required: false
          description: Equality filter for "followers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[followings]
          required: false
          description: Equality filter for "followings"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[posts_liked]
          required: false
          description: Equality filter for "posts_liked"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[passWordFaker]
          required: false
          description: Equality filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$contains]
          required: false
          description: String contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$icontains]
          required: false
          description: String case-insensitive contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$search]
          required: false
          description: String full-text search filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$startsWith]
          required: false
          description: String startsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$endsWith]
          required: false
          description: String endsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-User-relationship-ApiKeys-put
      description: Update "ApiKeys" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-User-relationship-ApiKeys-patch
      description: Update "ApiKeys" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-User-relationship-ApiKeys
      description: Create new "ApiKeys" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/userSecret:
    get:
      operationId: fetch-User-related-userSecret
      description: Fetch the related "userSecret" resource for "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserSecretResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/relationships/userSecret:
    get:
      operationId: fetch-User-relationship-userSecret
      description: Fetch the "userSecret" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-User-relationship-userSecret-put
      description: Update "userSecret" relationship for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-User-relationship-userSecret-patch
      description: Update "userSecret" relationship for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/followers:
    get:
      operationId: fetch-User-related-followers
      description: Fetch the related "followers" resource for "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName]
          required: false
          description: Equality filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$contains]
          required: false
          description: String contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$icontains]
          required: false
          description: String case-insensitive contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$search]
          required: false
          description: String full-text search filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$startsWith]
          required: false
          description: String startsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$endsWith]
          required: false
          description: String endsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName]
          required: false
          description: Equality filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$contains]
          required: false
          description: String contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$icontains]
          required: false
          description: String case-insensitive contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$search]
          required: false
          description: String full-text search filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$startsWith]
          required: false
          description: String startsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$endsWith]
          required: false
          description: String endsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Title"
        - name: filter[nickName]
          required: false
          description: Equality filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$contains]
          required: false
          description: String contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$icontains]
          required: false
          description: String case-insensitive contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$search]
          required: false
          description: String full-text search filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$startsWith]
          required: false
          description: String startsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$endsWith]
          required: false
          description: String endsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Gender]
          required: false
          description: Equality filter for "Gender"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Gender"
        - name: filter[social]
          required: false
          description: Equality filter for "social"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[Language]
          required: false
          description: Equality filter for "Language"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Language"
        - name: filter[dob]
          required: false
          description: Equality filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lt]
          required: false
          description: Less-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lte]
          required: false
          description: Less-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gt]
          required: false
          description: Greater-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gte]
          required: false
          description: Greater-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[isValidated]
          required: false
          description: Equality filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lt]
          required: false
          description: Less-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lte]
          required: false
          description: Less-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gt]
          required: false
          description: Greater-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gte]
          required: false
          description: Greater-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended]
          required: false
          description: Equality filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lt]
          required: false
          description: Less-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lte]
          required: false
          description: Less-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gt]
          required: false
          description: Greater-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gte]
          required: false
          description: Greater-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Orgs]
          required: false
          description: Equality filter for "Orgs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[manager]
          required: false
          description: Equality filter for "manager"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Team]
          required: false
          description: Equality filter for "Team"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Profiles]
          required: false
          description: Equality filter for "Profiles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Stories]
          required: false
          description: Equality filter for "Stories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todo]
          required: false
          description: Equality filter for "Todo"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TodosAuthor]
          required: false
          description: Equality filter for "TodosAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TasksAuthor]
          required: false
          description: Equality filter for "TasksAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ChangesLogs]
          required: false
          description: Equality filter for "ChangesLogs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Roles]
          required: false
          description: Equality filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$has]
          required: false
          description: Collection contains filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasEvery]
          required: false
          description: Collection contains-all filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasSome]
          required: false
          description: Collection contains-any filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$isEmpty]
          required: false
          description: Collection is empty filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Permissions]
          required: false
          description: Equality filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$has]
          required: false
          description: Collection contains filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasEvery]
          required: false
          description: Collection contains-all filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasSome]
          required: false
          description: Collection contains-any filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$isEmpty]
          required: false
          description: Collection is empty filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Tokens]
          required: false
          description: Equality filter for "Tokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ApiKeys]
          required: false
          description: Equality filter for "ApiKeys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[isTfaEnable]
          required: false
          description: Equality filter for "isTfaEnable"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[tfaSecret]
          required: false
          description: Equality filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$contains]
          required: false
          description: String contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$icontains]
          required: false
          description: String case-insensitive contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$search]
          required: false
          description: String full-text search filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$startsWith]
          required: false
          description: String startsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$endsWith]
          required: false
          description: String endsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userSecret]
          required: false
          description: Equality filter for "userSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[followers]
          required: false
          description: Equality filter for "followers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[followings]
          required: false
          description: Equality filter for "followings"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[posts_liked]
          required: false
          description: Equality filter for "posts_liked"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[passWordFaker]
          required: false
          description: Equality filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$contains]
          required: false
          description: String contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$icontains]
          required: false
          description: String case-insensitive contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$search]
          required: false
          description: String full-text search filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$startsWith]
          required: false
          description: String startsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$endsWith]
          required: false
          description: String endsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserFollowerListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/relationships/followers:
    get:
      operationId: fetch-User-relationship-followers
      description: Fetch the "followers" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName]
          required: false
          description: Equality filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$contains]
          required: false
          description: String contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$icontains]
          required: false
          description: String case-insensitive contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$search]
          required: false
          description: String full-text search filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$startsWith]
          required: false
          description: String startsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$endsWith]
          required: false
          description: String endsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName]
          required: false
          description: Equality filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$contains]
          required: false
          description: String contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$icontains]
          required: false
          description: String case-insensitive contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$search]
          required: false
          description: String full-text search filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$startsWith]
          required: false
          description: String startsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$endsWith]
          required: false
          description: String endsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Title"
        - name: filter[nickName]
          required: false
          description: Equality filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$contains]
          required: false
          description: String contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$icontains]
          required: false
          description: String case-insensitive contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$search]
          required: false
          description: String full-text search filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$startsWith]
          required: false
          description: String startsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$endsWith]
          required: false
          description: String endsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Gender]
          required: false
          description: Equality filter for "Gender"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Gender"
        - name: filter[social]
          required: false
          description: Equality filter for "social"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[Language]
          required: false
          description: Equality filter for "Language"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Language"
        - name: filter[dob]
          required: false
          description: Equality filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lt]
          required: false
          description: Less-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lte]
          required: false
          description: Less-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gt]
          required: false
          description: Greater-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gte]
          required: false
          description: Greater-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[isValidated]
          required: false
          description: Equality filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lt]
          required: false
          description: Less-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lte]
          required: false
          description: Less-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gt]
          required: false
          description: Greater-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gte]
          required: false
          description: Greater-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended]
          required: false
          description: Equality filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lt]
          required: false
          description: Less-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lte]
          required: false
          description: Less-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gt]
          required: false
          description: Greater-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gte]
          required: false
          description: Greater-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Orgs]
          required: false
          description: Equality filter for "Orgs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[manager]
          required: false
          description: Equality filter for "manager"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Team]
          required: false
          description: Equality filter for "Team"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Profiles]
          required: false
          description: Equality filter for "Profiles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Stories]
          required: false
          description: Equality filter for "Stories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todo]
          required: false
          description: Equality filter for "Todo"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TodosAuthor]
          required: false
          description: Equality filter for "TodosAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TasksAuthor]
          required: false
          description: Equality filter for "TasksAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ChangesLogs]
          required: false
          description: Equality filter for "ChangesLogs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Roles]
          required: false
          description: Equality filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$has]
          required: false
          description: Collection contains filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasEvery]
          required: false
          description: Collection contains-all filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasSome]
          required: false
          description: Collection contains-any filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$isEmpty]
          required: false
          description: Collection is empty filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Permissions]
          required: false
          description: Equality filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$has]
          required: false
          description: Collection contains filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasEvery]
          required: false
          description: Collection contains-all filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasSome]
          required: false
          description: Collection contains-any filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$isEmpty]
          required: false
          description: Collection is empty filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Tokens]
          required: false
          description: Equality filter for "Tokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ApiKeys]
          required: false
          description: Equality filter for "ApiKeys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[isTfaEnable]
          required: false
          description: Equality filter for "isTfaEnable"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[tfaSecret]
          required: false
          description: Equality filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$contains]
          required: false
          description: String contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$icontains]
          required: false
          description: String case-insensitive contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$search]
          required: false
          description: String full-text search filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$startsWith]
          required: false
          description: String startsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$endsWith]
          required: false
          description: String endsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userSecret]
          required: false
          description: Equality filter for "userSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[followers]
          required: false
          description: Equality filter for "followers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[followings]
          required: false
          description: Equality filter for "followings"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[posts_liked]
          required: false
          description: Equality filter for "posts_liked"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[passWordFaker]
          required: false
          description: Equality filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$contains]
          required: false
          description: String contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$icontains]
          required: false
          description: String case-insensitive contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$search]
          required: false
          description: String full-text search filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$startsWith]
          required: false
          description: String startsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$endsWith]
          required: false
          description: String endsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-User-relationship-followers-put
      description: Update "followers" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-User-relationship-followers-patch
      description: Update "followers" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-User-relationship-followers
      description: Create new "followers" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/followings:
    get:
      operationId: fetch-User-related-followings
      description: Fetch the related "followings" resource for "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName]
          required: false
          description: Equality filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$contains]
          required: false
          description: String contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$icontains]
          required: false
          description: String case-insensitive contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$search]
          required: false
          description: String full-text search filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$startsWith]
          required: false
          description: String startsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$endsWith]
          required: false
          description: String endsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName]
          required: false
          description: Equality filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$contains]
          required: false
          description: String contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$icontains]
          required: false
          description: String case-insensitive contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$search]
          required: false
          description: String full-text search filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$startsWith]
          required: false
          description: String startsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$endsWith]
          required: false
          description: String endsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Title"
        - name: filter[nickName]
          required: false
          description: Equality filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$contains]
          required: false
          description: String contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$icontains]
          required: false
          description: String case-insensitive contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$search]
          required: false
          description: String full-text search filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$startsWith]
          required: false
          description: String startsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$endsWith]
          required: false
          description: String endsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Gender]
          required: false
          description: Equality filter for "Gender"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Gender"
        - name: filter[social]
          required: false
          description: Equality filter for "social"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[Language]
          required: false
          description: Equality filter for "Language"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Language"
        - name: filter[dob]
          required: false
          description: Equality filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lt]
          required: false
          description: Less-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lte]
          required: false
          description: Less-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gt]
          required: false
          description: Greater-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gte]
          required: false
          description: Greater-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[isValidated]
          required: false
          description: Equality filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lt]
          required: false
          description: Less-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lte]
          required: false
          description: Less-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gt]
          required: false
          description: Greater-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gte]
          required: false
          description: Greater-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended]
          required: false
          description: Equality filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lt]
          required: false
          description: Less-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lte]
          required: false
          description: Less-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gt]
          required: false
          description: Greater-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gte]
          required: false
          description: Greater-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Orgs]
          required: false
          description: Equality filter for "Orgs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[manager]
          required: false
          description: Equality filter for "manager"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Team]
          required: false
          description: Equality filter for "Team"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Profiles]
          required: false
          description: Equality filter for "Profiles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Stories]
          required: false
          description: Equality filter for "Stories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todo]
          required: false
          description: Equality filter for "Todo"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TodosAuthor]
          required: false
          description: Equality filter for "TodosAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TasksAuthor]
          required: false
          description: Equality filter for "TasksAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ChangesLogs]
          required: false
          description: Equality filter for "ChangesLogs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Roles]
          required: false
          description: Equality filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$has]
          required: false
          description: Collection contains filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasEvery]
          required: false
          description: Collection contains-all filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasSome]
          required: false
          description: Collection contains-any filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$isEmpty]
          required: false
          description: Collection is empty filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Permissions]
          required: false
          description: Equality filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$has]
          required: false
          description: Collection contains filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasEvery]
          required: false
          description: Collection contains-all filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasSome]
          required: false
          description: Collection contains-any filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$isEmpty]
          required: false
          description: Collection is empty filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Tokens]
          required: false
          description: Equality filter for "Tokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ApiKeys]
          required: false
          description: Equality filter for "ApiKeys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[isTfaEnable]
          required: false
          description: Equality filter for "isTfaEnable"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[tfaSecret]
          required: false
          description: Equality filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$contains]
          required: false
          description: String contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$icontains]
          required: false
          description: String case-insensitive contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$search]
          required: false
          description: String full-text search filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$startsWith]
          required: false
          description: String startsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$endsWith]
          required: false
          description: String endsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userSecret]
          required: false
          description: Equality filter for "userSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[followers]
          required: false
          description: Equality filter for "followers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[followings]
          required: false
          description: Equality filter for "followings"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[posts_liked]
          required: false
          description: Equality filter for "posts_liked"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[passWordFaker]
          required: false
          description: Equality filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$contains]
          required: false
          description: String contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$icontains]
          required: false
          description: String case-insensitive contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$search]
          required: false
          description: String full-text search filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$startsWith]
          required: false
          description: String startsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$endsWith]
          required: false
          description: String endsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserFollowerListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/relationships/followings:
    get:
      operationId: fetch-User-relationship-followings
      description: Fetch the "followings" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName]
          required: false
          description: Equality filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$contains]
          required: false
          description: String contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$icontains]
          required: false
          description: String case-insensitive contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$search]
          required: false
          description: String full-text search filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$startsWith]
          required: false
          description: String startsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$endsWith]
          required: false
          description: String endsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName]
          required: false
          description: Equality filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$contains]
          required: false
          description: String contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$icontains]
          required: false
          description: String case-insensitive contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$search]
          required: false
          description: String full-text search filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$startsWith]
          required: false
          description: String startsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$endsWith]
          required: false
          description: String endsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Title"
        - name: filter[nickName]
          required: false
          description: Equality filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$contains]
          required: false
          description: String contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$icontains]
          required: false
          description: String case-insensitive contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$search]
          required: false
          description: String full-text search filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$startsWith]
          required: false
          description: String startsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$endsWith]
          required: false
          description: String endsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Gender]
          required: false
          description: Equality filter for "Gender"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Gender"
        - name: filter[social]
          required: false
          description: Equality filter for "social"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[Language]
          required: false
          description: Equality filter for "Language"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Language"
        - name: filter[dob]
          required: false
          description: Equality filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lt]
          required: false
          description: Less-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lte]
          required: false
          description: Less-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gt]
          required: false
          description: Greater-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gte]
          required: false
          description: Greater-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[isValidated]
          required: false
          description: Equality filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lt]
          required: false
          description: Less-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lte]
          required: false
          description: Less-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gt]
          required: false
          description: Greater-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gte]
          required: false
          description: Greater-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended]
          required: false
          description: Equality filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lt]
          required: false
          description: Less-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lte]
          required: false
          description: Less-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gt]
          required: false
          description: Greater-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gte]
          required: false
          description: Greater-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Orgs]
          required: false
          description: Equality filter for "Orgs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[manager]
          required: false
          description: Equality filter for "manager"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Team]
          required: false
          description: Equality filter for "Team"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Profiles]
          required: false
          description: Equality filter for "Profiles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Stories]
          required: false
          description: Equality filter for "Stories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todo]
          required: false
          description: Equality filter for "Todo"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TodosAuthor]
          required: false
          description: Equality filter for "TodosAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TasksAuthor]
          required: false
          description: Equality filter for "TasksAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ChangesLogs]
          required: false
          description: Equality filter for "ChangesLogs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Roles]
          required: false
          description: Equality filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$has]
          required: false
          description: Collection contains filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasEvery]
          required: false
          description: Collection contains-all filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasSome]
          required: false
          description: Collection contains-any filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$isEmpty]
          required: false
          description: Collection is empty filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Permissions]
          required: false
          description: Equality filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$has]
          required: false
          description: Collection contains filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasEvery]
          required: false
          description: Collection contains-all filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasSome]
          required: false
          description: Collection contains-any filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$isEmpty]
          required: false
          description: Collection is empty filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Tokens]
          required: false
          description: Equality filter for "Tokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ApiKeys]
          required: false
          description: Equality filter for "ApiKeys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[isTfaEnable]
          required: false
          description: Equality filter for "isTfaEnable"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[tfaSecret]
          required: false
          description: Equality filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$contains]
          required: false
          description: String contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$icontains]
          required: false
          description: String case-insensitive contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$search]
          required: false
          description: String full-text search filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$startsWith]
          required: false
          description: String startsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$endsWith]
          required: false
          description: String endsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userSecret]
          required: false
          description: Equality filter for "userSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[followers]
          required: false
          description: Equality filter for "followers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[followings]
          required: false
          description: Equality filter for "followings"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[posts_liked]
          required: false
          description: Equality filter for "posts_liked"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[passWordFaker]
          required: false
          description: Equality filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$contains]
          required: false
          description: String contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$icontains]
          required: false
          description: String case-insensitive contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$search]
          required: false
          description: String full-text search filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$startsWith]
          required: false
          description: String startsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$endsWith]
          required: false
          description: String endsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-User-relationship-followings-put
      description: Update "followings" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-User-relationship-followings-patch
      description: Update "followings" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-User-relationship-followings
      description: Create new "followings" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/posts_liked:
    get:
      operationId: fetch-User-related-posts_liked
      description: Fetch the related "posts_liked" resource for "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName]
          required: false
          description: Equality filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$contains]
          required: false
          description: String contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$icontains]
          required: false
          description: String case-insensitive contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$search]
          required: false
          description: String full-text search filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$startsWith]
          required: false
          description: String startsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$endsWith]
          required: false
          description: String endsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName]
          required: false
          description: Equality filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$contains]
          required: false
          description: String contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$icontains]
          required: false
          description: String case-insensitive contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$search]
          required: false
          description: String full-text search filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$startsWith]
          required: false
          description: String startsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$endsWith]
          required: false
          description: String endsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Title"
        - name: filter[nickName]
          required: false
          description: Equality filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$contains]
          required: false
          description: String contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$icontains]
          required: false
          description: String case-insensitive contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$search]
          required: false
          description: String full-text search filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$startsWith]
          required: false
          description: String startsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$endsWith]
          required: false
          description: String endsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Gender]
          required: false
          description: Equality filter for "Gender"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Gender"
        - name: filter[social]
          required: false
          description: Equality filter for "social"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[Language]
          required: false
          description: Equality filter for "Language"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Language"
        - name: filter[dob]
          required: false
          description: Equality filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lt]
          required: false
          description: Less-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lte]
          required: false
          description: Less-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gt]
          required: false
          description: Greater-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gte]
          required: false
          description: Greater-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[isValidated]
          required: false
          description: Equality filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lt]
          required: false
          description: Less-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lte]
          required: false
          description: Less-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gt]
          required: false
          description: Greater-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gte]
          required: false
          description: Greater-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended]
          required: false
          description: Equality filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lt]
          required: false
          description: Less-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lte]
          required: false
          description: Less-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gt]
          required: false
          description: Greater-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gte]
          required: false
          description: Greater-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Orgs]
          required: false
          description: Equality filter for "Orgs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[manager]
          required: false
          description: Equality filter for "manager"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Team]
          required: false
          description: Equality filter for "Team"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Profiles]
          required: false
          description: Equality filter for "Profiles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Stories]
          required: false
          description: Equality filter for "Stories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todo]
          required: false
          description: Equality filter for "Todo"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TodosAuthor]
          required: false
          description: Equality filter for "TodosAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TasksAuthor]
          required: false
          description: Equality filter for "TasksAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ChangesLogs]
          required: false
          description: Equality filter for "ChangesLogs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Roles]
          required: false
          description: Equality filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$has]
          required: false
          description: Collection contains filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasEvery]
          required: false
          description: Collection contains-all filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasSome]
          required: false
          description: Collection contains-any filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$isEmpty]
          required: false
          description: Collection is empty filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Permissions]
          required: false
          description: Equality filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$has]
          required: false
          description: Collection contains filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasEvery]
          required: false
          description: Collection contains-all filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasSome]
          required: false
          description: Collection contains-any filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$isEmpty]
          required: false
          description: Collection is empty filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Tokens]
          required: false
          description: Equality filter for "Tokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ApiKeys]
          required: false
          description: Equality filter for "ApiKeys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[isTfaEnable]
          required: false
          description: Equality filter for "isTfaEnable"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[tfaSecret]
          required: false
          description: Equality filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$contains]
          required: false
          description: String contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$icontains]
          required: false
          description: String case-insensitive contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$search]
          required: false
          description: String full-text search filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$startsWith]
          required: false
          description: String startsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$endsWith]
          required: false
          description: String endsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userSecret]
          required: false
          description: Equality filter for "userSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[followers]
          required: false
          description: Equality filter for "followers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[followings]
          required: false
          description: Equality filter for "followings"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[posts_liked]
          required: false
          description: Equality filter for "posts_liked"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[passWordFaker]
          required: false
          description: Equality filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$contains]
          required: false
          description: String contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$icontains]
          required: false
          description: String case-insensitive contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$search]
          required: false
          description: String full-text search filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$startsWith]
          required: false
          description: String startsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$endsWith]
          required: false
          description: String endsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/PostLikeListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/user/{id}/relationships/posts_liked:
    get:
      operationId: fetch-User-relationship-posts_liked
      description: Fetch the "posts_liked" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName]
          required: false
          description: Equality filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$contains]
          required: false
          description: String contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$icontains]
          required: false
          description: String case-insensitive contains filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$search]
          required: false
          description: String full-text search filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$startsWith]
          required: false
          description: String startsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[lastName$endsWith]
          required: false
          description: String endsWith filter for "lastName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName]
          required: false
          description: Equality filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$contains]
          required: false
          description: String contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$icontains]
          required: false
          description: String case-insensitive contains filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$search]
          required: false
          description: String full-text search filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$startsWith]
          required: false
          description: String startsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[firstName$endsWith]
          required: false
          description: String endsWith filter for "firstName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Title"
        - name: filter[nickName]
          required: false
          description: Equality filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$contains]
          required: false
          description: String contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$icontains]
          required: false
          description: String case-insensitive contains filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$search]
          required: false
          description: String full-text search filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$startsWith]
          required: false
          description: String startsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[nickName$endsWith]
          required: false
          description: String endsWith filter for "nickName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Gender]
          required: false
          description: Equality filter for "Gender"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Gender"
        - name: filter[social]
          required: false
          description: Equality filter for "social"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[Language]
          required: false
          description: Equality filter for "Language"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Language"
        - name: filter[dob]
          required: false
          description: Equality filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lt]
          required: false
          description: Less-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$lte]
          required: false
          description: Less-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gt]
          required: false
          description: Greater-than filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[dob$gte]
          required: false
          description: Greater-than or equal filter for "dob"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[address]
          required: false
          description: Equality filter for "address"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[isValidated]
          required: false
          description: Equality filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lt]
          required: false
          description: Less-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$lte]
          required: false
          description: Less-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gt]
          required: false
          description: Greater-than filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated$gte]
          required: false
          description: Greater-than or equal filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended]
          required: false
          description: Equality filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lt]
          required: false
          description: Less-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$lte]
          required: false
          description: Less-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gt]
          required: false
          description: Greater-than filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isSuspended$gte]
          required: false
          description: Greater-than or equal filter for "isSuspended"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Orgs]
          required: false
          description: Equality filter for "Orgs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[manager]
          required: false
          description: Equality filter for "manager"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Team]
          required: false
          description: Equality filter for "Team"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Profiles]
          required: false
          description: Equality filter for "Profiles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Groups]
          required: false
          description: Equality filter for "Groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Stories]
          required: false
          description: Equality filter for "Stories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todo]
          required: false
          description: Equality filter for "Todo"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TodosAuthor]
          required: false
          description: Equality filter for "TodosAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[TasksAuthor]
          required: false
          description: Equality filter for "TasksAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ChangesLogs]
          required: false
          description: Equality filter for "ChangesLogs"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Roles]
          required: false
          description: Equality filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$has]
          required: false
          description: Collection contains filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasEvery]
          required: false
          description: Collection contains-all filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$hasSome]
          required: false
          description: Collection contains-any filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Role"
        - name: filter[Roles$isEmpty]
          required: false
          description: Collection is empty filter for "Roles"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Permissions]
          required: false
          description: Equality filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$has]
          required: false
          description: Collection contains filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasEvery]
          required: false
          description: Collection contains-all filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$hasSome]
          required: false
          description: Collection contains-any filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PermissionClaim"
        - name: filter[Permissions$isEmpty]
          required: false
          description: Collection is empty filter for "Permissions"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[Tokens]
          required: false
          description: Equality filter for "Tokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ApiKeys]
          required: false
          description: Equality filter for "ApiKeys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[isTfaEnable]
          required: false
          description: Equality filter for "isTfaEnable"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[tfaSecret]
          required: false
          description: Equality filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$contains]
          required: false
          description: String contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$icontains]
          required: false
          description: String case-insensitive contains filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$search]
          required: false
          description: String full-text search filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$startsWith]
          required: false
          description: String startsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tfaSecret$endsWith]
          required: false
          description: String endsWith filter for "tfaSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userSecret]
          required: false
          description: Equality filter for "userSecret"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[followers]
          required: false
          description: Equality filter for "followers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[followings]
          required: false
          description: Equality filter for "followings"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[posts_liked]
          required: false
          description: Equality filter for "posts_liked"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[passWordFaker]
          required: false
          description: Equality filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$contains]
          required: false
          description: String contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$icontains]
          required: false
          description: String case-insensitive contains filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$search]
          required: false
          description: String full-text search filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$startsWith]
          required: false
          description: String startsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[passWordFaker$endsWith]
          required: false
          description: String endsWith filter for "passWordFaker"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-User-relationship-posts_liked-put
      description: Update "posts_liked" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-User-relationship-posts_liked-patch
      description: Update "posts_liked" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-User-relationship-posts_liked
      description: Create new "posts_liked" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/userSecret:
    get:
      operationId: list-UserSecret
      description: List "UserSecret" resources
      tags:
        - userSecret
      parameters:
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[user]
          required: false
          description: Equality filter for "user"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[pwdHash]
          required: false
          description: Equality filter for "pwdHash"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[pwdHash$contains]
          required: false
          description: String contains filter for "pwdHash"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[pwdHash$icontains]
          required: false
          description: String case-insensitive contains filter for "pwdHash"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[pwdHash$search]
          required: false
          description: String full-text search filter for "pwdHash"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[pwdHash$startsWith]
          required: false
          description: String startsWith filter for "pwdHash"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[pwdHash$endsWith]
          required: false
          description: String endsWith filter for "pwdHash"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[salt]
          required: false
          description: Equality filter for "salt"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[salt$contains]
          required: false
          description: String contains filter for "salt"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[salt$icontains]
          required: false
          description: String case-insensitive contains filter for "salt"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[salt$search]
          required: false
          description: String full-text search filter for "salt"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[salt$startsWith]
          required: false
          description: String startsWith filter for "salt"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[salt$endsWith]
          required: false
          description: String endsWith filter for "salt"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[isAdmin]
          required: false
          description: Equality filter for "isAdmin"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserSecretListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-UserSecret
      description: Create a "UserSecret" resource
      tags:
        - userSecret
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/UserSecretCreateRequest"
      responses:
        "201":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserSecretResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/userSecret/{id}:
    get:
      operationId: fetch-UserSecret
      description: Fetch a "UserSecret" resource
      tags:
        - userSecret
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserSecretResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-UserSecret-put
      description: Update a "UserSecret" resource
      tags:
        - userSecret
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/UserSecretUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserSecretResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-UserSecret-patch
      description: Update a "UserSecret" resource
      tags:
        - userSecret
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/UserSecretUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserSecretResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    delete:
      operationId: delete-UserSecret
      description: Delete a "UserSecret" resource
      tags:
        - userSecret
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/userSecret/{id}/user:
    get:
      operationId: fetch-UserSecret-related-user
      description: Fetch the related "user" resource for "UserSecret"
      tags:
        - userSecret
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/userSecret/{id}/relationships/user:
    get:
      operationId: fetch-UserSecret-relationship-user
      description: Fetch the "user" relationships for a "UserSecret"
      tags:
        - userSecret
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-UserSecret-relationship-user-put
      description: Update "user" relationship for a "UserSecret"
      tags:
        - userSecret
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-UserSecret-relationship-user-patch
      description: Update "user" relationship for a "UserSecret"
      tags:
        - userSecret
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/profile:
    get:
      operationId: list-Profile
      description: List "Profile" resources
      tags:
        - profile
      parameters:
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[orderProfile]
          required: false
          description: Equality filter for "orderProfile"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderProfile$lt]
          required: false
          description: Less-than filter for "orderProfile"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderProfile$lte]
          required: false
          description: Less-than or equal filter for "orderProfile"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderProfile$gt]
          required: false
          description: Greater-than filter for "orderProfile"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderProfile$gte]
          required: false
          description: Greater-than or equal filter for "orderProfile"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[Users]
          required: false
          description: Equality filter for "Users"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[bio]
          required: false
          description: Equality filter for "bio"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[bio$contains]
          required: false
          description: String contains filter for "bio"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[bio$icontains]
          required: false
          description: String case-insensitive contains filter for "bio"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[bio$search]
          required: false
          description: String full-text search filter for "bio"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[bio$startsWith]
          required: false
          description: String startsWith filter for "bio"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[bio$endsWith]
          required: false
          description: String endsWith filter for "bio"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ProfileListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Profile
      description: Create a "Profile" resource
      tags:
        - profile
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/ProfileCreateRequest"
      responses:
        "201":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ProfileResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/profile/{id}:
    get:
      operationId: fetch-Profile
      description: Fetch a "Profile" resource
      tags:
        - profile
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ProfileResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Profile-put
      description: Update a "Profile" resource
      tags:
        - profile
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/ProfileUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ProfileResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Profile-patch
      description: Update a "Profile" resource
      tags:
        - profile
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/ProfileUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ProfileResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    delete:
      operationId: delete-Profile
      description: Delete a "Profile" resource
      tags:
        - profile
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/profile/{id}/Users:
    get:
      operationId: fetch-Profile-related-Users
      description: Fetch the related "Users" resource for "Profile"
      tags:
        - profile
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[orderProfile]
          required: false
          description: Equality filter for "orderProfile"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderProfile$lt]
          required: false
          description: Less-than filter for "orderProfile"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderProfile$lte]
          required: false
          description: Less-than or equal filter for "orderProfile"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderProfile$gt]
          required: false
          description: Greater-than filter for "orderProfile"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderProfile$gte]
          required: false
          description: Greater-than or equal filter for "orderProfile"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[Users]
          required: false
          description: Equality filter for "Users"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[bio]
          required: false
          description: Equality filter for "bio"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[bio$contains]
          required: false
          description: String contains filter for "bio"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[bio$icontains]
          required: false
          description: String case-insensitive contains filter for "bio"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[bio$search]
          required: false
          description: String full-text search filter for "bio"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[bio$startsWith]
          required: false
          description: String startsWith filter for "bio"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[bio$endsWith]
          required: false
          description: String endsWith filter for "bio"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/profile/{id}/relationships/Users:
    get:
      operationId: fetch-Profile-relationship-Users
      description: Fetch the "Users" relationships for a "Profile"
      tags:
        - profile
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[orderProfile]
          required: false
          description: Equality filter for "orderProfile"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderProfile$lt]
          required: false
          description: Less-than filter for "orderProfile"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderProfile$lte]
          required: false
          description: Less-than or equal filter for "orderProfile"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderProfile$gt]
          required: false
          description: Greater-than filter for "orderProfile"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderProfile$gte]
          required: false
          description: Greater-than or equal filter for "orderProfile"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[Users]
          required: false
          description: Equality filter for "Users"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[bio]
          required: false
          description: Equality filter for "bio"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[bio$contains]
          required: false
          description: String contains filter for "bio"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[bio$icontains]
          required: false
          description: String case-insensitive contains filter for "bio"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[bio$search]
          required: false
          description: String full-text search filter for "bio"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[bio$startsWith]
          required: false
          description: String startsWith filter for "bio"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[bio$endsWith]
          required: false
          description: String endsWith filter for "bio"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Profile-relationship-Users-put
      description: Update "Users" relationships for a "Profile"
      tags:
        - profile
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Profile-relationship-Users-patch
      description: Update "Users" relationships for a "Profile"
      tags:
        - profile
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Profile-relationship-Users
      description: Create new "Users" relationships for a "Profile"
      tags:
        - profile
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/group:
    get:
      operationId: list-Group
      description: List "Group" resources
      tags:
        - group
      parameters:
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[orderGroup]
          required: false
          description: Equality filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$lt]
          required: false
          description: Less-than filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$lte]
          required: false
          description: Less-than or equal filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$gt]
          required: false
          description: Greater-than filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$gte]
          required: false
          description: Greater-than or equal filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description]
          required: false
          description: Equality filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$contains]
          required: false
          description: String contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$icontains]
          required: false
          description: String case-insensitive contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$search]
          required: false
          description: String full-text search filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$startsWith]
          required: false
          description: String startsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$endsWith]
          required: false
          description: String endsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[isActiv]
          required: false
          description: Equality filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$lt]
          required: false
          description: Less-than filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$lte]
          required: false
          description: Less-than or equal filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$gt]
          required: false
          description: Greater-than filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$gte]
          required: false
          description: Greater-than or equal filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Users]
          required: false
          description: Equality filter for "Users"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todos]
          required: false
          description: Equality filter for "Todos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GroupListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Group
      description: Create a "Group" resource
      tags:
        - group
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/GroupCreateRequest"
      responses:
        "201":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GroupResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/group/{id}:
    get:
      operationId: fetch-Group
      description: Fetch a "Group" resource
      tags:
        - group
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GroupResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Group-put
      description: Update a "Group" resource
      tags:
        - group
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/GroupUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GroupResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Group-patch
      description: Update a "Group" resource
      tags:
        - group
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/GroupUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GroupResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    delete:
      operationId: delete-Group
      description: Delete a "Group" resource
      tags:
        - group
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/group/{id}/Users:
    get:
      operationId: fetch-Group-related-Users
      description: Fetch the related "Users" resource for "Group"
      tags:
        - group
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[orderGroup]
          required: false
          description: Equality filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$lt]
          required: false
          description: Less-than filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$lte]
          required: false
          description: Less-than or equal filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$gt]
          required: false
          description: Greater-than filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$gte]
          required: false
          description: Greater-than or equal filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description]
          required: false
          description: Equality filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$contains]
          required: false
          description: String contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$icontains]
          required: false
          description: String case-insensitive contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$search]
          required: false
          description: String full-text search filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$startsWith]
          required: false
          description: String startsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$endsWith]
          required: false
          description: String endsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[isActiv]
          required: false
          description: Equality filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$lt]
          required: false
          description: Less-than filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$lte]
          required: false
          description: Less-than or equal filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$gt]
          required: false
          description: Greater-than filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$gte]
          required: false
          description: Greater-than or equal filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Users]
          required: false
          description: Equality filter for "Users"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todos]
          required: false
          description: Equality filter for "Todos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/group/{id}/relationships/Users:
    get:
      operationId: fetch-Group-relationship-Users
      description: Fetch the "Users" relationships for a "Group"
      tags:
        - group
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[orderGroup]
          required: false
          description: Equality filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$lt]
          required: false
          description: Less-than filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$lte]
          required: false
          description: Less-than or equal filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$gt]
          required: false
          description: Greater-than filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$gte]
          required: false
          description: Greater-than or equal filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description]
          required: false
          description: Equality filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$contains]
          required: false
          description: String contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$icontains]
          required: false
          description: String case-insensitive contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$search]
          required: false
          description: String full-text search filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$startsWith]
          required: false
          description: String startsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$endsWith]
          required: false
          description: String endsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[isActiv]
          required: false
          description: Equality filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$lt]
          required: false
          description: Less-than filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$lte]
          required: false
          description: Less-than or equal filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$gt]
          required: false
          description: Greater-than filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$gte]
          required: false
          description: Greater-than or equal filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Users]
          required: false
          description: Equality filter for "Users"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todos]
          required: false
          description: Equality filter for "Todos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Group-relationship-Users-put
      description: Update "Users" relationships for a "Group"
      tags:
        - group
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Group-relationship-Users-patch
      description: Update "Users" relationships for a "Group"
      tags:
        - group
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Group-relationship-Users
      description: Create new "Users" relationships for a "Group"
      tags:
        - group
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/group/{id}/Tasks:
    get:
      operationId: fetch-Group-related-Tasks
      description: Fetch the related "Tasks" resource for "Group"
      tags:
        - group
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[orderGroup]
          required: false
          description: Equality filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$lt]
          required: false
          description: Less-than filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$lte]
          required: false
          description: Less-than or equal filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$gt]
          required: false
          description: Greater-than filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$gte]
          required: false
          description: Greater-than or equal filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description]
          required: false
          description: Equality filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$contains]
          required: false
          description: String contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$icontains]
          required: false
          description: String case-insensitive contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$search]
          required: false
          description: String full-text search filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$startsWith]
          required: false
          description: String startsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$endsWith]
          required: false
          description: String endsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[isActiv]
          required: false
          description: Equality filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$lt]
          required: false
          description: Less-than filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$lte]
          required: false
          description: Less-than or equal filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$gt]
          required: false
          description: Greater-than filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$gte]
          required: false
          description: Greater-than or equal filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Users]
          required: false
          description: Equality filter for "Users"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todos]
          required: false
          description: Equality filter for "Todos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/TaskListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/group/{id}/relationships/Tasks:
    get:
      operationId: fetch-Group-relationship-Tasks
      description: Fetch the "Tasks" relationships for a "Group"
      tags:
        - group
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[orderGroup]
          required: false
          description: Equality filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$lt]
          required: false
          description: Less-than filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$lte]
          required: false
          description: Less-than or equal filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$gt]
          required: false
          description: Greater-than filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$gte]
          required: false
          description: Greater-than or equal filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description]
          required: false
          description: Equality filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$contains]
          required: false
          description: String contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$icontains]
          required: false
          description: String case-insensitive contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$search]
          required: false
          description: String full-text search filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$startsWith]
          required: false
          description: String startsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$endsWith]
          required: false
          description: String endsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[isActiv]
          required: false
          description: Equality filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$lt]
          required: false
          description: Less-than filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$lte]
          required: false
          description: Less-than or equal filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$gt]
          required: false
          description: Greater-than filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$gte]
          required: false
          description: Greater-than or equal filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Users]
          required: false
          description: Equality filter for "Users"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todos]
          required: false
          description: Equality filter for "Todos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Group-relationship-Tasks-put
      description: Update "Tasks" relationships for a "Group"
      tags:
        - group
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Group-relationship-Tasks-patch
      description: Update "Tasks" relationships for a "Group"
      tags:
        - group
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Group-relationship-Tasks
      description: Create new "Tasks" relationships for a "Group"
      tags:
        - group
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/group/{id}/Todos:
    get:
      operationId: fetch-Group-related-Todos
      description: Fetch the related "Todos" resource for "Group"
      tags:
        - group
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[orderGroup]
          required: false
          description: Equality filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$lt]
          required: false
          description: Less-than filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$lte]
          required: false
          description: Less-than or equal filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$gt]
          required: false
          description: Greater-than filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$gte]
          required: false
          description: Greater-than or equal filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description]
          required: false
          description: Equality filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$contains]
          required: false
          description: String contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$icontains]
          required: false
          description: String case-insensitive contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$search]
          required: false
          description: String full-text search filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$startsWith]
          required: false
          description: String startsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$endsWith]
          required: false
          description: String endsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[isActiv]
          required: false
          description: Equality filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$lt]
          required: false
          description: Less-than filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$lte]
          required: false
          description: Less-than or equal filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$gt]
          required: false
          description: Greater-than filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$gte]
          required: false
          description: Greater-than or equal filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Users]
          required: false
          description: Equality filter for "Users"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todos]
          required: false
          description: Equality filter for "Todos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/TodoListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/group/{id}/relationships/Todos:
    get:
      operationId: fetch-Group-relationship-Todos
      description: Fetch the "Todos" relationships for a "Group"
      tags:
        - group
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[orderGroup]
          required: false
          description: Equality filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$lt]
          required: false
          description: Less-than filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$lte]
          required: false
          description: Less-than or equal filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$gt]
          required: false
          description: Greater-than filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$gte]
          required: false
          description: Greater-than or equal filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description]
          required: false
          description: Equality filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$contains]
          required: false
          description: String contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$icontains]
          required: false
          description: String case-insensitive contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$search]
          required: false
          description: String full-text search filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$startsWith]
          required: false
          description: String startsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$endsWith]
          required: false
          description: String endsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[isActiv]
          required: false
          description: Equality filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$lt]
          required: false
          description: Less-than filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$lte]
          required: false
          description: Less-than or equal filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$gt]
          required: false
          description: Greater-than filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$gte]
          required: false
          description: Greater-than or equal filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Users]
          required: false
          description: Equality filter for "Users"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todos]
          required: false
          description: Equality filter for "Todos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Group-relationship-Todos-put
      description: Update "Todos" relationships for a "Group"
      tags:
        - group
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Group-relationship-Todos-patch
      description: Update "Todos" relationships for a "Group"
      tags:
        - group
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Group-relationship-Todos
      description: Create new "Todos" relationships for a "Group"
      tags:
        - group
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/group/{id}/Posts:
    get:
      operationId: fetch-Group-related-Posts
      description: Fetch the related "Posts" resource for "Group"
      tags:
        - group
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[orderGroup]
          required: false
          description: Equality filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$lt]
          required: false
          description: Less-than filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$lte]
          required: false
          description: Less-than or equal filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$gt]
          required: false
          description: Greater-than filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$gte]
          required: false
          description: Greater-than or equal filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description]
          required: false
          description: Equality filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$contains]
          required: false
          description: String contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$icontains]
          required: false
          description: String case-insensitive contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$search]
          required: false
          description: String full-text search filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$startsWith]
          required: false
          description: String startsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$endsWith]
          required: false
          description: String endsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[isActiv]
          required: false
          description: Equality filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$lt]
          required: false
          description: Less-than filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$lte]
          required: false
          description: Less-than or equal filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$gt]
          required: false
          description: Greater-than filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$gte]
          required: false
          description: Greater-than or equal filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Users]
          required: false
          description: Equality filter for "Users"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todos]
          required: false
          description: Equality filter for "Todos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/PostListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/group/{id}/relationships/Posts:
    get:
      operationId: fetch-Group-relationship-Posts
      description: Fetch the "Posts" relationships for a "Group"
      tags:
        - group
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[orderGroup]
          required: false
          description: Equality filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$lt]
          required: false
          description: Less-than filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$lte]
          required: false
          description: Less-than or equal filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$gt]
          required: false
          description: Greater-than filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$gte]
          required: false
          description: Greater-than or equal filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description]
          required: false
          description: Equality filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$contains]
          required: false
          description: String contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$icontains]
          required: false
          description: String case-insensitive contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$search]
          required: false
          description: String full-text search filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$startsWith]
          required: false
          description: String startsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$endsWith]
          required: false
          description: String endsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[isActiv]
          required: false
          description: Equality filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$lt]
          required: false
          description: Less-than filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$lte]
          required: false
          description: Less-than or equal filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$gt]
          required: false
          description: Greater-than filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$gte]
          required: false
          description: Greater-than or equal filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Users]
          required: false
          description: Equality filter for "Users"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todos]
          required: false
          description: Equality filter for "Todos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Group-relationship-Posts-put
      description: Update "Posts" relationships for a "Group"
      tags:
        - group
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Group-relationship-Posts-patch
      description: Update "Posts" relationships for a "Group"
      tags:
        - group
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Group-relationship-Posts
      description: Create new "Posts" relationships for a "Group"
      tags:
        - group
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/group/{id}/Files:
    get:
      operationId: fetch-Group-related-Files
      description: Fetch the related "Files" resource for "Group"
      tags:
        - group
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[orderGroup]
          required: false
          description: Equality filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$lt]
          required: false
          description: Less-than filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$lte]
          required: false
          description: Less-than or equal filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$gt]
          required: false
          description: Greater-than filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$gte]
          required: false
          description: Greater-than or equal filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description]
          required: false
          description: Equality filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$contains]
          required: false
          description: String contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$icontains]
          required: false
          description: String case-insensitive contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$search]
          required: false
          description: String full-text search filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$startsWith]
          required: false
          description: String startsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$endsWith]
          required: false
          description: String endsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[isActiv]
          required: false
          description: Equality filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$lt]
          required: false
          description: Less-than filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$lte]
          required: false
          description: Less-than or equal filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$gt]
          required: false
          description: Greater-than filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$gte]
          required: false
          description: Greater-than or equal filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Users]
          required: false
          description: Equality filter for "Users"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todos]
          required: false
          description: Equality filter for "Todos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/FileListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/group/{id}/relationships/Files:
    get:
      operationId: fetch-Group-relationship-Files
      description: Fetch the "Files" relationships for a "Group"
      tags:
        - group
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[orderGroup]
          required: false
          description: Equality filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$lt]
          required: false
          description: Less-than filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$lte]
          required: false
          description: Less-than or equal filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$gt]
          required: false
          description: Greater-than filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderGroup$gte]
          required: false
          description: Greater-than or equal filter for "orderGroup"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description]
          required: false
          description: Equality filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$contains]
          required: false
          description: String contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$icontains]
          required: false
          description: String case-insensitive contains filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$search]
          required: false
          description: String full-text search filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$startsWith]
          required: false
          description: String startsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[description$endsWith]
          required: false
          description: String endsWith filter for "description"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[isActiv]
          required: false
          description: Equality filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$lt]
          required: false
          description: Less-than filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$lte]
          required: false
          description: Less-than or equal filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$gt]
          required: false
          description: Greater-than filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isActiv$gte]
          required: false
          description: Greater-than or equal filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[Users]
          required: false
          description: Equality filter for "Users"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Todos]
          required: false
          description: Equality filter for "Todos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Files]
          required: false
          description: Equality filter for "Files"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Group-relationship-Files-put
      description: Update "Files" relationships for a "Group"
      tags:
        - group
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Group-relationship-Files-patch
      description: Update "Files" relationships for a "Group"
      tags:
        - group
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Group-relationship-Files
      description: Create new "Files" relationships for a "Group"
      tags:
        - group
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/group/{id}/org:
    get:
      operationId: fetch-Group-related-org
      description: Fetch the related "org" resource for "Group"
      tags:
        - group
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OrganizationResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/group/{id}/relationships/org:
    get:
      operationId: fetch-Group-relationship-org
      description: Fetch the "org" relationships for a "Group"
      tags:
        - group
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Group-relationship-org-put
      description: Update "org" relationship for a "Group"
      tags:
        - group
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Group-relationship-org-patch
      description: Update "org" relationship for a "Group"
      tags:
        - group
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/todo:
    get:
      operationId: list-Todo
      description: List "Todo" resources
      tags:
        - todo
      parameters:
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[owner]
          required: false
          description: Equality filter for "owner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId]
          required: false
          description: Equality filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$contains]
          required: false
          description: String contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$icontains]
          required: false
          description: String case-insensitive contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$search]
          required: false
          description: String full-text search filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$startsWith]
          required: false
          description: String startsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$endsWith]
          required: false
          description: String endsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId]
          required: false
          description: Equality filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$contains]
          required: false
          description: String contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$icontains]
          required: false
          description: String case-insensitive contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$search]
          required: false
          description: String full-text search filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$startsWith]
          required: false
          description: String startsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$endsWith]
          required: false
          description: String endsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[groups]
          required: false
          description: Equality filter for "groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[orderTodo]
          required: false
          description: Equality filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTodo$lt]
          required: false
          description: Less-than filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTodo$lte]
          required: false
          description: Less-than or equal filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTodo$gt]
          required: false
          description: Greater-than filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTodo$gte]
          required: false
          description: Greater-than or equal filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$contains]
          required: false
          description: String contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$icontains]
          required: false
          description: String case-insensitive contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$search]
          required: false
          description: String full-text search filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$startsWith]
          required: false
          description: String startsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$endsWith]
          required: false
          description: String endsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content]
          required: false
          description: Equality filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$contains]
          required: false
          description: String contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$icontains]
          required: false
          description: String case-insensitive contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$search]
          required: false
          description: String full-text search filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$startsWith]
          required: false
          description: String startsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$endsWith]
          required: false
          description: String endsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[todoState]
          required: false
          description: Equality filter for "todoState"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/TodoState"
        - name: filter[mainTodo]
          required: false
          description: Equality filter for "mainTodo"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[SubTodos]
          required: false
          description: Equality filter for "SubTodos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Users]
          required: false
          description: Equality filter for "Users"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/TodoListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Todo
      description: Create a "Todo" resource
      tags:
        - todo
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/TodoCreateRequest"
      responses:
        "201":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/TodoResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/todo/{id}:
    get:
      operationId: fetch-Todo
      description: Fetch a "Todo" resource
      tags:
        - todo
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/TodoResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Todo-put
      description: Update a "Todo" resource
      tags:
        - todo
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/TodoUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/TodoResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Todo-patch
      description: Update a "Todo" resource
      tags:
        - todo
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/TodoUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/TodoResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    delete:
      operationId: delete-Todo
      description: Delete a "Todo" resource
      tags:
        - todo
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/todo/{id}/owner:
    get:
      operationId: fetch-Todo-related-owner
      description: Fetch the related "owner" resource for "Todo"
      tags:
        - todo
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/todo/{id}/relationships/owner:
    get:
      operationId: fetch-Todo-relationship-owner
      description: Fetch the "owner" relationships for a "Todo"
      tags:
        - todo
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Todo-relationship-owner-put
      description: Update "owner" relationship for a "Todo"
      tags:
        - todo
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Todo-relationship-owner-patch
      description: Update "owner" relationship for a "Todo"
      tags:
        - todo
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/todo/{id}/org:
    get:
      operationId: fetch-Todo-related-org
      description: Fetch the related "org" resource for "Todo"
      tags:
        - todo
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OrganizationResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/todo/{id}/relationships/org:
    get:
      operationId: fetch-Todo-relationship-org
      description: Fetch the "org" relationships for a "Todo"
      tags:
        - todo
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Todo-relationship-org-put
      description: Update "org" relationship for a "Todo"
      tags:
        - todo
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Todo-relationship-org-patch
      description: Update "org" relationship for a "Todo"
      tags:
        - todo
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/todo/{id}/groups:
    get:
      operationId: fetch-Todo-related-groups
      description: Fetch the related "groups" resource for "Todo"
      tags:
        - todo
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[owner]
          required: false
          description: Equality filter for "owner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId]
          required: false
          description: Equality filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$contains]
          required: false
          description: String contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$icontains]
          required: false
          description: String case-insensitive contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$search]
          required: false
          description: String full-text search filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$startsWith]
          required: false
          description: String startsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$endsWith]
          required: false
          description: String endsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId]
          required: false
          description: Equality filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$contains]
          required: false
          description: String contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$icontains]
          required: false
          description: String case-insensitive contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$search]
          required: false
          description: String full-text search filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$startsWith]
          required: false
          description: String startsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$endsWith]
          required: false
          description: String endsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[groups]
          required: false
          description: Equality filter for "groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[orderTodo]
          required: false
          description: Equality filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTodo$lt]
          required: false
          description: Less-than filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTodo$lte]
          required: false
          description: Less-than or equal filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTodo$gt]
          required: false
          description: Greater-than filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTodo$gte]
          required: false
          description: Greater-than or equal filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$contains]
          required: false
          description: String contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$icontains]
          required: false
          description: String case-insensitive contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$search]
          required: false
          description: String full-text search filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$startsWith]
          required: false
          description: String startsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$endsWith]
          required: false
          description: String endsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content]
          required: false
          description: Equality filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$contains]
          required: false
          description: String contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$icontains]
          required: false
          description: String case-insensitive contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$search]
          required: false
          description: String full-text search filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$startsWith]
          required: false
          description: String startsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$endsWith]
          required: false
          description: String endsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[todoState]
          required: false
          description: Equality filter for "todoState"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/TodoState"
        - name: filter[mainTodo]
          required: false
          description: Equality filter for "mainTodo"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[SubTodos]
          required: false
          description: Equality filter for "SubTodos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Users]
          required: false
          description: Equality filter for "Users"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GroupListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/todo/{id}/relationships/groups:
    get:
      operationId: fetch-Todo-relationship-groups
      description: Fetch the "groups" relationships for a "Todo"
      tags:
        - todo
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[owner]
          required: false
          description: Equality filter for "owner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId]
          required: false
          description: Equality filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$contains]
          required: false
          description: String contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$icontains]
          required: false
          description: String case-insensitive contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$search]
          required: false
          description: String full-text search filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$startsWith]
          required: false
          description: String startsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$endsWith]
          required: false
          description: String endsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId]
          required: false
          description: Equality filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$contains]
          required: false
          description: String contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$icontains]
          required: false
          description: String case-insensitive contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$search]
          required: false
          description: String full-text search filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$startsWith]
          required: false
          description: String startsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$endsWith]
          required: false
          description: String endsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[groups]
          required: false
          description: Equality filter for "groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[orderTodo]
          required: false
          description: Equality filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTodo$lt]
          required: false
          description: Less-than filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTodo$lte]
          required: false
          description: Less-than or equal filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTodo$gt]
          required: false
          description: Greater-than filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTodo$gte]
          required: false
          description: Greater-than or equal filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$contains]
          required: false
          description: String contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$icontains]
          required: false
          description: String case-insensitive contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$search]
          required: false
          description: String full-text search filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$startsWith]
          required: false
          description: String startsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$endsWith]
          required: false
          description: String endsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content]
          required: false
          description: Equality filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$contains]
          required: false
          description: String contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$icontains]
          required: false
          description: String case-insensitive contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$search]
          required: false
          description: String full-text search filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$startsWith]
          required: false
          description: String startsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$endsWith]
          required: false
          description: String endsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[todoState]
          required: false
          description: Equality filter for "todoState"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/TodoState"
        - name: filter[mainTodo]
          required: false
          description: Equality filter for "mainTodo"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[SubTodos]
          required: false
          description: Equality filter for "SubTodos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Users]
          required: false
          description: Equality filter for "Users"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Todo-relationship-groups-put
      description: Update "groups" relationships for a "Todo"
      tags:
        - todo
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Todo-relationship-groups-patch
      description: Update "groups" relationships for a "Todo"
      tags:
        - todo
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Todo-relationship-groups
      description: Create new "groups" relationships for a "Todo"
      tags:
        - todo
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/todo/{id}/mainTodo:
    get:
      operationId: fetch-Todo-related-mainTodo
      description: Fetch the related "mainTodo" resource for "Todo"
      tags:
        - todo
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/TodoResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/todo/{id}/relationships/mainTodo:
    get:
      operationId: fetch-Todo-relationship-mainTodo
      description: Fetch the "mainTodo" relationships for a "Todo"
      tags:
        - todo
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Todo-relationship-mainTodo-put
      description: Update "mainTodo" relationship for a "Todo"
      tags:
        - todo
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Todo-relationship-mainTodo-patch
      description: Update "mainTodo" relationship for a "Todo"
      tags:
        - todo
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/todo/{id}/SubTodos:
    get:
      operationId: fetch-Todo-related-SubTodos
      description: Fetch the related "SubTodos" resource for "Todo"
      tags:
        - todo
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[owner]
          required: false
          description: Equality filter for "owner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId]
          required: false
          description: Equality filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$contains]
          required: false
          description: String contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$icontains]
          required: false
          description: String case-insensitive contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$search]
          required: false
          description: String full-text search filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$startsWith]
          required: false
          description: String startsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$endsWith]
          required: false
          description: String endsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId]
          required: false
          description: Equality filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$contains]
          required: false
          description: String contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$icontains]
          required: false
          description: String case-insensitive contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$search]
          required: false
          description: String full-text search filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$startsWith]
          required: false
          description: String startsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$endsWith]
          required: false
          description: String endsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[groups]
          required: false
          description: Equality filter for "groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[orderTodo]
          required: false
          description: Equality filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTodo$lt]
          required: false
          description: Less-than filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTodo$lte]
          required: false
          description: Less-than or equal filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTodo$gt]
          required: false
          description: Greater-than filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTodo$gte]
          required: false
          description: Greater-than or equal filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$contains]
          required: false
          description: String contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$icontains]
          required: false
          description: String case-insensitive contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$search]
          required: false
          description: String full-text search filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$startsWith]
          required: false
          description: String startsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$endsWith]
          required: false
          description: String endsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content]
          required: false
          description: Equality filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$contains]
          required: false
          description: String contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$icontains]
          required: false
          description: String case-insensitive contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$search]
          required: false
          description: String full-text search filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$startsWith]
          required: false
          description: String startsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$endsWith]
          required: false
          description: String endsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[todoState]
          required: false
          description: Equality filter for "todoState"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/TodoState"
        - name: filter[mainTodo]
          required: false
          description: Equality filter for "mainTodo"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[SubTodos]
          required: false
          description: Equality filter for "SubTodos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Users]
          required: false
          description: Equality filter for "Users"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/TodoListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/todo/{id}/relationships/SubTodos:
    get:
      operationId: fetch-Todo-relationship-SubTodos
      description: Fetch the "SubTodos" relationships for a "Todo"
      tags:
        - todo
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[owner]
          required: false
          description: Equality filter for "owner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId]
          required: false
          description: Equality filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$contains]
          required: false
          description: String contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$icontains]
          required: false
          description: String case-insensitive contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$search]
          required: false
          description: String full-text search filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$startsWith]
          required: false
          description: String startsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$endsWith]
          required: false
          description: String endsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId]
          required: false
          description: Equality filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$contains]
          required: false
          description: String contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$icontains]
          required: false
          description: String case-insensitive contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$search]
          required: false
          description: String full-text search filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$startsWith]
          required: false
          description: String startsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$endsWith]
          required: false
          description: String endsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[groups]
          required: false
          description: Equality filter for "groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[orderTodo]
          required: false
          description: Equality filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTodo$lt]
          required: false
          description: Less-than filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTodo$lte]
          required: false
          description: Less-than or equal filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTodo$gt]
          required: false
          description: Greater-than filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTodo$gte]
          required: false
          description: Greater-than or equal filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$contains]
          required: false
          description: String contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$icontains]
          required: false
          description: String case-insensitive contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$search]
          required: false
          description: String full-text search filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$startsWith]
          required: false
          description: String startsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$endsWith]
          required: false
          description: String endsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content]
          required: false
          description: Equality filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$contains]
          required: false
          description: String contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$icontains]
          required: false
          description: String case-insensitive contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$search]
          required: false
          description: String full-text search filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$startsWith]
          required: false
          description: String startsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$endsWith]
          required: false
          description: String endsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[todoState]
          required: false
          description: Equality filter for "todoState"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/TodoState"
        - name: filter[mainTodo]
          required: false
          description: Equality filter for "mainTodo"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[SubTodos]
          required: false
          description: Equality filter for "SubTodos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Users]
          required: false
          description: Equality filter for "Users"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Todo-relationship-SubTodos-put
      description: Update "SubTodos" relationships for a "Todo"
      tags:
        - todo
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Todo-relationship-SubTodos-patch
      description: Update "SubTodos" relationships for a "Todo"
      tags:
        - todo
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Todo-relationship-SubTodos
      description: Create new "SubTodos" relationships for a "Todo"
      tags:
        - todo
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/todo/{id}/Users:
    get:
      operationId: fetch-Todo-related-Users
      description: Fetch the related "Users" resource for "Todo"
      tags:
        - todo
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[owner]
          required: false
          description: Equality filter for "owner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId]
          required: false
          description: Equality filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$contains]
          required: false
          description: String contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$icontains]
          required: false
          description: String case-insensitive contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$search]
          required: false
          description: String full-text search filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$startsWith]
          required: false
          description: String startsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$endsWith]
          required: false
          description: String endsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId]
          required: false
          description: Equality filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$contains]
          required: false
          description: String contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$icontains]
          required: false
          description: String case-insensitive contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$search]
          required: false
          description: String full-text search filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$startsWith]
          required: false
          description: String startsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$endsWith]
          required: false
          description: String endsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[groups]
          required: false
          description: Equality filter for "groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[orderTodo]
          required: false
          description: Equality filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTodo$lt]
          required: false
          description: Less-than filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTodo$lte]
          required: false
          description: Less-than or equal filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTodo$gt]
          required: false
          description: Greater-than filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTodo$gte]
          required: false
          description: Greater-than or equal filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$contains]
          required: false
          description: String contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$icontains]
          required: false
          description: String case-insensitive contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$search]
          required: false
          description: String full-text search filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$startsWith]
          required: false
          description: String startsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$endsWith]
          required: false
          description: String endsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content]
          required: false
          description: Equality filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$contains]
          required: false
          description: String contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$icontains]
          required: false
          description: String case-insensitive contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$search]
          required: false
          description: String full-text search filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$startsWith]
          required: false
          description: String startsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$endsWith]
          required: false
          description: String endsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[todoState]
          required: false
          description: Equality filter for "todoState"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/TodoState"
        - name: filter[mainTodo]
          required: false
          description: Equality filter for "mainTodo"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[SubTodos]
          required: false
          description: Equality filter for "SubTodos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Users]
          required: false
          description: Equality filter for "Users"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserTodoLinkListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/todo/{id}/relationships/Users:
    get:
      operationId: fetch-Todo-relationship-Users
      description: Fetch the "Users" relationships for a "Todo"
      tags:
        - todo
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[owner]
          required: false
          description: Equality filter for "owner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId]
          required: false
          description: Equality filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$contains]
          required: false
          description: String contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$icontains]
          required: false
          description: String case-insensitive contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$search]
          required: false
          description: String full-text search filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$startsWith]
          required: false
          description: String startsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$endsWith]
          required: false
          description: String endsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId]
          required: false
          description: Equality filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$contains]
          required: false
          description: String contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$icontains]
          required: false
          description: String case-insensitive contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$search]
          required: false
          description: String full-text search filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$startsWith]
          required: false
          description: String startsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$endsWith]
          required: false
          description: String endsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[groups]
          required: false
          description: Equality filter for "groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[orderTodo]
          required: false
          description: Equality filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTodo$lt]
          required: false
          description: Less-than filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTodo$lte]
          required: false
          description: Less-than or equal filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTodo$gt]
          required: false
          description: Greater-than filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTodo$gte]
          required: false
          description: Greater-than or equal filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$contains]
          required: false
          description: String contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$icontains]
          required: false
          description: String case-insensitive contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$search]
          required: false
          description: String full-text search filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$startsWith]
          required: false
          description: String startsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$endsWith]
          required: false
          description: String endsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content]
          required: false
          description: Equality filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$contains]
          required: false
          description: String contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$icontains]
          required: false
          description: String case-insensitive contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$search]
          required: false
          description: String full-text search filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$startsWith]
          required: false
          description: String startsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$endsWith]
          required: false
          description: String endsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[todoState]
          required: false
          description: Equality filter for "todoState"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/TodoState"
        - name: filter[mainTodo]
          required: false
          description: Equality filter for "mainTodo"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[SubTodos]
          required: false
          description: Equality filter for "SubTodos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Users]
          required: false
          description: Equality filter for "Users"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Todo-relationship-Users-put
      description: Update "Users" relationships for a "Todo"
      tags:
        - todo
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Todo-relationship-Users-patch
      description: Update "Users" relationships for a "Todo"
      tags:
        - todo
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Todo-relationship-Users
      description: Create new "Users" relationships for a "Todo"
      tags:
        - todo
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/todo/{id}/Tasks:
    get:
      operationId: fetch-Todo-related-Tasks
      description: Fetch the related "Tasks" resource for "Todo"
      tags:
        - todo
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[owner]
          required: false
          description: Equality filter for "owner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId]
          required: false
          description: Equality filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$contains]
          required: false
          description: String contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$icontains]
          required: false
          description: String case-insensitive contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$search]
          required: false
          description: String full-text search filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$startsWith]
          required: false
          description: String startsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$endsWith]
          required: false
          description: String endsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId]
          required: false
          description: Equality filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$contains]
          required: false
          description: String contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$icontains]
          required: false
          description: String case-insensitive contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$search]
          required: false
          description: String full-text search filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$startsWith]
          required: false
          description: String startsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$endsWith]
          required: false
          description: String endsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[groups]
          required: false
          description: Equality filter for "groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[orderTodo]
          required: false
          description: Equality filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTodo$lt]
          required: false
          description: Less-than filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTodo$lte]
          required: false
          description: Less-than or equal filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTodo$gt]
          required: false
          description: Greater-than filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTodo$gte]
          required: false
          description: Greater-than or equal filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$contains]
          required: false
          description: String contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$icontains]
          required: false
          description: String case-insensitive contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$search]
          required: false
          description: String full-text search filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$startsWith]
          required: false
          description: String startsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$endsWith]
          required: false
          description: String endsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content]
          required: false
          description: Equality filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$contains]
          required: false
          description: String contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$icontains]
          required: false
          description: String case-insensitive contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$search]
          required: false
          description: String full-text search filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$startsWith]
          required: false
          description: String startsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$endsWith]
          required: false
          description: String endsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[todoState]
          required: false
          description: Equality filter for "todoState"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/TodoState"
        - name: filter[mainTodo]
          required: false
          description: Equality filter for "mainTodo"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[SubTodos]
          required: false
          description: Equality filter for "SubTodos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Users]
          required: false
          description: Equality filter for "Users"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/TaskListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/todo/{id}/relationships/Tasks:
    get:
      operationId: fetch-Todo-relationship-Tasks
      description: Fetch the "Tasks" relationships for a "Todo"
      tags:
        - todo
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[owner]
          required: false
          description: Equality filter for "owner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId]
          required: false
          description: Equality filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$contains]
          required: false
          description: String contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$icontains]
          required: false
          description: String case-insensitive contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$search]
          required: false
          description: String full-text search filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$startsWith]
          required: false
          description: String startsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$endsWith]
          required: false
          description: String endsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId]
          required: false
          description: Equality filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$contains]
          required: false
          description: String contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$icontains]
          required: false
          description: String case-insensitive contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$search]
          required: false
          description: String full-text search filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$startsWith]
          required: false
          description: String startsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$endsWith]
          required: false
          description: String endsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[groups]
          required: false
          description: Equality filter for "groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[orderTodo]
          required: false
          description: Equality filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTodo$lt]
          required: false
          description: Less-than filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTodo$lte]
          required: false
          description: Less-than or equal filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTodo$gt]
          required: false
          description: Greater-than filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTodo$gte]
          required: false
          description: Greater-than or equal filter for "orderTodo"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$contains]
          required: false
          description: String contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$icontains]
          required: false
          description: String case-insensitive contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$search]
          required: false
          description: String full-text search filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$startsWith]
          required: false
          description: String startsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$endsWith]
          required: false
          description: String endsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content]
          required: false
          description: Equality filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$contains]
          required: false
          description: String contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$icontains]
          required: false
          description: String case-insensitive contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$search]
          required: false
          description: String full-text search filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$startsWith]
          required: false
          description: String startsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$endsWith]
          required: false
          description: String endsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[todoState]
          required: false
          description: Equality filter for "todoState"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/TodoState"
        - name: filter[mainTodo]
          required: false
          description: Equality filter for "mainTodo"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[SubTodos]
          required: false
          description: Equality filter for "SubTodos"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Users]
          required: false
          description: Equality filter for "Users"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Tasks]
          required: false
          description: Equality filter for "Tasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Todo-relationship-Tasks-put
      description: Update "Tasks" relationships for a "Todo"
      tags:
        - todo
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Todo-relationship-Tasks-patch
      description: Update "Tasks" relationships for a "Todo"
      tags:
        - todo
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Todo-relationship-Tasks
      description: Create new "Tasks" relationships for a "Todo"
      tags:
        - todo
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/userTodoLink:
    get:
      operationId: list-UserTodoLink
      description: List "UserTodoLink" resources
      tags:
        - userTodoLink
      parameters:
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[user]
          required: false
          description: Equality filter for "user"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[todo]
          required: false
          description: Equality filter for "todo"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[isAuthor]
          required: false
          description: Equality filter for "isAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isAssigned]
          required: false
          description: Equality filter for "isAssigned"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[comment]
          required: false
          description: Equality filter for "comment"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[comment$contains]
          required: false
          description: String contains filter for "comment"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[comment$icontains]
          required: false
          description: String case-insensitive contains filter for "comment"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[comment$search]
          required: false
          description: String full-text search filter for "comment"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[comment$startsWith]
          required: false
          description: String startsWith filter for "comment"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[comment$endsWith]
          required: false
          description: String endsWith filter for "comment"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserTodoLinkListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-UserTodoLink
      description: Create a "UserTodoLink" resource
      tags:
        - userTodoLink
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/UserTodoLinkCreateRequest"
      responses:
        "201":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserTodoLinkResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/userTodoLink/{id}:
    get:
      operationId: fetch-UserTodoLink
      description: Fetch a "UserTodoLink" resource
      tags:
        - userTodoLink
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserTodoLinkResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-UserTodoLink-put
      description: Update a "UserTodoLink" resource
      tags:
        - userTodoLink
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/UserTodoLinkUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserTodoLinkResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-UserTodoLink-patch
      description: Update a "UserTodoLink" resource
      tags:
        - userTodoLink
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/UserTodoLinkUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserTodoLinkResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    delete:
      operationId: delete-UserTodoLink
      description: Delete a "UserTodoLink" resource
      tags:
        - userTodoLink
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/userTodoLink/{id}/user:
    get:
      operationId: fetch-UserTodoLink-related-user
      description: Fetch the related "user" resource for "UserTodoLink"
      tags:
        - userTodoLink
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/userTodoLink/{id}/relationships/user:
    get:
      operationId: fetch-UserTodoLink-relationship-user
      description: Fetch the "user" relationships for a "UserTodoLink"
      tags:
        - userTodoLink
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-UserTodoLink-relationship-user-put
      description: Update "user" relationship for a "UserTodoLink"
      tags:
        - userTodoLink
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-UserTodoLink-relationship-user-patch
      description: Update "user" relationship for a "UserTodoLink"
      tags:
        - userTodoLink
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/userTodoLink/{id}/todo:
    get:
      operationId: fetch-UserTodoLink-related-todo
      description: Fetch the related "todo" resource for "UserTodoLink"
      tags:
        - userTodoLink
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/TodoResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/userTodoLink/{id}/relationships/todo:
    get:
      operationId: fetch-UserTodoLink-relationship-todo
      description: Fetch the "todo" relationships for a "UserTodoLink"
      tags:
        - userTodoLink
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-UserTodoLink-relationship-todo-put
      description: Update "todo" relationship for a "UserTodoLink"
      tags:
        - userTodoLink
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-UserTodoLink-relationship-todo-patch
      description: Update "todo" relationship for a "UserTodoLink"
      tags:
        - userTodoLink
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/task:
    get:
      operationId: list-Task
      description: List "Task" resources
      tags:
        - task
      parameters:
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[owner]
          required: false
          description: Equality filter for "owner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId]
          required: false
          description: Equality filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$contains]
          required: false
          description: String contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$icontains]
          required: false
          description: String case-insensitive contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$search]
          required: false
          description: String full-text search filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$startsWith]
          required: false
          description: String startsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$endsWith]
          required: false
          description: String endsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId]
          required: false
          description: Equality filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$contains]
          required: false
          description: String contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$icontains]
          required: false
          description: String case-insensitive contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$search]
          required: false
          description: String full-text search filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$startsWith]
          required: false
          description: String startsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$endsWith]
          required: false
          description: String endsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[groups]
          required: false
          description: Equality filter for "groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[orderTask]
          required: false
          description: Equality filter for "orderTask"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTask$lt]
          required: false
          description: Less-than filter for "orderTask"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTask$lte]
          required: false
          description: Less-than or equal filter for "orderTask"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTask$gt]
          required: false
          description: Greater-than filter for "orderTask"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTask$gte]
          required: false
          description: Greater-than or equal filter for "orderTask"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$contains]
          required: false
          description: String contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$icontains]
          required: false
          description: String case-insensitive contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$search]
          required: false
          description: String full-text search filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$startsWith]
          required: false
          description: String startsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$endsWith]
          required: false
          description: String endsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content]
          required: false
          description: Equality filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$contains]
          required: false
          description: String contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$icontains]
          required: false
          description: String case-insensitive contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$search]
          required: false
          description: String full-text search filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$startsWith]
          required: false
          description: String startsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$endsWith]
          required: false
          description: String endsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[taskState]
          required: false
          description: Equality filter for "taskState"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/TaskState"
        - name: filter[mainTask]
          required: false
          description: Equality filter for "mainTask"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[SubTasks]
          required: false
          description: Equality filter for "SubTasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Users]
          required: false
          description: Equality filter for "Users"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[todo]
          required: false
          description: Equality filter for "todo"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/TaskListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Task
      description: Create a "Task" resource
      tags:
        - task
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/TaskCreateRequest"
      responses:
        "201":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/TaskResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/task/{id}:
    get:
      operationId: fetch-Task
      description: Fetch a "Task" resource
      tags:
        - task
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/TaskResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Task-put
      description: Update a "Task" resource
      tags:
        - task
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/TaskUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/TaskResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Task-patch
      description: Update a "Task" resource
      tags:
        - task
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/TaskUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/TaskResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    delete:
      operationId: delete-Task
      description: Delete a "Task" resource
      tags:
        - task
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/task/{id}/owner:
    get:
      operationId: fetch-Task-related-owner
      description: Fetch the related "owner" resource for "Task"
      tags:
        - task
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/task/{id}/relationships/owner:
    get:
      operationId: fetch-Task-relationship-owner
      description: Fetch the "owner" relationships for a "Task"
      tags:
        - task
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Task-relationship-owner-put
      description: Update "owner" relationship for a "Task"
      tags:
        - task
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Task-relationship-owner-patch
      description: Update "owner" relationship for a "Task"
      tags:
        - task
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/task/{id}/org:
    get:
      operationId: fetch-Task-related-org
      description: Fetch the related "org" resource for "Task"
      tags:
        - task
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OrganizationResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/task/{id}/relationships/org:
    get:
      operationId: fetch-Task-relationship-org
      description: Fetch the "org" relationships for a "Task"
      tags:
        - task
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Task-relationship-org-put
      description: Update "org" relationship for a "Task"
      tags:
        - task
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Task-relationship-org-patch
      description: Update "org" relationship for a "Task"
      tags:
        - task
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/task/{id}/groups:
    get:
      operationId: fetch-Task-related-groups
      description: Fetch the related "groups" resource for "Task"
      tags:
        - task
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[owner]
          required: false
          description: Equality filter for "owner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId]
          required: false
          description: Equality filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$contains]
          required: false
          description: String contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$icontains]
          required: false
          description: String case-insensitive contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$search]
          required: false
          description: String full-text search filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$startsWith]
          required: false
          description: String startsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$endsWith]
          required: false
          description: String endsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId]
          required: false
          description: Equality filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$contains]
          required: false
          description: String contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$icontains]
          required: false
          description: String case-insensitive contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$search]
          required: false
          description: String full-text search filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$startsWith]
          required: false
          description: String startsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$endsWith]
          required: false
          description: String endsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[groups]
          required: false
          description: Equality filter for "groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[orderTask]
          required: false
          description: Equality filter for "orderTask"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTask$lt]
          required: false
          description: Less-than filter for "orderTask"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTask$lte]
          required: false
          description: Less-than or equal filter for "orderTask"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTask$gt]
          required: false
          description: Greater-than filter for "orderTask"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTask$gte]
          required: false
          description: Greater-than or equal filter for "orderTask"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$contains]
          required: false
          description: String contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$icontains]
          required: false
          description: String case-insensitive contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$search]
          required: false
          description: String full-text search filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$startsWith]
          required: false
          description: String startsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$endsWith]
          required: false
          description: String endsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content]
          required: false
          description: Equality filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$contains]
          required: false
          description: String contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$icontains]
          required: false
          description: String case-insensitive contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$search]
          required: false
          description: String full-text search filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$startsWith]
          required: false
          description: String startsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$endsWith]
          required: false
          description: String endsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[taskState]
          required: false
          description: Equality filter for "taskState"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/TaskState"
        - name: filter[mainTask]
          required: false
          description: Equality filter for "mainTask"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[SubTasks]
          required: false
          description: Equality filter for "SubTasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Users]
          required: false
          description: Equality filter for "Users"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[todo]
          required: false
          description: Equality filter for "todo"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GroupListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/task/{id}/relationships/groups:
    get:
      operationId: fetch-Task-relationship-groups
      description: Fetch the "groups" relationships for a "Task"
      tags:
        - task
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[owner]
          required: false
          description: Equality filter for "owner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId]
          required: false
          description: Equality filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$contains]
          required: false
          description: String contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$icontains]
          required: false
          description: String case-insensitive contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$search]
          required: false
          description: String full-text search filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$startsWith]
          required: false
          description: String startsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$endsWith]
          required: false
          description: String endsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId]
          required: false
          description: Equality filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$contains]
          required: false
          description: String contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$icontains]
          required: false
          description: String case-insensitive contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$search]
          required: false
          description: String full-text search filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$startsWith]
          required: false
          description: String startsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$endsWith]
          required: false
          description: String endsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[groups]
          required: false
          description: Equality filter for "groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[orderTask]
          required: false
          description: Equality filter for "orderTask"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTask$lt]
          required: false
          description: Less-than filter for "orderTask"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTask$lte]
          required: false
          description: Less-than or equal filter for "orderTask"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTask$gt]
          required: false
          description: Greater-than filter for "orderTask"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTask$gte]
          required: false
          description: Greater-than or equal filter for "orderTask"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$contains]
          required: false
          description: String contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$icontains]
          required: false
          description: String case-insensitive contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$search]
          required: false
          description: String full-text search filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$startsWith]
          required: false
          description: String startsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$endsWith]
          required: false
          description: String endsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content]
          required: false
          description: Equality filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$contains]
          required: false
          description: String contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$icontains]
          required: false
          description: String case-insensitive contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$search]
          required: false
          description: String full-text search filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$startsWith]
          required: false
          description: String startsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$endsWith]
          required: false
          description: String endsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[taskState]
          required: false
          description: Equality filter for "taskState"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/TaskState"
        - name: filter[mainTask]
          required: false
          description: Equality filter for "mainTask"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[SubTasks]
          required: false
          description: Equality filter for "SubTasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Users]
          required: false
          description: Equality filter for "Users"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[todo]
          required: false
          description: Equality filter for "todo"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Task-relationship-groups-put
      description: Update "groups" relationships for a "Task"
      tags:
        - task
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Task-relationship-groups-patch
      description: Update "groups" relationships for a "Task"
      tags:
        - task
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Task-relationship-groups
      description: Create new "groups" relationships for a "Task"
      tags:
        - task
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/task/{id}/mainTask:
    get:
      operationId: fetch-Task-related-mainTask
      description: Fetch the related "mainTask" resource for "Task"
      tags:
        - task
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/TaskResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/task/{id}/relationships/mainTask:
    get:
      operationId: fetch-Task-relationship-mainTask
      description: Fetch the "mainTask" relationships for a "Task"
      tags:
        - task
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Task-relationship-mainTask-put
      description: Update "mainTask" relationship for a "Task"
      tags:
        - task
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Task-relationship-mainTask-patch
      description: Update "mainTask" relationship for a "Task"
      tags:
        - task
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/task/{id}/SubTasks:
    get:
      operationId: fetch-Task-related-SubTasks
      description: Fetch the related "SubTasks" resource for "Task"
      tags:
        - task
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[owner]
          required: false
          description: Equality filter for "owner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId]
          required: false
          description: Equality filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$contains]
          required: false
          description: String contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$icontains]
          required: false
          description: String case-insensitive contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$search]
          required: false
          description: String full-text search filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$startsWith]
          required: false
          description: String startsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$endsWith]
          required: false
          description: String endsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId]
          required: false
          description: Equality filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$contains]
          required: false
          description: String contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$icontains]
          required: false
          description: String case-insensitive contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$search]
          required: false
          description: String full-text search filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$startsWith]
          required: false
          description: String startsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$endsWith]
          required: false
          description: String endsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[groups]
          required: false
          description: Equality filter for "groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[orderTask]
          required: false
          description: Equality filter for "orderTask"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTask$lt]
          required: false
          description: Less-than filter for "orderTask"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTask$lte]
          required: false
          description: Less-than or equal filter for "orderTask"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTask$gt]
          required: false
          description: Greater-than filter for "orderTask"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTask$gte]
          required: false
          description: Greater-than or equal filter for "orderTask"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$contains]
          required: false
          description: String contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$icontains]
          required: false
          description: String case-insensitive contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$search]
          required: false
          description: String full-text search filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$startsWith]
          required: false
          description: String startsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$endsWith]
          required: false
          description: String endsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content]
          required: false
          description: Equality filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$contains]
          required: false
          description: String contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$icontains]
          required: false
          description: String case-insensitive contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$search]
          required: false
          description: String full-text search filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$startsWith]
          required: false
          description: String startsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$endsWith]
          required: false
          description: String endsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[taskState]
          required: false
          description: Equality filter for "taskState"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/TaskState"
        - name: filter[mainTask]
          required: false
          description: Equality filter for "mainTask"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[SubTasks]
          required: false
          description: Equality filter for "SubTasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Users]
          required: false
          description: Equality filter for "Users"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[todo]
          required: false
          description: Equality filter for "todo"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/TaskListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/task/{id}/relationships/SubTasks:
    get:
      operationId: fetch-Task-relationship-SubTasks
      description: Fetch the "SubTasks" relationships for a "Task"
      tags:
        - task
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[owner]
          required: false
          description: Equality filter for "owner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId]
          required: false
          description: Equality filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$contains]
          required: false
          description: String contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$icontains]
          required: false
          description: String case-insensitive contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$search]
          required: false
          description: String full-text search filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$startsWith]
          required: false
          description: String startsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$endsWith]
          required: false
          description: String endsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId]
          required: false
          description: Equality filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$contains]
          required: false
          description: String contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$icontains]
          required: false
          description: String case-insensitive contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$search]
          required: false
          description: String full-text search filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$startsWith]
          required: false
          description: String startsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$endsWith]
          required: false
          description: String endsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[groups]
          required: false
          description: Equality filter for "groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[orderTask]
          required: false
          description: Equality filter for "orderTask"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTask$lt]
          required: false
          description: Less-than filter for "orderTask"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTask$lte]
          required: false
          description: Less-than or equal filter for "orderTask"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTask$gt]
          required: false
          description: Greater-than filter for "orderTask"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTask$gte]
          required: false
          description: Greater-than or equal filter for "orderTask"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$contains]
          required: false
          description: String contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$icontains]
          required: false
          description: String case-insensitive contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$search]
          required: false
          description: String full-text search filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$startsWith]
          required: false
          description: String startsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$endsWith]
          required: false
          description: String endsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content]
          required: false
          description: Equality filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$contains]
          required: false
          description: String contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$icontains]
          required: false
          description: String case-insensitive contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$search]
          required: false
          description: String full-text search filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$startsWith]
          required: false
          description: String startsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$endsWith]
          required: false
          description: String endsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[taskState]
          required: false
          description: Equality filter for "taskState"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/TaskState"
        - name: filter[mainTask]
          required: false
          description: Equality filter for "mainTask"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[SubTasks]
          required: false
          description: Equality filter for "SubTasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Users]
          required: false
          description: Equality filter for "Users"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[todo]
          required: false
          description: Equality filter for "todo"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Task-relationship-SubTasks-put
      description: Update "SubTasks" relationships for a "Task"
      tags:
        - task
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Task-relationship-SubTasks-patch
      description: Update "SubTasks" relationships for a "Task"
      tags:
        - task
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Task-relationship-SubTasks
      description: Create new "SubTasks" relationships for a "Task"
      tags:
        - task
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/task/{id}/Users:
    get:
      operationId: fetch-Task-related-Users
      description: Fetch the related "Users" resource for "Task"
      tags:
        - task
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[owner]
          required: false
          description: Equality filter for "owner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId]
          required: false
          description: Equality filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$contains]
          required: false
          description: String contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$icontains]
          required: false
          description: String case-insensitive contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$search]
          required: false
          description: String full-text search filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$startsWith]
          required: false
          description: String startsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$endsWith]
          required: false
          description: String endsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId]
          required: false
          description: Equality filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$contains]
          required: false
          description: String contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$icontains]
          required: false
          description: String case-insensitive contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$search]
          required: false
          description: String full-text search filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$startsWith]
          required: false
          description: String startsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$endsWith]
          required: false
          description: String endsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[groups]
          required: false
          description: Equality filter for "groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[orderTask]
          required: false
          description: Equality filter for "orderTask"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTask$lt]
          required: false
          description: Less-than filter for "orderTask"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTask$lte]
          required: false
          description: Less-than or equal filter for "orderTask"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTask$gt]
          required: false
          description: Greater-than filter for "orderTask"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTask$gte]
          required: false
          description: Greater-than or equal filter for "orderTask"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$contains]
          required: false
          description: String contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$icontains]
          required: false
          description: String case-insensitive contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$search]
          required: false
          description: String full-text search filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$startsWith]
          required: false
          description: String startsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$endsWith]
          required: false
          description: String endsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content]
          required: false
          description: Equality filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$contains]
          required: false
          description: String contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$icontains]
          required: false
          description: String case-insensitive contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$search]
          required: false
          description: String full-text search filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$startsWith]
          required: false
          description: String startsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$endsWith]
          required: false
          description: String endsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[taskState]
          required: false
          description: Equality filter for "taskState"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/TaskState"
        - name: filter[mainTask]
          required: false
          description: Equality filter for "mainTask"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[SubTasks]
          required: false
          description: Equality filter for "SubTasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Users]
          required: false
          description: Equality filter for "Users"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[todo]
          required: false
          description: Equality filter for "todo"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserTaskLinkListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/task/{id}/relationships/Users:
    get:
      operationId: fetch-Task-relationship-Users
      description: Fetch the "Users" relationships for a "Task"
      tags:
        - task
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[owner]
          required: false
          description: Equality filter for "owner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId]
          required: false
          description: Equality filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$contains]
          required: false
          description: String contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$icontains]
          required: false
          description: String case-insensitive contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$search]
          required: false
          description: String full-text search filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$startsWith]
          required: false
          description: String startsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$endsWith]
          required: false
          description: String endsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId]
          required: false
          description: Equality filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$contains]
          required: false
          description: String contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$icontains]
          required: false
          description: String case-insensitive contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$search]
          required: false
          description: String full-text search filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$startsWith]
          required: false
          description: String startsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$endsWith]
          required: false
          description: String endsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[groups]
          required: false
          description: Equality filter for "groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[orderTask]
          required: false
          description: Equality filter for "orderTask"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTask$lt]
          required: false
          description: Less-than filter for "orderTask"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTask$lte]
          required: false
          description: Less-than or equal filter for "orderTask"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTask$gt]
          required: false
          description: Greater-than filter for "orderTask"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderTask$gte]
          required: false
          description: Greater-than or equal filter for "orderTask"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$contains]
          required: false
          description: String contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$icontains]
          required: false
          description: String case-insensitive contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$search]
          required: false
          description: String full-text search filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$startsWith]
          required: false
          description: String startsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$endsWith]
          required: false
          description: String endsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content]
          required: false
          description: Equality filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$contains]
          required: false
          description: String contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$icontains]
          required: false
          description: String case-insensitive contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$search]
          required: false
          description: String full-text search filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$startsWith]
          required: false
          description: String startsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$endsWith]
          required: false
          description: String endsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[taskState]
          required: false
          description: Equality filter for "taskState"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/TaskState"
        - name: filter[mainTask]
          required: false
          description: Equality filter for "mainTask"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[SubTasks]
          required: false
          description: Equality filter for "SubTasks"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Users]
          required: false
          description: Equality filter for "Users"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[todo]
          required: false
          description: Equality filter for "todo"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Task-relationship-Users-put
      description: Update "Users" relationships for a "Task"
      tags:
        - task
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Task-relationship-Users-patch
      description: Update "Users" relationships for a "Task"
      tags:
        - task
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Task-relationship-Users
      description: Create new "Users" relationships for a "Task"
      tags:
        - task
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/task/{id}/todo:
    get:
      operationId: fetch-Task-related-todo
      description: Fetch the related "todo" resource for "Task"
      tags:
        - task
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/TodoResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/task/{id}/relationships/todo:
    get:
      operationId: fetch-Task-relationship-todo
      description: Fetch the "todo" relationships for a "Task"
      tags:
        - task
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Task-relationship-todo-put
      description: Update "todo" relationship for a "Task"
      tags:
        - task
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Task-relationship-todo-patch
      description: Update "todo" relationship for a "Task"
      tags:
        - task
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/userTaskLink:
    get:
      operationId: list-UserTaskLink
      description: List "UserTaskLink" resources
      tags:
        - userTaskLink
      parameters:
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[user]
          required: false
          description: Equality filter for "user"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[task]
          required: false
          description: Equality filter for "task"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[isAuthor]
          required: false
          description: Equality filter for "isAuthor"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isAssigned]
          required: false
          description: Equality filter for "isAssigned"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[comment]
          required: false
          description: Equality filter for "comment"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[comment$contains]
          required: false
          description: String contains filter for "comment"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[comment$icontains]
          required: false
          description: String case-insensitive contains filter for "comment"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[comment$search]
          required: false
          description: String full-text search filter for "comment"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[comment$startsWith]
          required: false
          description: String startsWith filter for "comment"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[comment$endsWith]
          required: false
          description: String endsWith filter for "comment"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserTaskLinkListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-UserTaskLink
      description: Create a "UserTaskLink" resource
      tags:
        - userTaskLink
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/UserTaskLinkCreateRequest"
      responses:
        "201":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserTaskLinkResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/userTaskLink/{id}:
    get:
      operationId: fetch-UserTaskLink
      description: Fetch a "UserTaskLink" resource
      tags:
        - userTaskLink
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserTaskLinkResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-UserTaskLink-put
      description: Update a "UserTaskLink" resource
      tags:
        - userTaskLink
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/UserTaskLinkUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserTaskLinkResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-UserTaskLink-patch
      description: Update a "UserTaskLink" resource
      tags:
        - userTaskLink
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/UserTaskLinkUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserTaskLinkResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    delete:
      operationId: delete-UserTaskLink
      description: Delete a "UserTaskLink" resource
      tags:
        - userTaskLink
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/userTaskLink/{id}/user:
    get:
      operationId: fetch-UserTaskLink-related-user
      description: Fetch the related "user" resource for "UserTaskLink"
      tags:
        - userTaskLink
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/userTaskLink/{id}/relationships/user:
    get:
      operationId: fetch-UserTaskLink-relationship-user
      description: Fetch the "user" relationships for a "UserTaskLink"
      tags:
        - userTaskLink
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-UserTaskLink-relationship-user-put
      description: Update "user" relationship for a "UserTaskLink"
      tags:
        - userTaskLink
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-UserTaskLink-relationship-user-patch
      description: Update "user" relationship for a "UserTaskLink"
      tags:
        - userTaskLink
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/userTaskLink/{id}/task:
    get:
      operationId: fetch-UserTaskLink-related-task
      description: Fetch the related "task" resource for "UserTaskLink"
      tags:
        - userTaskLink
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/TaskResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/userTaskLink/{id}/relationships/task:
    get:
      operationId: fetch-UserTaskLink-relationship-task
      description: Fetch the "task" relationships for a "UserTaskLink"
      tags:
        - userTaskLink
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-UserTaskLink-relationship-task-put
      description: Update "task" relationship for a "UserTaskLink"
      tags:
        - userTaskLink
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-UserTaskLink-relationship-task-patch
      description: Update "task" relationship for a "UserTaskLink"
      tags:
        - userTaskLink
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/post:
    get:
      operationId: list-Post
      description: List "Post" resources
      tags:
        - post
      parameters:
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[owner]
          required: false
          description: Equality filter for "owner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId]
          required: false
          description: Equality filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$contains]
          required: false
          description: String contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$icontains]
          required: false
          description: String case-insensitive contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$search]
          required: false
          description: String full-text search filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$startsWith]
          required: false
          description: String startsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$endsWith]
          required: false
          description: String endsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId]
          required: false
          description: Equality filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$contains]
          required: false
          description: String contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$icontains]
          required: false
          description: String case-insensitive contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$search]
          required: false
          description: String full-text search filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$startsWith]
          required: false
          description: String startsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$endsWith]
          required: false
          description: String endsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[groups]
          required: false
          description: Equality filter for "groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[orderPost]
          required: false
          description: Equality filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderPost$lt]
          required: false
          description: Less-than filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderPost$lte]
          required: false
          description: Less-than or equal filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderPost$gt]
          required: false
          description: Greater-than filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderPost$gte]
          required: false
          description: Greater-than or equal filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$contains]
          required: false
          description: String contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$icontains]
          required: false
          description: String case-insensitive contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$search]
          required: false
          description: String full-text search filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$startsWith]
          required: false
          description: String startsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$endsWith]
          required: false
          description: String endsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content]
          required: false
          description: Equality filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$contains]
          required: false
          description: String contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$icontains]
          required: false
          description: String case-insensitive contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$search]
          required: false
          description: String full-text search filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$startsWith]
          required: false
          description: String startsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$endsWith]
          required: false
          description: String endsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Categories]
          required: false
          description: Equality filter for "Categories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[LikedBys]
          required: false
          description: Equality filter for "LikedBys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/PostListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Post
      description: Create a "Post" resource
      tags:
        - post
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/PostCreateRequest"
      responses:
        "201":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/PostResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/post/{id}:
    get:
      operationId: fetch-Post
      description: Fetch a "Post" resource
      tags:
        - post
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/PostResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Post-put
      description: Update a "Post" resource
      tags:
        - post
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/PostUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/PostResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Post-patch
      description: Update a "Post" resource
      tags:
        - post
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/PostUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/PostResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    delete:
      operationId: delete-Post
      description: Delete a "Post" resource
      tags:
        - post
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/post/{id}/owner:
    get:
      operationId: fetch-Post-related-owner
      description: Fetch the related "owner" resource for "Post"
      tags:
        - post
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/post/{id}/relationships/owner:
    get:
      operationId: fetch-Post-relationship-owner
      description: Fetch the "owner" relationships for a "Post"
      tags:
        - post
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Post-relationship-owner-put
      description: Update "owner" relationship for a "Post"
      tags:
        - post
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Post-relationship-owner-patch
      description: Update "owner" relationship for a "Post"
      tags:
        - post
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/post/{id}/org:
    get:
      operationId: fetch-Post-related-org
      description: Fetch the related "org" resource for "Post"
      tags:
        - post
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OrganizationResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/post/{id}/relationships/org:
    get:
      operationId: fetch-Post-relationship-org
      description: Fetch the "org" relationships for a "Post"
      tags:
        - post
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Post-relationship-org-put
      description: Update "org" relationship for a "Post"
      tags:
        - post
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Post-relationship-org-patch
      description: Update "org" relationship for a "Post"
      tags:
        - post
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/post/{id}/groups:
    get:
      operationId: fetch-Post-related-groups
      description: Fetch the related "groups" resource for "Post"
      tags:
        - post
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[owner]
          required: false
          description: Equality filter for "owner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId]
          required: false
          description: Equality filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$contains]
          required: false
          description: String contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$icontains]
          required: false
          description: String case-insensitive contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$search]
          required: false
          description: String full-text search filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$startsWith]
          required: false
          description: String startsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$endsWith]
          required: false
          description: String endsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId]
          required: false
          description: Equality filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$contains]
          required: false
          description: String contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$icontains]
          required: false
          description: String case-insensitive contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$search]
          required: false
          description: String full-text search filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$startsWith]
          required: false
          description: String startsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$endsWith]
          required: false
          description: String endsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[groups]
          required: false
          description: Equality filter for "groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[orderPost]
          required: false
          description: Equality filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderPost$lt]
          required: false
          description: Less-than filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderPost$lte]
          required: false
          description: Less-than or equal filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderPost$gt]
          required: false
          description: Greater-than filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderPost$gte]
          required: false
          description: Greater-than or equal filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$contains]
          required: false
          description: String contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$icontains]
          required: false
          description: String case-insensitive contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$search]
          required: false
          description: String full-text search filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$startsWith]
          required: false
          description: String startsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$endsWith]
          required: false
          description: String endsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content]
          required: false
          description: Equality filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$contains]
          required: false
          description: String contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$icontains]
          required: false
          description: String case-insensitive contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$search]
          required: false
          description: String full-text search filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$startsWith]
          required: false
          description: String startsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$endsWith]
          required: false
          description: String endsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Categories]
          required: false
          description: Equality filter for "Categories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[LikedBys]
          required: false
          description: Equality filter for "LikedBys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GroupListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/post/{id}/relationships/groups:
    get:
      operationId: fetch-Post-relationship-groups
      description: Fetch the "groups" relationships for a "Post"
      tags:
        - post
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[owner]
          required: false
          description: Equality filter for "owner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId]
          required: false
          description: Equality filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$contains]
          required: false
          description: String contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$icontains]
          required: false
          description: String case-insensitive contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$search]
          required: false
          description: String full-text search filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$startsWith]
          required: false
          description: String startsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$endsWith]
          required: false
          description: String endsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId]
          required: false
          description: Equality filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$contains]
          required: false
          description: String contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$icontains]
          required: false
          description: String case-insensitive contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$search]
          required: false
          description: String full-text search filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$startsWith]
          required: false
          description: String startsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$endsWith]
          required: false
          description: String endsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[groups]
          required: false
          description: Equality filter for "groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[orderPost]
          required: false
          description: Equality filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderPost$lt]
          required: false
          description: Less-than filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderPost$lte]
          required: false
          description: Less-than or equal filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderPost$gt]
          required: false
          description: Greater-than filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderPost$gte]
          required: false
          description: Greater-than or equal filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$contains]
          required: false
          description: String contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$icontains]
          required: false
          description: String case-insensitive contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$search]
          required: false
          description: String full-text search filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$startsWith]
          required: false
          description: String startsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$endsWith]
          required: false
          description: String endsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content]
          required: false
          description: Equality filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$contains]
          required: false
          description: String contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$icontains]
          required: false
          description: String case-insensitive contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$search]
          required: false
          description: String full-text search filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$startsWith]
          required: false
          description: String startsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$endsWith]
          required: false
          description: String endsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Categories]
          required: false
          description: Equality filter for "Categories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[LikedBys]
          required: false
          description: Equality filter for "LikedBys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Post-relationship-groups-put
      description: Update "groups" relationships for a "Post"
      tags:
        - post
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Post-relationship-groups-patch
      description: Update "groups" relationships for a "Post"
      tags:
        - post
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Post-relationship-groups
      description: Create new "groups" relationships for a "Post"
      tags:
        - post
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/post/{id}/Categories:
    get:
      operationId: fetch-Post-related-Categories
      description: Fetch the related "Categories" resource for "Post"
      tags:
        - post
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[owner]
          required: false
          description: Equality filter for "owner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId]
          required: false
          description: Equality filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$contains]
          required: false
          description: String contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$icontains]
          required: false
          description: String case-insensitive contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$search]
          required: false
          description: String full-text search filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$startsWith]
          required: false
          description: String startsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$endsWith]
          required: false
          description: String endsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId]
          required: false
          description: Equality filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$contains]
          required: false
          description: String contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$icontains]
          required: false
          description: String case-insensitive contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$search]
          required: false
          description: String full-text search filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$startsWith]
          required: false
          description: String startsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$endsWith]
          required: false
          description: String endsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[groups]
          required: false
          description: Equality filter for "groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[orderPost]
          required: false
          description: Equality filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderPost$lt]
          required: false
          description: Less-than filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderPost$lte]
          required: false
          description: Less-than or equal filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderPost$gt]
          required: false
          description: Greater-than filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderPost$gte]
          required: false
          description: Greater-than or equal filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$contains]
          required: false
          description: String contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$icontains]
          required: false
          description: String case-insensitive contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$search]
          required: false
          description: String full-text search filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$startsWith]
          required: false
          description: String startsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$endsWith]
          required: false
          description: String endsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content]
          required: false
          description: Equality filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$contains]
          required: false
          description: String contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$icontains]
          required: false
          description: String case-insensitive contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$search]
          required: false
          description: String full-text search filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$startsWith]
          required: false
          description: String startsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$endsWith]
          required: false
          description: String endsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Categories]
          required: false
          description: Equality filter for "Categories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[LikedBys]
          required: false
          description: Equality filter for "LikedBys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/CategoryListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/post/{id}/relationships/Categories:
    get:
      operationId: fetch-Post-relationship-Categories
      description: Fetch the "Categories" relationships for a "Post"
      tags:
        - post
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[owner]
          required: false
          description: Equality filter for "owner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId]
          required: false
          description: Equality filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$contains]
          required: false
          description: String contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$icontains]
          required: false
          description: String case-insensitive contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$search]
          required: false
          description: String full-text search filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$startsWith]
          required: false
          description: String startsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$endsWith]
          required: false
          description: String endsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId]
          required: false
          description: Equality filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$contains]
          required: false
          description: String contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$icontains]
          required: false
          description: String case-insensitive contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$search]
          required: false
          description: String full-text search filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$startsWith]
          required: false
          description: String startsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$endsWith]
          required: false
          description: String endsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[groups]
          required: false
          description: Equality filter for "groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[orderPost]
          required: false
          description: Equality filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderPost$lt]
          required: false
          description: Less-than filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderPost$lte]
          required: false
          description: Less-than or equal filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderPost$gt]
          required: false
          description: Greater-than filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderPost$gte]
          required: false
          description: Greater-than or equal filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$contains]
          required: false
          description: String contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$icontains]
          required: false
          description: String case-insensitive contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$search]
          required: false
          description: String full-text search filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$startsWith]
          required: false
          description: String startsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$endsWith]
          required: false
          description: String endsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content]
          required: false
          description: Equality filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$contains]
          required: false
          description: String contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$icontains]
          required: false
          description: String case-insensitive contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$search]
          required: false
          description: String full-text search filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$startsWith]
          required: false
          description: String startsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$endsWith]
          required: false
          description: String endsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Categories]
          required: false
          description: Equality filter for "Categories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[LikedBys]
          required: false
          description: Equality filter for "LikedBys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Post-relationship-Categories-put
      description: Update "Categories" relationships for a "Post"
      tags:
        - post
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Post-relationship-Categories-patch
      description: Update "Categories" relationships for a "Post"
      tags:
        - post
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Post-relationship-Categories
      description: Create new "Categories" relationships for a "Post"
      tags:
        - post
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/post/{id}/Comments:
    get:
      operationId: fetch-Post-related-Comments
      description: Fetch the related "Comments" resource for "Post"
      tags:
        - post
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[owner]
          required: false
          description: Equality filter for "owner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId]
          required: false
          description: Equality filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$contains]
          required: false
          description: String contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$icontains]
          required: false
          description: String case-insensitive contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$search]
          required: false
          description: String full-text search filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$startsWith]
          required: false
          description: String startsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$endsWith]
          required: false
          description: String endsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId]
          required: false
          description: Equality filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$contains]
          required: false
          description: String contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$icontains]
          required: false
          description: String case-insensitive contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$search]
          required: false
          description: String full-text search filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$startsWith]
          required: false
          description: String startsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$endsWith]
          required: false
          description: String endsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[groups]
          required: false
          description: Equality filter for "groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[orderPost]
          required: false
          description: Equality filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderPost$lt]
          required: false
          description: Less-than filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderPost$lte]
          required: false
          description: Less-than or equal filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderPost$gt]
          required: false
          description: Greater-than filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderPost$gte]
          required: false
          description: Greater-than or equal filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$contains]
          required: false
          description: String contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$icontains]
          required: false
          description: String case-insensitive contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$search]
          required: false
          description: String full-text search filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$startsWith]
          required: false
          description: String startsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$endsWith]
          required: false
          description: String endsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content]
          required: false
          description: Equality filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$contains]
          required: false
          description: String contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$icontains]
          required: false
          description: String case-insensitive contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$search]
          required: false
          description: String full-text search filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$startsWith]
          required: false
          description: String startsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$endsWith]
          required: false
          description: String endsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Categories]
          required: false
          description: Equality filter for "Categories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[LikedBys]
          required: false
          description: Equality filter for "LikedBys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/CommentListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/post/{id}/relationships/Comments:
    get:
      operationId: fetch-Post-relationship-Comments
      description: Fetch the "Comments" relationships for a "Post"
      tags:
        - post
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[owner]
          required: false
          description: Equality filter for "owner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId]
          required: false
          description: Equality filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$contains]
          required: false
          description: String contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$icontains]
          required: false
          description: String case-insensitive contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$search]
          required: false
          description: String full-text search filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$startsWith]
          required: false
          description: String startsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$endsWith]
          required: false
          description: String endsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId]
          required: false
          description: Equality filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$contains]
          required: false
          description: String contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$icontains]
          required: false
          description: String case-insensitive contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$search]
          required: false
          description: String full-text search filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$startsWith]
          required: false
          description: String startsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$endsWith]
          required: false
          description: String endsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[groups]
          required: false
          description: Equality filter for "groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[orderPost]
          required: false
          description: Equality filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderPost$lt]
          required: false
          description: Less-than filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderPost$lte]
          required: false
          description: Less-than or equal filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderPost$gt]
          required: false
          description: Greater-than filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderPost$gte]
          required: false
          description: Greater-than or equal filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$contains]
          required: false
          description: String contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$icontains]
          required: false
          description: String case-insensitive contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$search]
          required: false
          description: String full-text search filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$startsWith]
          required: false
          description: String startsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$endsWith]
          required: false
          description: String endsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content]
          required: false
          description: Equality filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$contains]
          required: false
          description: String contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$icontains]
          required: false
          description: String case-insensitive contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$search]
          required: false
          description: String full-text search filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$startsWith]
          required: false
          description: String startsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$endsWith]
          required: false
          description: String endsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Categories]
          required: false
          description: Equality filter for "Categories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[LikedBys]
          required: false
          description: Equality filter for "LikedBys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Post-relationship-Comments-put
      description: Update "Comments" relationships for a "Post"
      tags:
        - post
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Post-relationship-Comments-patch
      description: Update "Comments" relationships for a "Post"
      tags:
        - post
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Post-relationship-Comments
      description: Create new "Comments" relationships for a "Post"
      tags:
        - post
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/post/{id}/LikedBys:
    get:
      operationId: fetch-Post-related-LikedBys
      description: Fetch the related "LikedBys" resource for "Post"
      tags:
        - post
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[owner]
          required: false
          description: Equality filter for "owner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId]
          required: false
          description: Equality filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$contains]
          required: false
          description: String contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$icontains]
          required: false
          description: String case-insensitive contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$search]
          required: false
          description: String full-text search filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$startsWith]
          required: false
          description: String startsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$endsWith]
          required: false
          description: String endsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId]
          required: false
          description: Equality filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$contains]
          required: false
          description: String contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$icontains]
          required: false
          description: String case-insensitive contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$search]
          required: false
          description: String full-text search filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$startsWith]
          required: false
          description: String startsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$endsWith]
          required: false
          description: String endsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[groups]
          required: false
          description: Equality filter for "groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[orderPost]
          required: false
          description: Equality filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderPost$lt]
          required: false
          description: Less-than filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderPost$lte]
          required: false
          description: Less-than or equal filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderPost$gt]
          required: false
          description: Greater-than filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderPost$gte]
          required: false
          description: Greater-than or equal filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$contains]
          required: false
          description: String contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$icontains]
          required: false
          description: String case-insensitive contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$search]
          required: false
          description: String full-text search filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$startsWith]
          required: false
          description: String startsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$endsWith]
          required: false
          description: String endsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content]
          required: false
          description: Equality filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$contains]
          required: false
          description: String contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$icontains]
          required: false
          description: String case-insensitive contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$search]
          required: false
          description: String full-text search filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$startsWith]
          required: false
          description: String startsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$endsWith]
          required: false
          description: String endsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Categories]
          required: false
          description: Equality filter for "Categories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[LikedBys]
          required: false
          description: Equality filter for "LikedBys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/PostLikeListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/post/{id}/relationships/LikedBys:
    get:
      operationId: fetch-Post-relationship-LikedBys
      description: Fetch the "LikedBys" relationships for a "Post"
      tags:
        - post
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[owner]
          required: false
          description: Equality filter for "owner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId]
          required: false
          description: Equality filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$contains]
          required: false
          description: String contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$icontains]
          required: false
          description: String case-insensitive contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$search]
          required: false
          description: String full-text search filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$startsWith]
          required: false
          description: String startsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$endsWith]
          required: false
          description: String endsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId]
          required: false
          description: Equality filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$contains]
          required: false
          description: String contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$icontains]
          required: false
          description: String case-insensitive contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$search]
          required: false
          description: String full-text search filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$startsWith]
          required: false
          description: String startsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$endsWith]
          required: false
          description: String endsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[groups]
          required: false
          description: Equality filter for "groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[orderPost]
          required: false
          description: Equality filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderPost$lt]
          required: false
          description: Less-than filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderPost$lte]
          required: false
          description: Less-than or equal filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderPost$gt]
          required: false
          description: Greater-than filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderPost$gte]
          required: false
          description: Greater-than or equal filter for "orderPost"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$contains]
          required: false
          description: String contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$icontains]
          required: false
          description: String case-insensitive contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$search]
          required: false
          description: String full-text search filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$startsWith]
          required: false
          description: String startsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$endsWith]
          required: false
          description: String endsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content]
          required: false
          description: Equality filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$contains]
          required: false
          description: String contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$icontains]
          required: false
          description: String case-insensitive contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$search]
          required: false
          description: String full-text search filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$startsWith]
          required: false
          description: String startsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$endsWith]
          required: false
          description: String endsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Categories]
          required: false
          description: Equality filter for "Categories"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[Comments]
          required: false
          description: Equality filter for "Comments"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[LikedBys]
          required: false
          description: Equality filter for "LikedBys"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Post-relationship-LikedBys-put
      description: Update "LikedBys" relationships for a "Post"
      tags:
        - post
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Post-relationship-LikedBys-patch
      description: Update "LikedBys" relationships for a "Post"
      tags:
        - post
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Post-relationship-LikedBys
      description: Create new "LikedBys" relationships for a "Post"
      tags:
        - post
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/category:
    get:
      operationId: list-Category
      description: List "Category" resources
      tags:
        - category
      parameters:
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[orderCategory]
          required: false
          description: Equality filter for "orderCategory"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderCategory$lt]
          required: false
          description: Less-than filter for "orderCategory"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderCategory$lte]
          required: false
          description: Less-than or equal filter for "orderCategory"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderCategory$gt]
          required: false
          description: Greater-than filter for "orderCategory"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderCategory$gte]
          required: false
          description: Greater-than or equal filter for "orderCategory"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/CategoryListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Category
      description: Create a "Category" resource
      tags:
        - category
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/CategoryCreateRequest"
      responses:
        "201":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/CategoryResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/category/{id}:
    get:
      operationId: fetch-Category
      description: Fetch a "Category" resource
      tags:
        - category
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/CategoryResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Category-put
      description: Update a "Category" resource
      tags:
        - category
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/CategoryUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/CategoryResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Category-patch
      description: Update a "Category" resource
      tags:
        - category
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/CategoryUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/CategoryResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    delete:
      operationId: delete-Category
      description: Delete a "Category" resource
      tags:
        - category
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/category/{id}/Posts:
    get:
      operationId: fetch-Category-related-Posts
      description: Fetch the related "Posts" resource for "Category"
      tags:
        - category
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[orderCategory]
          required: false
          description: Equality filter for "orderCategory"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderCategory$lt]
          required: false
          description: Less-than filter for "orderCategory"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderCategory$lte]
          required: false
          description: Less-than or equal filter for "orderCategory"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderCategory$gt]
          required: false
          description: Greater-than filter for "orderCategory"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderCategory$gte]
          required: false
          description: Greater-than or equal filter for "orderCategory"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/PostListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/category/{id}/relationships/Posts:
    get:
      operationId: fetch-Category-relationship-Posts
      description: Fetch the "Posts" relationships for a "Category"
      tags:
        - category
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[orderCategory]
          required: false
          description: Equality filter for "orderCategory"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderCategory$lt]
          required: false
          description: Less-than filter for "orderCategory"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderCategory$lte]
          required: false
          description: Less-than or equal filter for "orderCategory"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderCategory$gt]
          required: false
          description: Greater-than filter for "orderCategory"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderCategory$gte]
          required: false
          description: Greater-than or equal filter for "orderCategory"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Posts]
          required: false
          description: Equality filter for "Posts"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Category-relationship-Posts-put
      description: Update "Posts" relationships for a "Category"
      tags:
        - category
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Category-relationship-Posts-patch
      description: Update "Posts" relationships for a "Category"
      tags:
        - category
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Category-relationship-Posts
      description: Create new "Posts" relationships for a "Category"
      tags:
        - category
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/comment:
    get:
      operationId: list-Comment
      description: List "Comment" resources
      tags:
        - comment
      parameters:
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[orderComment]
          required: false
          description: Equality filter for "orderComment"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderComment$lt]
          required: false
          description: Less-than filter for "orderComment"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderComment$lte]
          required: false
          description: Less-than or equal filter for "orderComment"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderComment$gt]
          required: false
          description: Greater-than filter for "orderComment"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[orderComment$gte]
          required: false
          description: Greater-than or equal filter for "orderComment"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[content]
          required: false
          description: Equality filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$contains]
          required: false
          description: String contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$icontains]
          required: false
          description: String case-insensitive contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$search]
          required: false
          description: String full-text search filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$startsWith]
          required: false
          description: String startsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$endsWith]
          required: false
          description: String endsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[post]
          required: false
          description: Equality filter for "post"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[author]
          required: false
          description: Equality filter for "author"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/CommentListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Comment
      description: Create a "Comment" resource
      tags:
        - comment
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/CommentCreateRequest"
      responses:
        "201":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/CommentResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/comment/{id}:
    get:
      operationId: fetch-Comment
      description: Fetch a "Comment" resource
      tags:
        - comment
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/CommentResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Comment-put
      description: Update a "Comment" resource
      tags:
        - comment
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/CommentUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/CommentResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Comment-patch
      description: Update a "Comment" resource
      tags:
        - comment
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/CommentUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/CommentResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    delete:
      operationId: delete-Comment
      description: Delete a "Comment" resource
      tags:
        - comment
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/comment/{id}/post:
    get:
      operationId: fetch-Comment-related-post
      description: Fetch the related "post" resource for "Comment"
      tags:
        - comment
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/PostResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/comment/{id}/relationships/post:
    get:
      operationId: fetch-Comment-relationship-post
      description: Fetch the "post" relationships for a "Comment"
      tags:
        - comment
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Comment-relationship-post-put
      description: Update "post" relationship for a "Comment"
      tags:
        - comment
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Comment-relationship-post-patch
      description: Update "post" relationship for a "Comment"
      tags:
        - comment
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/comment/{id}/author:
    get:
      operationId: fetch-Comment-related-author
      description: Fetch the related "author" resource for "Comment"
      tags:
        - comment
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/comment/{id}/relationships/author:
    get:
      operationId: fetch-Comment-relationship-author
      description: Fetch the "author" relationships for a "Comment"
      tags:
        - comment
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Comment-relationship-author-put
      description: Update "author" relationship for a "Comment"
      tags:
        - comment
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Comment-relationship-author-patch
      description: Update "author" relationship for a "Comment"
      tags:
        - comment
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/file:
    get:
      operationId: list-File
      description: List "File" resources
      tags:
        - file
      parameters:
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[owner]
          required: false
          description: Equality filter for "owner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId]
          required: false
          description: Equality filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$contains]
          required: false
          description: String contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$icontains]
          required: false
          description: String case-insensitive contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$search]
          required: false
          description: String full-text search filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$startsWith]
          required: false
          description: String startsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$endsWith]
          required: false
          description: String endsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId]
          required: false
          description: Equality filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$contains]
          required: false
          description: String contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$icontains]
          required: false
          description: String case-insensitive contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$search]
          required: false
          description: String full-text search filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$startsWith]
          required: false
          description: String startsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$endsWith]
          required: false
          description: String endsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[groups]
          required: false
          description: Equality filter for "groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[storageName]
          required: false
          description: Equality filter for "storageName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[storageName$contains]
          required: false
          description: String contains filter for "storageName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[storageName$icontains]
          required: false
          description: String case-insensitive contains filter for "storageName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[storageName$search]
          required: false
          description: String full-text search filter for "storageName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[storageName$startsWith]
          required: false
          description: String startsWith filter for "storageName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[storageName$endsWith]
          required: false
          description: String endsWith filter for "storageName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[type]
          required: false
          description: Equality filter for "type"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[type$contains]
          required: false
          description: String contains filter for "type"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[type$icontains]
          required: false
          description: String case-insensitive contains filter for "type"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[type$search]
          required: false
          description: String full-text search filter for "type"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[type$startsWith]
          required: false
          description: String startsWith filter for "type"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[type$endsWith]
          required: false
          description: String endsWith filter for "type"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[data]
          required: false
          description: Equality filter for "data"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[data$contains]
          required: false
          description: String contains filter for "data"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[data$icontains]
          required: false
          description: String case-insensitive contains filter for "data"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[data$search]
          required: false
          description: String full-text search filter for "data"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[data$startsWith]
          required: false
          description: String startsWith filter for "data"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[data$endsWith]
          required: false
          description: String endsWith filter for "data"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[size]
          required: false
          description: Equality filter for "size"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[size$lt]
          required: false
          description: Less-than filter for "size"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[size$lte]
          required: false
          description: Less-than or equal filter for "size"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[size$gt]
          required: false
          description: Greater-than filter for "size"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[size$gte]
          required: false
          description: Greater-than or equal filter for "size"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isArchived]
          required: false
          description: Equality filter for "isArchived"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isArchived$lt]
          required: false
          description: Less-than filter for "isArchived"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isArchived$lte]
          required: false
          description: Less-than or equal filter for "isArchived"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isArchived$gt]
          required: false
          description: Greater-than filter for "isArchived"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isArchived$gte]
          required: false
          description: Greater-than or equal filter for "isArchived"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/FileListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-File
      description: Create a "File" resource
      tags:
        - file
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/FileCreateRequest"
      responses:
        "201":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/FileResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/file/{id}:
    get:
      operationId: fetch-File
      description: Fetch a "File" resource
      tags:
        - file
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/FileResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-File-put
      description: Update a "File" resource
      tags:
        - file
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/FileUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/FileResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-File-patch
      description: Update a "File" resource
      tags:
        - file
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/FileUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/FileResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    delete:
      operationId: delete-File
      description: Delete a "File" resource
      tags:
        - file
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/file/{id}/owner:
    get:
      operationId: fetch-File-related-owner
      description: Fetch the related "owner" resource for "File"
      tags:
        - file
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/file/{id}/relationships/owner:
    get:
      operationId: fetch-File-relationship-owner
      description: Fetch the "owner" relationships for a "File"
      tags:
        - file
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-File-relationship-owner-put
      description: Update "owner" relationship for a "File"
      tags:
        - file
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-File-relationship-owner-patch
      description: Update "owner" relationship for a "File"
      tags:
        - file
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/file/{id}/org:
    get:
      operationId: fetch-File-related-org
      description: Fetch the related "org" resource for "File"
      tags:
        - file
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OrganizationResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/file/{id}/relationships/org:
    get:
      operationId: fetch-File-relationship-org
      description: Fetch the "org" relationships for a "File"
      tags:
        - file
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-File-relationship-org-put
      description: Update "org" relationship for a "File"
      tags:
        - file
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-File-relationship-org-patch
      description: Update "org" relationship for a "File"
      tags:
        - file
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/file/{id}/groups:
    get:
      operationId: fetch-File-related-groups
      description: Fetch the related "groups" resource for "File"
      tags:
        - file
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[owner]
          required: false
          description: Equality filter for "owner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId]
          required: false
          description: Equality filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$contains]
          required: false
          description: String contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$icontains]
          required: false
          description: String case-insensitive contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$search]
          required: false
          description: String full-text search filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$startsWith]
          required: false
          description: String startsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$endsWith]
          required: false
          description: String endsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId]
          required: false
          description: Equality filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$contains]
          required: false
          description: String contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$icontains]
          required: false
          description: String case-insensitive contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$search]
          required: false
          description: String full-text search filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$startsWith]
          required: false
          description: String startsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$endsWith]
          required: false
          description: String endsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[groups]
          required: false
          description: Equality filter for "groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[storageName]
          required: false
          description: Equality filter for "storageName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[storageName$contains]
          required: false
          description: String contains filter for "storageName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[storageName$icontains]
          required: false
          description: String case-insensitive contains filter for "storageName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[storageName$search]
          required: false
          description: String full-text search filter for "storageName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[storageName$startsWith]
          required: false
          description: String startsWith filter for "storageName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[storageName$endsWith]
          required: false
          description: String endsWith filter for "storageName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[type]
          required: false
          description: Equality filter for "type"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[type$contains]
          required: false
          description: String contains filter for "type"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[type$icontains]
          required: false
          description: String case-insensitive contains filter for "type"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[type$search]
          required: false
          description: String full-text search filter for "type"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[type$startsWith]
          required: false
          description: String startsWith filter for "type"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[type$endsWith]
          required: false
          description: String endsWith filter for "type"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[data]
          required: false
          description: Equality filter for "data"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[data$contains]
          required: false
          description: String contains filter for "data"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[data$icontains]
          required: false
          description: String case-insensitive contains filter for "data"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[data$search]
          required: false
          description: String full-text search filter for "data"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[data$startsWith]
          required: false
          description: String startsWith filter for "data"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[data$endsWith]
          required: false
          description: String endsWith filter for "data"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[size]
          required: false
          description: Equality filter for "size"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[size$lt]
          required: false
          description: Less-than filter for "size"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[size$lte]
          required: false
          description: Less-than or equal filter for "size"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[size$gt]
          required: false
          description: Greater-than filter for "size"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[size$gte]
          required: false
          description: Greater-than or equal filter for "size"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isArchived]
          required: false
          description: Equality filter for "isArchived"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isArchived$lt]
          required: false
          description: Less-than filter for "isArchived"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isArchived$lte]
          required: false
          description: Less-than or equal filter for "isArchived"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isArchived$gt]
          required: false
          description: Greater-than filter for "isArchived"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isArchived$gte]
          required: false
          description: Greater-than or equal filter for "isArchived"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GroupListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/file/{id}/relationships/groups:
    get:
      operationId: fetch-File-relationship-groups
      description: Fetch the "groups" relationships for a "File"
      tags:
        - file
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[owner]
          required: false
          description: Equality filter for "owner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId]
          required: false
          description: Equality filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$contains]
          required: false
          description: String contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$icontains]
          required: false
          description: String case-insensitive contains filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$search]
          required: false
          description: String full-text search filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$startsWith]
          required: false
          description: String startsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ownerId$endsWith]
          required: false
          description: String endsWith filter for "ownerId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[org]
          required: false
          description: Equality filter for "org"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId]
          required: false
          description: Equality filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$contains]
          required: false
          description: String contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$icontains]
          required: false
          description: String case-insensitive contains filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$search]
          required: false
          description: String full-text search filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$startsWith]
          required: false
          description: String startsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[orgId$endsWith]
          required: false
          description: String endsWith filter for "orgId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[groups]
          required: false
          description: Equality filter for "groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[storageName]
          required: false
          description: Equality filter for "storageName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[storageName$contains]
          required: false
          description: String contains filter for "storageName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[storageName$icontains]
          required: false
          description: String case-insensitive contains filter for "storageName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[storageName$search]
          required: false
          description: String full-text search filter for "storageName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[storageName$startsWith]
          required: false
          description: String startsWith filter for "storageName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[storageName$endsWith]
          required: false
          description: String endsWith filter for "storageName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[type]
          required: false
          description: Equality filter for "type"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[type$contains]
          required: false
          description: String contains filter for "type"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[type$icontains]
          required: false
          description: String case-insensitive contains filter for "type"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[type$search]
          required: false
          description: String full-text search filter for "type"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[type$startsWith]
          required: false
          description: String startsWith filter for "type"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[type$endsWith]
          required: false
          description: String endsWith filter for "type"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[data]
          required: false
          description: Equality filter for "data"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[data$contains]
          required: false
          description: String contains filter for "data"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[data$icontains]
          required: false
          description: String case-insensitive contains filter for "data"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[data$search]
          required: false
          description: String full-text search filter for "data"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[data$startsWith]
          required: false
          description: String startsWith filter for "data"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[data$endsWith]
          required: false
          description: String endsWith filter for "data"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[size]
          required: false
          description: Equality filter for "size"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[size$lt]
          required: false
          description: Less-than filter for "size"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[size$lte]
          required: false
          description: Less-than or equal filter for "size"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[size$gt]
          required: false
          description: Greater-than filter for "size"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[size$gte]
          required: false
          description: Greater-than or equal filter for "size"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isArchived]
          required: false
          description: Equality filter for "isArchived"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isArchived$lt]
          required: false
          description: Less-than filter for "isArchived"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isArchived$lte]
          required: false
          description: Less-than or equal filter for "isArchived"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isArchived$gt]
          required: false
          description: Greater-than filter for "isArchived"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isArchived$gte]
          required: false
          description: Greater-than or equal filter for "isArchived"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-File-relationship-groups-put
      description: Update "groups" relationships for a "File"
      tags:
        - file
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-File-relationship-groups-patch
      description: Update "groups" relationships for a "File"
      tags:
        - file
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-File-relationship-groups
      description: Create new "groups" relationships for a "File"
      tags:
        - file
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/userFollower:
    get:
      operationId: list-UserFollower
      description: List "UserFollower" resources
      tags:
        - userFollower
      parameters:
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[user]
          required: false
          description: Equality filter for "user"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[follower]
          required: false
          description: Equality filter for "follower"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserFollowerListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-UserFollower
      description: Create a "UserFollower" resource
      tags:
        - userFollower
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/UserFollowerCreateRequest"
      responses:
        "201":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserFollowerResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/userFollower/{id}:
    get:
      operationId: fetch-UserFollower
      description: Fetch a "UserFollower" resource
      tags:
        - userFollower
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserFollowerResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-UserFollower-put
      description: Update a "UserFollower" resource
      tags:
        - userFollower
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/UserFollowerUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserFollowerResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-UserFollower-patch
      description: Update a "UserFollower" resource
      tags:
        - userFollower
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/UserFollowerUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserFollowerResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    delete:
      operationId: delete-UserFollower
      description: Delete a "UserFollower" resource
      tags:
        - userFollower
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/userFollower/{id}/user:
    get:
      operationId: fetch-UserFollower-related-user
      description: Fetch the related "user" resource for "UserFollower"
      tags:
        - userFollower
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/userFollower/{id}/relationships/user:
    get:
      operationId: fetch-UserFollower-relationship-user
      description: Fetch the "user" relationships for a "UserFollower"
      tags:
        - userFollower
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-UserFollower-relationship-user-put
      description: Update "user" relationship for a "UserFollower"
      tags:
        - userFollower
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-UserFollower-relationship-user-patch
      description: Update "user" relationship for a "UserFollower"
      tags:
        - userFollower
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/userFollower/{id}/follower:
    get:
      operationId: fetch-UserFollower-related-follower
      description: Fetch the related "follower" resource for "UserFollower"
      tags:
        - userFollower
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/userFollower/{id}/relationships/follower:
    get:
      operationId: fetch-UserFollower-relationship-follower
      description: Fetch the "follower" relationships for a "UserFollower"
      tags:
        - userFollower
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-UserFollower-relationship-follower-put
      description: Update "follower" relationship for a "UserFollower"
      tags:
        - userFollower
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-UserFollower-relationship-follower-patch
      description: Update "follower" relationship for a "UserFollower"
      tags:
        - userFollower
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/postLike:
    get:
      operationId: list-PostLike
      description: List "PostLike" resources
      tags:
        - postLike
      parameters:
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[user]
          required: false
          description: Equality filter for "user"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[post]
          required: false
          description: Equality filter for "post"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/PostLikeListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-PostLike
      description: Create a "PostLike" resource
      tags:
        - postLike
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/PostLikeCreateRequest"
      responses:
        "201":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/PostLikeResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/postLike/{id}:
    get:
      operationId: fetch-PostLike
      description: Fetch a "PostLike" resource
      tags:
        - postLike
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/PostLikeResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-PostLike-put
      description: Update a "PostLike" resource
      tags:
        - postLike
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/PostLikeUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/PostLikeResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-PostLike-patch
      description: Update a "PostLike" resource
      tags:
        - postLike
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/PostLikeUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/PostLikeResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    delete:
      operationId: delete-PostLike
      description: Delete a "PostLike" resource
      tags:
        - postLike
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/postLike/{id}/user:
    get:
      operationId: fetch-PostLike-related-user
      description: Fetch the related "user" resource for "PostLike"
      tags:
        - postLike
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/postLike/{id}/relationships/user:
    get:
      operationId: fetch-PostLike-relationship-user
      description: Fetch the "user" relationships for a "PostLike"
      tags:
        - postLike
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-PostLike-relationship-user-put
      description: Update "user" relationship for a "PostLike"
      tags:
        - postLike
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-PostLike-relationship-user-patch
      description: Update "user" relationship for a "PostLike"
      tags:
        - postLike
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/postLike/{id}/post:
    get:
      operationId: fetch-PostLike-related-post
      description: Fetch the related "post" resource for "PostLike"
      tags:
        - postLike
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/PostResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/postLike/{id}/relationships/post:
    get:
      operationId: fetch-PostLike-relationship-post
      description: Fetch the "post" relationships for a "PostLike"
      tags:
        - postLike
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-PostLike-relationship-post-put
      description: Update "post" relationship for a "PostLike"
      tags:
        - postLike
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-PostLike-relationship-post-patch
      description: Update "post" relationship for a "PostLike"
      tags:
        - postLike
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/story:
    get:
      operationId: list-Story
      description: List "Story" resources
      tags:
        - story
      parameters:
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[caption]
          required: false
          description: Equality filter for "caption"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[caption$contains]
          required: false
          description: String contains filter for "caption"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[caption$icontains]
          required: false
          description: String case-insensitive contains filter for "caption"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[caption$search]
          required: false
          description: String full-text search filter for "caption"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[caption$startsWith]
          required: false
          description: String startsWith filter for "caption"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[caption$endsWith]
          required: false
          description: String endsWith filter for "caption"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[user]
          required: false
          description: Equality filter for "user"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/StoryListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Story
      description: Create a "Story" resource
      tags:
        - story
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/StoryCreateRequest"
      responses:
        "201":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/StoryResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/story/{id}:
    get:
      operationId: fetch-Story
      description: Fetch a "Story" resource
      tags:
        - story
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/StoryResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Story-put
      description: Update a "Story" resource
      tags:
        - story
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/StoryUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/StoryResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Story-patch
      description: Update a "Story" resource
      tags:
        - story
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/StoryUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/StoryResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    delete:
      operationId: delete-Story
      description: Delete a "Story" resource
      tags:
        - story
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/story/{id}/user:
    get:
      operationId: fetch-Story-related-user
      description: Fetch the related "user" resource for "Story"
      tags:
        - story
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/story/{id}/relationships/user:
    get:
      operationId: fetch-Story-relationship-user
      description: Fetch the "user" relationships for a "Story"
      tags:
        - story
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Story-relationship-user-put
      description: Update "user" relationship for a "Story"
      tags:
        - story
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Story-relationship-user-patch
      description: Update "user" relationship for a "Story"
      tags:
        - story
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/image:
    get:
      operationId: list-Image
      description: List "Image" resources
      tags:
        - image
      parameters:
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[type]
          required: false
          description: Equality filter for "type"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[type$contains]
          required: false
          description: String contains filter for "type"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[type$icontains]
          required: false
          description: String case-insensitive contains filter for "type"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[type$search]
          required: false
          description: String full-text search filter for "type"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[type$startsWith]
          required: false
          description: String startsWith filter for "type"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[type$endsWith]
          required: false
          description: String endsWith filter for "type"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[url]
          required: false
          description: Equality filter for "url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[url$contains]
          required: false
          description: String contains filter for "url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[url$icontains]
          required: false
          description: String case-insensitive contains filter for "url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[url$search]
          required: false
          description: String full-text search filter for "url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[url$startsWith]
          required: false
          description: String startsWith filter for "url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[url$endsWith]
          required: false
          description: String endsWith filter for "url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[associated_id]
          required: false
          description: Equality filter for "associated_id"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[associated_id$contains]
          required: false
          description: String contains filter for "associated_id"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[associated_id$icontains]
          required: false
          description: String case-insensitive contains filter for "associated_id"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[associated_id$search]
          required: false
          description: String full-text search filter for "associated_id"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[associated_id$startsWith]
          required: false
          description: String startsWith filter for "associated_id"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[associated_id$endsWith]
          required: false
          description: String endsWith filter for "associated_id"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[sequence]
          required: false
          description: Equality filter for "sequence"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[sequence$lt]
          required: false
          description: Less-than filter for "sequence"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[sequence$lte]
          required: false
          description: Less-than or equal filter for "sequence"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[sequence$gt]
          required: false
          description: Greater-than filter for "sequence"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[sequence$gte]
          required: false
          description: Greater-than or equal filter for "sequence"
          in: query
          style: form
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ImageListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Image
      description: Create a "Image" resource
      tags:
        - image
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/ImageCreateRequest"
      responses:
        "201":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ImageResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/image/{id}:
    get:
      operationId: fetch-Image
      description: Fetch a "Image" resource
      tags:
        - image
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ImageResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Image-put
      description: Update a "Image" resource
      tags:
        - image
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/ImageUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ImageResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Image-patch
      description: Update a "Image" resource
      tags:
        - image
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/ImageUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ImageResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    delete:
      operationId: delete-Image
      description: Delete a "Image" resource
      tags:
        - image
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/configParam:
    get:
      operationId: list-ConfigParam
      description: List "ConfigParam" resources
      tags:
        - configParam
      parameters:
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[value]
          required: false
          description: Equality filter for "value"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[value$contains]
          required: false
          description: String contains filter for "value"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[value$icontains]
          required: false
          description: String case-insensitive contains filter for "value"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[value$search]
          required: false
          description: String full-text search filter for "value"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[value$startsWith]
          required: false
          description: String startsWith filter for "value"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[value$endsWith]
          required: false
          description: String endsWith filter for "value"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[utility]
          required: false
          description: Equality filter for "utility"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[utility$contains]
          required: false
          description: String contains filter for "utility"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[utility$icontains]
          required: false
          description: String case-insensitive contains filter for "utility"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[utility$search]
          required: false
          description: String full-text search filter for "utility"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[utility$startsWith]
          required: false
          description: String startsWith filter for "utility"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[utility$endsWith]
          required: false
          description: String endsWith filter for "utility"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ConfigParamListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-ConfigParam
      description: Create a "ConfigParam" resource
      tags:
        - configParam
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/ConfigParamCreateRequest"
      responses:
        "201":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ConfigParamResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/configParam/{id}:
    get:
      operationId: fetch-ConfigParam
      description: Fetch a "ConfigParam" resource
      tags:
        - configParam
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ConfigParamResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-ConfigParam-put
      description: Update a "ConfigParam" resource
      tags:
        - configParam
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/ConfigParamUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ConfigParamResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-ConfigParam-patch
      description: Update a "ConfigParam" resource
      tags:
        - configParam
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/ConfigParamUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ConfigParamResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    delete:
      operationId: delete-ConfigParam
      description: Delete a "ConfigParam" resource
      tags:
        - configParam
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/orgEmailUseTo:
    get:
      operationId: list-OrgEmailUseTo
      description: List "OrgEmailUseTo" resources
      tags:
        - orgEmailUseTo
      parameters:
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[useTo]
          required: false
          description: Equality filter for "useTo"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[useTo$contains]
          required: false
          description: String contains filter for "useTo"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[useTo$icontains]
          required: false
          description: String case-insensitive contains filter for "useTo"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[useTo$search]
          required: false
          description: String full-text search filter for "useTo"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[useTo$startsWith]
          required: false
          description: String startsWith filter for "useTo"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[useTo$endsWith]
          required: false
          description: String endsWith filter for "useTo"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[isActiv]
          required: false
          description: Equality filter for "isActiv"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[emailOrg]
          required: false
          description: Equality filter for "emailOrg"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OrgEmailUseToListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-OrgEmailUseTo
      description: Create a "OrgEmailUseTo" resource
      tags:
        - orgEmailUseTo
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/OrgEmailUseToCreateRequest"
      responses:
        "201":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OrgEmailUseToResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/orgEmailUseTo/{id}:
    get:
      operationId: fetch-OrgEmailUseTo
      description: Fetch a "OrgEmailUseTo" resource
      tags:
        - orgEmailUseTo
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OrgEmailUseToResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-OrgEmailUseTo-put
      description: Update a "OrgEmailUseTo" resource
      tags:
        - orgEmailUseTo
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/OrgEmailUseToUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OrgEmailUseToResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-OrgEmailUseTo-patch
      description: Update a "OrgEmailUseTo" resource
      tags:
        - orgEmailUseTo
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/OrgEmailUseToUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OrgEmailUseToResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    delete:
      operationId: delete-OrgEmailUseTo
      description: Delete a "OrgEmailUseTo" resource
      tags:
        - orgEmailUseTo
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/orgEmailUseTo/{id}/emailOrg:
    get:
      operationId: fetch-OrgEmailUseTo-related-emailOrg
      description: Fetch the related "emailOrg" resource for "OrgEmailUseTo"
      tags:
        - orgEmailUseTo
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OrgEmailResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/orgEmailUseTo/{id}/relationships/emailOrg:
    get:
      operationId: fetch-OrgEmailUseTo-relationship-emailOrg
      description: Fetch the "emailOrg" relationships for a "OrgEmailUseTo"
      tags:
        - orgEmailUseTo
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-OrgEmailUseTo-relationship-emailOrg-put
      description: Update "emailOrg" relationship for a "OrgEmailUseTo"
      tags:
        - orgEmailUseTo
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-OrgEmailUseTo-relationship-emailOrg-patch
      description: Update "emailOrg" relationship for a "OrgEmailUseTo"
      tags:
        - orgEmailUseTo
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/appEmailDomain:
    get:
      operationId: list-AppEmailDomain
      description: List "AppEmailDomain" resources
      tags:
        - appEmailDomain
      parameters:
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[domain]
          required: false
          description: Equality filter for "domain"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[domain$contains]
          required: false
          description: String contains filter for "domain"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[domain$icontains]
          required: false
          description: String case-insensitive contains filter for "domain"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[domain$search]
          required: false
          description: String full-text search filter for "domain"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[domain$startsWith]
          required: false
          description: String startsWith filter for "domain"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[domain$endsWith]
          required: false
          description: String endsWith filter for "domain"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[allowed]
          required: false
          description: Equality filter for "allowed"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/AppEmailDomainListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-AppEmailDomain
      description: Create a "AppEmailDomain" resource
      tags:
        - appEmailDomain
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/AppEmailDomainCreateRequest"
      responses:
        "201":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/AppEmailDomainResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/appEmailDomain/{id}:
    get:
      operationId: fetch-AppEmailDomain
      description: Fetch a "AppEmailDomain" resource
      tags:
        - appEmailDomain
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/AppEmailDomainResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-AppEmailDomain-put
      description: Update a "AppEmailDomain" resource
      tags:
        - appEmailDomain
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/AppEmailDomainUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/AppEmailDomainResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-AppEmailDomain-patch
      description: Update a "AppEmailDomain" resource
      tags:
        - appEmailDomain
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/AppEmailDomainUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/AppEmailDomainResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    delete:
      operationId: delete-AppEmailDomain
      description: Delete a "AppEmailDomain" resource
      tags:
        - appEmailDomain
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/refreshToken:
    get:
      operationId: list-RefreshToken
      description: List "RefreshToken" resources
      tags:
        - refreshToken
      parameters:
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[userId]
          required: false
          description: Equality filter for "userId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userId$contains]
          required: false
          description: String contains filter for "userId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userId$icontains]
          required: false
          description: String case-insensitive contains filter for "userId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userId$search]
          required: false
          description: String full-text search filter for "userId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userId$startsWith]
          required: false
          description: String startsWith filter for "userId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[userId$endsWith]
          required: false
          description: String endsWith filter for "userId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tokenId]
          required: false
          description: Equality filter for "tokenId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tokenId$contains]
          required: false
          description: String contains filter for "tokenId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tokenId$icontains]
          required: false
          description: String case-insensitive contains filter for "tokenId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tokenId$search]
          required: false
          description: String full-text search filter for "tokenId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tokenId$startsWith]
          required: false
          description: String startsWith filter for "tokenId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tokenId$endsWith]
          required: false
          description: String endsWith filter for "tokenId"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/RefreshTokenListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-RefreshToken
      description: Create a "RefreshToken" resource
      tags:
        - refreshToken
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/RefreshTokenCreateRequest"
      responses:
        "201":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/RefreshTokenResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/refreshToken/{id}:
    get:
      operationId: fetch-RefreshToken
      description: Fetch a "RefreshToken" resource
      tags:
        - refreshToken
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/RefreshTokenResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-RefreshToken-put
      description: Update a "RefreshToken" resource
      tags:
        - refreshToken
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/RefreshTokenUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/RefreshTokenResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-RefreshToken-patch
      description: Update a "RefreshToken" resource
      tags:
        - refreshToken
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/RefreshTokenUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/RefreshTokenResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    delete:
      operationId: delete-RefreshToken
      description: Delete a "RefreshToken" resource
      tags:
        - refreshToken
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/apiKey:
    get:
      operationId: list-ApiKey
      description: List "ApiKey" resources
      tags:
        - apiKey
      parameters:
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[key]
          required: false
          description: Equality filter for "key"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[key$contains]
          required: false
          description: String contains filter for "key"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[key$icontains]
          required: false
          description: String case-insensitive contains filter for "key"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[key$search]
          required: false
          description: String full-text search filter for "key"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[key$startsWith]
          required: false
          description: String startsWith filter for "key"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[key$endsWith]
          required: false
          description: String endsWith filter for "key"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[uuid]
          required: false
          description: Equality filter for "uuid"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[uuid$contains]
          required: false
          description: String contains filter for "uuid"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[uuid$icontains]
          required: false
          description: String case-insensitive contains filter for "uuid"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[uuid$search]
          required: false
          description: String full-text search filter for "uuid"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[uuid$startsWith]
          required: false
          description: String startsWith filter for "uuid"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[uuid$endsWith]
          required: false
          description: String endsWith filter for "uuid"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[user]
          required: false
          description: Equality filter for "user"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Scopes]
          required: false
          description: Equality filter for "Scopes"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ApiKeyListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-ApiKey
      description: Create a "ApiKey" resource
      tags:
        - apiKey
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/ApiKeyCreateRequest"
      responses:
        "201":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ApiKeyResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/apiKey/{id}:
    get:
      operationId: fetch-ApiKey
      description: Fetch a "ApiKey" resource
      tags:
        - apiKey
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ApiKeyResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-ApiKey-put
      description: Update a "ApiKey" resource
      tags:
        - apiKey
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/ApiKeyUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ApiKeyResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-ApiKey-patch
      description: Update a "ApiKey" resource
      tags:
        - apiKey
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/ApiKeyUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ApiKeyResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    delete:
      operationId: delete-ApiKey
      description: Delete a "ApiKey" resource
      tags:
        - apiKey
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/apiKey/{id}/user:
    get:
      operationId: fetch-ApiKey-related-user
      description: Fetch the related "user" resource for "ApiKey"
      tags:
        - apiKey
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/apiKey/{id}/relationships/user:
    get:
      operationId: fetch-ApiKey-relationship-user
      description: Fetch the "user" relationships for a "ApiKey"
      tags:
        - apiKey
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-ApiKey-relationship-user-put
      description: Update "user" relationship for a "ApiKey"
      tags:
        - apiKey
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-ApiKey-relationship-user-patch
      description: Update "user" relationship for a "ApiKey"
      tags:
        - apiKey
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/apiKey/{id}/Scopes:
    get:
      operationId: fetch-ApiKey-related-Scopes
      description: Fetch the related "Scopes" resource for "ApiKey"
      tags:
        - apiKey
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[key]
          required: false
          description: Equality filter for "key"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[key$contains]
          required: false
          description: String contains filter for "key"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[key$icontains]
          required: false
          description: String case-insensitive contains filter for "key"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[key$search]
          required: false
          description: String full-text search filter for "key"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[key$startsWith]
          required: false
          description: String startsWith filter for "key"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[key$endsWith]
          required: false
          description: String endsWith filter for "key"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[uuid]
          required: false
          description: Equality filter for "uuid"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[uuid$contains]
          required: false
          description: String contains filter for "uuid"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[uuid$icontains]
          required: false
          description: String case-insensitive contains filter for "uuid"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[uuid$search]
          required: false
          description: String full-text search filter for "uuid"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[uuid$startsWith]
          required: false
          description: String startsWith filter for "uuid"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[uuid$endsWith]
          required: false
          description: String endsWith filter for "uuid"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[user]
          required: false
          description: Equality filter for "user"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Scopes]
          required: false
          description: Equality filter for "Scopes"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ScopeListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/apiKey/{id}/relationships/Scopes:
    get:
      operationId: fetch-ApiKey-relationship-Scopes
      description: Fetch the "Scopes" relationships for a "ApiKey"
      tags:
        - apiKey
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[key]
          required: false
          description: Equality filter for "key"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[key$contains]
          required: false
          description: String contains filter for "key"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[key$icontains]
          required: false
          description: String case-insensitive contains filter for "key"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[key$search]
          required: false
          description: String full-text search filter for "key"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[key$startsWith]
          required: false
          description: String startsWith filter for "key"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[key$endsWith]
          required: false
          description: String endsWith filter for "key"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[uuid]
          required: false
          description: Equality filter for "uuid"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[uuid$contains]
          required: false
          description: String contains filter for "uuid"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[uuid$icontains]
          required: false
          description: String case-insensitive contains filter for "uuid"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[uuid$search]
          required: false
          description: String full-text search filter for "uuid"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[uuid$startsWith]
          required: false
          description: String startsWith filter for "uuid"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[uuid$endsWith]
          required: false
          description: String endsWith filter for "uuid"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[user]
          required: false
          description: Equality filter for "user"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Scopes]
          required: false
          description: Equality filter for "Scopes"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-ApiKey-relationship-Scopes-put
      description: Update "Scopes" relationships for a "ApiKey"
      tags:
        - apiKey
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-ApiKey-relationship-Scopes-patch
      description: Update "Scopes" relationships for a "ApiKey"
      tags:
        - apiKey
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-ApiKey-relationship-Scopes
      description: Create new "Scopes" relationships for a "ApiKey"
      tags:
        - apiKey
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/scope:
    get:
      operationId: list-Scope
      description: List "Scope" resources
      tags:
        - scope
      parameters:
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[scope]
          required: false
          description: Equality filter for "scope"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[scope$contains]
          required: false
          description: String contains filter for "scope"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[scope$icontains]
          required: false
          description: String case-insensitive contains filter for "scope"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[scope$search]
          required: false
          description: String full-text search filter for "scope"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[scope$startsWith]
          required: false
          description: String startsWith filter for "scope"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[scope$endsWith]
          required: false
          description: String endsWith filter for "scope"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ApiKey]
          required: false
          description: Equality filter for "ApiKey"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ScopeListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Scope
      description: Create a "Scope" resource
      tags:
        - scope
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/ScopeCreateRequest"
      responses:
        "201":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ScopeResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/scope/{id}:
    get:
      operationId: fetch-Scope
      description: Fetch a "Scope" resource
      tags:
        - scope
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ScopeResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Scope-put
      description: Update a "Scope" resource
      tags:
        - scope
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/ScopeUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ScopeResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Scope-patch
      description: Update a "Scope" resource
      tags:
        - scope
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/ScopeUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ScopeResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    delete:
      operationId: delete-Scope
      description: Delete a "Scope" resource
      tags:
        - scope
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/scope/{id}/ApiKey:
    get:
      operationId: fetch-Scope-related-ApiKey
      description: Fetch the related "ApiKey" resource for "Scope"
      tags:
        - scope
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[scope]
          required: false
          description: Equality filter for "scope"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[scope$contains]
          required: false
          description: String contains filter for "scope"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[scope$icontains]
          required: false
          description: String case-insensitive contains filter for "scope"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[scope$search]
          required: false
          description: String full-text search filter for "scope"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[scope$startsWith]
          required: false
          description: String startsWith filter for "scope"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[scope$endsWith]
          required: false
          description: String endsWith filter for "scope"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ApiKey]
          required: false
          description: Equality filter for "ApiKey"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ApiKeyListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/scope/{id}/relationships/ApiKey:
    get:
      operationId: fetch-Scope-relationship-ApiKey
      description: Fetch the "ApiKey" relationships for a "Scope"
      tags:
        - scope
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[scope]
          required: false
          description: Equality filter for "scope"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[scope$contains]
          required: false
          description: String contains filter for "scope"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[scope$icontains]
          required: false
          description: String case-insensitive contains filter for "scope"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[scope$search]
          required: false
          description: String full-text search filter for "scope"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[scope$startsWith]
          required: false
          description: String startsWith filter for "scope"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[scope$endsWith]
          required: false
          description: String endsWith filter for "scope"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[ApiKey]
          required: false
          description: Equality filter for "ApiKey"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Scope-relationship-ApiKey-put
      description: Update "ApiKey" relationships for a "Scope"
      tags:
        - scope
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Scope-relationship-ApiKey-patch
      description: Update "ApiKey" relationships for a "Scope"
      tags:
        - scope
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Scope-relationship-ApiKey
      description: Create new "ApiKey" relationships for a "Scope"
      tags:
        - scope
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/token:
    get:
      operationId: list-Token
      description: List "Token" resources
      tags:
        - token
      parameters:
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[tokenId]
          required: false
          description: Equality filter for "tokenId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tokenId$contains]
          required: false
          description: String contains filter for "tokenId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tokenId$icontains]
          required: false
          description: String case-insensitive contains filter for "tokenId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tokenId$search]
          required: false
          description: String full-text search filter for "tokenId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tokenId$startsWith]
          required: false
          description: String startsWith filter for "tokenId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[tokenId$endsWith]
          required: false
          description: String endsWith filter for "tokenId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[type]
          required: false
          description: Equality filter for "type"
          in: query
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/TokenType"
        - name: filter[emailToken]
          required: false
          description: Equality filter for "emailToken"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailToken$contains]
          required: false
          description: String contains filter for "emailToken"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailToken$icontains]
          required: false
          description: String case-insensitive contains filter for "emailToken"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailToken$search]
          required: false
          description: String full-text search filter for "emailToken"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailToken$startsWith]
          required: false
          description: String startsWith filter for "emailToken"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailToken$endsWith]
          required: false
          description: String endsWith filter for "emailToken"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[valid]
          required: false
          description: Equality filter for "valid"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[expiration]
          required: false
          description: Equality filter for "expiration"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiration$lt]
          required: false
          description: Less-than filter for "expiration"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiration$lte]
          required: false
          description: Less-than or equal filter for "expiration"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiration$gt]
          required: false
          description: Greater-than filter for "expiration"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiration$gte]
          required: false
          description: Greater-than or equal filter for "expiration"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[user]
          required: false
          description: Equality filter for "user"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/TokenListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Token
      description: Create a "Token" resource
      tags:
        - token
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/TokenCreateRequest"
      responses:
        "201":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/token/{id}:
    get:
      operationId: fetch-Token
      description: Fetch a "Token" resource
      tags:
        - token
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Token-put
      description: Update a "Token" resource
      tags:
        - token
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/TokenUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Token-patch
      description: Update a "Token" resource
      tags:
        - token
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/TokenUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    delete:
      operationId: delete-Token
      description: Delete a "Token" resource
      tags:
        - token
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/token/{id}/user:
    get:
      operationId: fetch-Token-related-user
      description: Fetch the related "user" resource for "Token"
      tags:
        - token
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/token/{id}/relationships/user:
    get:
      operationId: fetch-Token-relationship-user
      description: Fetch the "user" relationships for a "Token"
      tags:
        - token
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Token-relationship-user-put
      description: Update "user" relationship for a "Token"
      tags:
        - token
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Token-relationship-user-patch
      description: Update "user" relationship for a "Token"
      tags:
        - token
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/changesTracking:
    get:
      operationId: list-ChangesTracking
      description: List "ChangesTracking" resources
      tags:
        - changesTracking
      parameters:
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[doneAt]
          required: false
          description: Equality filter for "doneAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[doneAt$lt]
          required: false
          description: Less-than filter for "doneAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[doneAt$lte]
          required: false
          description: Less-than or equal filter for "doneAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[doneAt$gt]
          required: false
          description: Greater-than filter for "doneAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[doneAt$gte]
          required: false
          description: Greater-than or equal filter for "doneAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[modifiedBy]
          required: false
          description: Equality filter for "modifiedBy"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[modelName]
          required: false
          description: Equality filter for "modelName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[modelName$contains]
          required: false
          description: String contains filter for "modelName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[modelName$icontains]
          required: false
          description: String case-insensitive contains filter for "modelName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[modelName$search]
          required: false
          description: String full-text search filter for "modelName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[modelName$startsWith]
          required: false
          description: String startsWith filter for "modelName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[modelName$endsWith]
          required: false
          description: String endsWith filter for "modelName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[recordId]
          required: false
          description: Equality filter for "recordId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[recordId$contains]
          required: false
          description: String contains filter for "recordId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[recordId$icontains]
          required: false
          description: String case-insensitive contains filter for "recordId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[recordId$search]
          required: false
          description: String full-text search filter for "recordId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[recordId$startsWith]
          required: false
          description: String startsWith filter for "recordId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[recordId$endsWith]
          required: false
          description: String endsWith filter for "recordId"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[operation]
          required: false
          description: Equality filter for "operation"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[operation$contains]
          required: false
          description: String contains filter for "operation"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[operation$icontains]
          required: false
          description: String case-insensitive contains filter for "operation"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[operation$search]
          required: false
          description: String full-text search filter for "operation"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[operation$startsWith]
          required: false
          description: String startsWith filter for "operation"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[operation$endsWith]
          required: false
          description: String endsWith filter for "operation"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[newData]
          required: false
          description: Equality filter for "newData"
          in: query
          style: form
          explode: false
          schema: {}
        - name: filter[oldData]
          required: false
          description: Equality filter for "oldData"
          in: query
          style: form
          explode: false
          schema: {}
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ChangesTrackingListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-ChangesTracking
      description: Create a "ChangesTracking" resource
      tags:
        - changesTracking
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/ChangesTrackingCreateRequest"
      responses:
        "201":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ChangesTrackingResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/changesTracking/{id}:
    get:
      operationId: fetch-ChangesTracking
      description: Fetch a "ChangesTracking" resource
      tags:
        - changesTracking
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ChangesTrackingResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-ChangesTracking-put
      description: Update a "ChangesTracking" resource
      tags:
        - changesTracking
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/ChangesTrackingUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ChangesTrackingResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-ChangesTracking-patch
      description: Update a "ChangesTracking" resource
      tags:
        - changesTracking
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/ChangesTrackingUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ChangesTrackingResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    delete:
      operationId: delete-ChangesTracking
      description: Delete a "ChangesTracking" resource
      tags:
        - changesTracking
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/changesTracking/{id}/modifiedBy:
    get:
      operationId: fetch-ChangesTracking-related-modifiedBy
      description: Fetch the related "modifiedBy" resource for "ChangesTracking"
      tags:
        - changesTracking
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/changesTracking/{id}/relationships/modifiedBy:
    get:
      operationId: fetch-ChangesTracking-relationship-modifiedBy
      description: Fetch the "modifiedBy" relationships for a "ChangesTracking"
      tags:
        - changesTracking
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-ChangesTracking-relationship-modifiedBy-put
      description: Update "modifiedBy" relationship for a "ChangesTracking"
      tags:
        - changesTracking
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-ChangesTracking-relationship-modifiedBy-patch
      description: Update "modifiedBy" relationship for a "ChangesTracking"
      tags:
        - changesTracking
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/accountValidation:
    get:
      operationId: list-AccountValidation
      description: List "AccountValidation" resources
      tags:
        - accountValidation
      parameters:
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[numSeq]
          required: false
          description: Equality filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lt]
          required: false
          description: Less-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$lte]
          required: false
          description: Less-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gt]
          required: false
          description: Greater-than filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[numSeq$gte]
          required: false
          description: Greater-than or equal filter for "numSeq"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[createdAt]
          required: false
          description: Equality filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lt]
          required: false
          description: Less-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$lte]
          required: false
          description: Less-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gt]
          required: false
          description: Greater-than filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[createdAt$gte]
          required: false
          description: Greater-than or equal filter for "createdAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt]
          required: false
          description: Equality filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lt]
          required: false
          description: Less-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$lte]
          required: false
          description: Less-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gt]
          required: false
          description: Greater-than filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt$gte]
          required: false
          description: Greater-than or equal filter for "updatedAt"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[published]
          required: false
          description: Equality filter for "published"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isPublic]
          required: false
          description: Equality filter for "isPublic"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[isDeleted]
          required: false
          description: Equality filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lt]
          required: false
          description: Less-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$lte]
          required: false
          description: Less-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gt]
          required: false
          description: Greater-than filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeleted$gte]
          required: false
          description: Greater-than or equal filter for "isDeleted"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[isDeletedDT]
          required: false
          description: Equality filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lt]
          required: false
          description: Less-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$lte]
          required: false
          description: Less-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gt]
          required: false
          description: Greater-than filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isDeletedDT$gte]
          required: false
          description: Greater-than or equal filter for "isDeletedDT"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[isValidated]
          required: false
          description: Equality filter for "isValidated"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[emailToken]
          required: false
          description: Equality filter for "emailToken"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailToken$contains]
          required: false
          description: String contains filter for "emailToken"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailToken$icontains]
          required: false
          description: String case-insensitive contains filter for "emailToken"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailToken$search]
          required: false
          description: String full-text search filter for "emailToken"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailToken$startsWith]
          required: false
          description: String startsWith filter for "emailToken"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[emailToken$endsWith]
          required: false
          description: String endsWith filter for "emailToken"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[timeStamp]
          required: false
          description: Equality filter for "timeStamp"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[timeStamp$lt]
          required: false
          description: Less-than filter for "timeStamp"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[timeStamp$lte]
          required: false
          description: Less-than or equal filter for "timeStamp"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[timeStamp$gt]
          required: false
          description: Greater-than filter for "timeStamp"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[timeStamp$gte]
          required: false
          description: Greater-than or equal filter for "timeStamp"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/AccountValidationListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-AccountValidation
      description: Create a "AccountValidation" resource
      tags:
        - accountValidation
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/AccountValidationCreateRequest"
      responses:
        "201":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/AccountValidationResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /apizen/accountValidation/{id}:
    get:
      operationId: fetch-AccountValidation
      description: Fetch a "AccountValidation" resource
      tags:
        - accountValidation
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/AccountValidationResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-AccountValidation-put
      description: Update a "AccountValidation" resource
      tags:
        - accountValidation
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/AccountValidationUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/AccountValidationResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-AccountValidation-patch
      description: Update a "AccountValidation" resource
      tags:
        - accountValidation
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/AccountValidationUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/AccountValidationResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    delete:
      operationId: delete-AccountValidation
      description: Delete a "AccountValidation" resource
      tags:
        - accountValidation
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
components:
  schemas:
    _jsonapi:
      type: object
      description: An object describing the server’s implementation
      required:
        - version
      properties:
        version:
          type: string
    _meta:
      type: object
      description: Meta information about the request or response
      properties:
        serialization:
          description: Superjson serialization metadata
      additionalProperties: true
    _resourceIdentifier:
      type: object
      description: Identifier for a resource
      required:
        - type
        - id
      properties:
        type:
          type: string
          description: Resource type
        id:
          type: string
          description: Resource id
    _resource:
      allOf:
        - $ref: "#/components/schemas/_resourceIdentifier"
        - type: object
          description: A resource with attributes and relationships
          properties:
            attributes:
              type: object
              description: Resource attributes
            relationships:
              type: object
              description: Resource relationships
    _links:
      type: object
      required:
        - self
      description: Links related to the resource
      properties:
        self:
          type: string
          description: Link for refetching the curent results
    _pagination:
      type: object
      description: Pagination information
      required:
        - first
        - last
        - prev
        - next
      properties:
        first:
          oneOf:
            - type: "null"
            - type: string
              description: Link to the first page
        last:
          oneOf:
            - type: "null"
            - type: string
              description: Link to the last page
        prev:
          oneOf:
            - type: "null"
            - type: string
              description: Link to the previous page
        next:
          oneOf:
            - type: "null"
            - type: string
              description: Link to the next page
    _errors:
      type: array
      description: An array of error objects
      items:
        type: object
        required:
          - status
          - code
        properties:
          status:
            type: string
            description: HTTP status
          code:
            type: string
            description: Error code
          prismaCode:
            type: string
            description: Prisma error code if the error is thrown by Prisma
          title:
            type: string
            description: Error title
          detail:
            type: string
            description: Error detail
          reason:
            type: string
            description: Detailed error reason
          zodErrors:
            type: object
            additionalProperties: true
            description: Zod validation errors if the error is due to data validation
              failure
    _errorResponse:
      type: object
      required:
        - errors
      description: An error response
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        errors:
          $ref: "#/components/schemas/_errors"
    _relationLinks:
      type: object
      required:
        - self
        - related
      description: Links related to a relationship
      properties:
        self:
          type: string
          description: Link for fetching this relationship
        related:
          type: string
          description: Link for fetching the resource represented by this relationship
    _toOneRelationship:
      type: object
      description: A to-one relationship
      properties:
        data:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/_resourceIdentifier"
    _toOneRelationshipWithLinks:
      type: object
      required:
        - links
        - data
      description: A to-one relationship with links
      properties:
        links:
          $ref: "#/components/schemas/_relationLinks"
        data:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/_resourceIdentifier"
    _toManyRelationship:
      type: object
      required:
        - data
      description: A to-many relationship
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/_resourceIdentifier"
    _toManyRelationshipWithLinks:
      type: object
      required:
        - links
        - data
      description: A to-many relationship with links
      properties:
        links:
          $ref: "#/components/schemas/_pagedRelationLinks"
        data:
          type: array
          items:
            $ref: "#/components/schemas/_resourceIdentifier"
    _pagedRelationLinks:
      description: Relationship links with pagination information
      allOf:
        - $ref: "#/components/schemas/_pagination"
        - $ref: "#/components/schemas/_relationLinks"
    _toManyRelationshipRequest:
      type: object
      required:
        - data
      description: Input for manipulating a to-many relationship
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/_resourceIdentifier"
    _toOneRelationshipRequest:
      description: Input for manipulating a to-one relationship
      oneOf:
        - type: "null"
        - type: object
          required:
            - data
          properties:
            data:
              $ref: "#/components/schemas/_resourceIdentifier"
    _toManyRelationshipResponse:
      description: Response for a to-many relationship
      allOf:
        - $ref: "#/components/schemas/_toManyRelationshipWithLinks"
        - type: object
          properties:
            jsonapi:
              $ref: "#/components/schemas/_jsonapi"
    _toOneRelationshipResponse:
      description: Response for a to-one relationship
      allOf:
        - $ref: "#/components/schemas/_toOneRelationshipWithLinks"
        - type: object
          properties:
            jsonapi:
              $ref: "#/components/schemas/_jsonapi"
    TaskState:
      type: string
      description: The "TaskState" Enum
      enum:
        - CREATION
        - STANDBY
        - RUNNING
        - DONE
    TodoState:
      type: string
      description: The "TodoState" Enum
      enum:
        - CREATION
        - STANDBY
        - RUNNING
        - DONE
    Gender:
      type: string
      description: The "Gender" Enum
      enum:
        - MALE
        - FEMELE
        - UNKNOWN
    Title:
      type: string
      description: The "Title" Enum
      enum:
        - Mr
        - Mme
        - Dct
    Language:
      type: string
      description: The "Language" Enum
      enum:
        - en
        - fr
    Role:
      type: string
      description: The "Role" Enum
      enum:
        - GUEST
        - USER
        - ADMIN
        - SUPERADMIN
        - REGULAR
    PermissionClaim:
      type: string
      description: The "PermissionClaim" Enum
      enum:
        - CreateCoffee
        - UpdateCoffee
        - DeleteCoffee
    TokenType:
      type: string
      description: The "TokenType" Enum
      enum:
        - EMAIL
        - API
        - FORGOT
        - ACCOUNT
        - REFREZH
    Organization:
      type: object
      description: The "Organization" model
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            numSeq:
              type: integer
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
            published:
              oneOf:
                - type: "null"
                - type: boolean
            isPublic:
              oneOf:
                - type: "null"
                - type: boolean
            isDeleted:
              oneOf:
                - type: "null"
                - type: integer
            isDeletedDT:
              oneOf:
                - type: "null"
                - type: string
                  format: date-time
            name:
              type: string
            description:
              oneOf:
                - type: "null"
                - type: string
            address:
              oneOf:
                - type: "null"
                - {}
            emailITAdmin:
              type: string
            webSite:
              oneOf:
                - type: "null"
                - type: string
            mainOrgId:
              oneOf:
                - type: "null"
                - type: string
        relationships:
          type: object
          properties:
            OrgEmails:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            OrgDomains:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            mainOrg:
              oneOf:
                - type: "null"
                - $ref: "#/components/schemas/_toOneRelationshipWithLinks"
            OrgEntity:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            Members:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            Posts:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            Groups:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            Files:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            Tasks:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            Todos:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
    OrganizationCreateRequest:
      type: object
      description: Input for creating a "Organization"
      required:
        - data
      properties:
        data:
          type: object
          description: The "Organization" model
          required:
            - type
            - attributes
          properties:
            type:
              type: string
            attributes:
              type: object
              required:
                - name
                - emailITAdmin
              properties:
                numSeq:
                  type: integer
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  oneOf:
                    - type: "null"
                    - type: boolean
                isPublic:
                  oneOf:
                    - type: "null"
                    - type: boolean
                isDeleted:
                  oneOf:
                    - type: "null"
                    - type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                name:
                  type: string
                description:
                  oneOf:
                    - type: "null"
                    - type: string
                address:
                  oneOf:
                    - type: "null"
                    - {}
                emailITAdmin:
                  type: string
                webSite:
                  oneOf:
                    - type: "null"
                    - type: string
                mainOrgId:
                  oneOf:
                    - type: "null"
                    - type: string
            relationships:
              type: object
              properties:
                OrgEmails:
                  $ref: "#/components/schemas/_toManyRelationship"
                OrgDomains:
                  $ref: "#/components/schemas/_toManyRelationship"
                mainOrg:
                  oneOf:
                    - type: "null"
                    - $ref: "#/components/schemas/_toOneRelationship"
                OrgEntity:
                  $ref: "#/components/schemas/_toManyRelationship"
                Members:
                  $ref: "#/components/schemas/_toManyRelationship"
                Posts:
                  $ref: "#/components/schemas/_toManyRelationship"
                Groups:
                  $ref: "#/components/schemas/_toManyRelationship"
                Files:
                  $ref: "#/components/schemas/_toManyRelationship"
                Tasks:
                  $ref: "#/components/schemas/_toManyRelationship"
                Todos:
                  $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    OrganizationUpdateRequest:
      type: object
      description: Input for updating a "Organization"
      required:
        - data
      properties:
        data:
          type: object
          description: The "Organization" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                numSeq:
                  type: integer
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  oneOf:
                    - type: "null"
                    - type: boolean
                isPublic:
                  oneOf:
                    - type: "null"
                    - type: boolean
                isDeleted:
                  oneOf:
                    - type: "null"
                    - type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                name:
                  type: string
                description:
                  oneOf:
                    - type: "null"
                    - type: string
                address:
                  oneOf:
                    - type: "null"
                    - {}
                emailITAdmin:
                  type: string
                webSite:
                  oneOf:
                    - type: "null"
                    - type: string
                mainOrgId:
                  oneOf:
                    - type: "null"
                    - type: string
            relationships:
              type: object
              properties:
                OrgEmails:
                  $ref: "#/components/schemas/_toManyRelationship"
                OrgDomains:
                  $ref: "#/components/schemas/_toManyRelationship"
                mainOrg:
                  oneOf:
                    - type: "null"
                    - $ref: "#/components/schemas/_toOneRelationship"
                OrgEntity:
                  $ref: "#/components/schemas/_toManyRelationship"
                Members:
                  $ref: "#/components/schemas/_toManyRelationship"
                Posts:
                  $ref: "#/components/schemas/_toManyRelationship"
                Groups:
                  $ref: "#/components/schemas/_toManyRelationship"
                Files:
                  $ref: "#/components/schemas/_toManyRelationship"
                Tasks:
                  $ref: "#/components/schemas/_toManyRelationship"
                Todos:
                  $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    OrganizationResponse:
      type: object
      description: Response for a "Organization"
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          allOf:
            - $ref: "#/components/schemas/Organization"
            - type: object
              properties:
                relationships:
                  type: object
                  properties: &a1
                    OrgEmails:
                      $ref: "#/components/schemas/_toManyRelationship"
                    OrgDomains:
                      $ref: "#/components/schemas/_toManyRelationship"
                    mainOrg:
                      $ref: "#/components/schemas/_toOneRelationship"
                    OrgEntity:
                      $ref: "#/components/schemas/_toManyRelationship"
                    Members:
                      $ref: "#/components/schemas/_toManyRelationship"
                    Posts:
                      $ref: "#/components/schemas/_toManyRelationship"
                    Groups:
                      $ref: "#/components/schemas/_toManyRelationship"
                    Files:
                      $ref: "#/components/schemas/_toManyRelationship"
                    Tasks:
                      $ref: "#/components/schemas/_toManyRelationship"
                    Todos:
                      $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          $ref: "#/components/schemas/_links"
    OrganizationListResponse:
      type: object
      description: Response for a list of "Organization"
      required:
        - data
        - links
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/Organization"
              - type: object
                properties:
                  relationships:
                    type: object
                    properties: *a1
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          allOf:
            - $ref: "#/components/schemas/_links"
            - $ref: "#/components/schemas/_pagination"
    OrgEmail:
      type: object
      description: The "OrgEmail" model
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
            published:
              type: boolean
            isPublic:
              type: boolean
            isDeleted:
              type: integer
            isDeletedDT:
              oneOf:
                - type: "null"
                - type: string
                  format: date-time
            email:
              type: string
            description:
              oneOf:
                - type: "null"
                - type: string
            orgId:
              type: string
        relationships:
          type: object
          properties:
            org:
              oneOf:
                - type: "null"
                - $ref: "#/components/schemas/_toOneRelationshipWithLinks"
            OrgEmailUseTos:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
    OrgEmailCreateRequest:
      type: object
      description: Input for creating a "OrgEmail"
      required:
        - data
      properties:
        data:
          type: object
          description: The "OrgEmail" model
          required:
            - type
            - attributes
          properties:
            type:
              type: string
            attributes:
              type: object
              required:
                - email
                - orgId
              properties:
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  type: boolean
                isPublic:
                  type: boolean
                isDeleted:
                  type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                email:
                  type: string
                description:
                  oneOf:
                    - type: "null"
                    - type: string
                orgId:
                  type: string
            relationships:
              type: object
              properties:
                org:
                  oneOf:
                    - type: "null"
                    - $ref: "#/components/schemas/_toOneRelationship"
                OrgEmailUseTos:
                  $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    OrgEmailUpdateRequest:
      type: object
      description: Input for updating a "OrgEmail"
      required:
        - data
      properties:
        data:
          type: object
          description: The "OrgEmail" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  type: boolean
                isPublic:
                  type: boolean
                isDeleted:
                  type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                email:
                  type: string
                description:
                  oneOf:
                    - type: "null"
                    - type: string
                orgId:
                  type: string
            relationships:
              type: object
              properties:
                org:
                  oneOf:
                    - type: "null"
                    - $ref: "#/components/schemas/_toOneRelationship"
                OrgEmailUseTos:
                  $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    OrgEmailResponse:
      type: object
      description: Response for a "OrgEmail"
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          allOf:
            - $ref: "#/components/schemas/OrgEmail"
            - type: object
              properties:
                relationships:
                  type: object
                  properties: &a2
                    org:
                      $ref: "#/components/schemas/_toOneRelationship"
                    OrgEmailUseTos:
                      $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          $ref: "#/components/schemas/_links"
    OrgEmailListResponse:
      type: object
      description: Response for a list of "OrgEmail"
      required:
        - data
        - links
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/OrgEmail"
              - type: object
                properties:
                  relationships:
                    type: object
                    properties: *a2
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          allOf:
            - $ref: "#/components/schemas/_links"
            - $ref: "#/components/schemas/_pagination"
    OrgDomain:
      type: object
      description: The "OrgDomain" model
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
            published:
              type: boolean
            isPublic:
              type: boolean
            isDeleted:
              type: integer
            isDeletedDT:
              oneOf:
                - type: "null"
                - type: string
                  format: date-time
            domainName:
              type: string
            extension:
              type: string
            orgId:
              type: string
        relationships:
          type: object
          properties:
            org:
              oneOf:
                - type: "null"
                - $ref: "#/components/schemas/_toOneRelationshipWithLinks"
    OrgDomainCreateRequest:
      type: object
      description: Input for creating a "OrgDomain"
      required:
        - data
      properties:
        data:
          type: object
          description: The "OrgDomain" model
          required:
            - type
            - attributes
          properties:
            type:
              type: string
            attributes:
              type: object
              required:
                - domainName
                - extension
                - orgId
              properties:
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  type: boolean
                isPublic:
                  type: boolean
                isDeleted:
                  type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                domainName:
                  type: string
                extension:
                  type: string
                orgId:
                  type: string
            relationships:
              type: object
              properties:
                org:
                  oneOf:
                    - type: "null"
                    - $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    OrgDomainUpdateRequest:
      type: object
      description: Input for updating a "OrgDomain"
      required:
        - data
      properties:
        data:
          type: object
          description: The "OrgDomain" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  type: boolean
                isPublic:
                  type: boolean
                isDeleted:
                  type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                domainName:
                  type: string
                extension:
                  type: string
                orgId:
                  type: string
            relationships:
              type: object
              properties:
                org:
                  oneOf:
                    - type: "null"
                    - $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    OrgDomainResponse:
      type: object
      description: Response for a "OrgDomain"
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          allOf:
            - $ref: "#/components/schemas/OrgDomain"
            - type: object
              properties:
                relationships:
                  type: object
                  properties: &a3
                    org:
                      $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          $ref: "#/components/schemas/_links"
    OrgDomainListResponse:
      type: object
      description: Response for a list of "OrgDomain"
      required:
        - data
        - links
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/OrgDomain"
              - type: object
                properties:
                  relationships:
                    type: object
                    properties: *a3
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          allOf:
            - $ref: "#/components/schemas/_links"
            - $ref: "#/components/schemas/_pagination"
    User:
      type: object
      description: The "User" model
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            numSeq:
              type: integer
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
            published:
              oneOf:
                - type: "null"
                - type: boolean
            isPublic:
              oneOf:
                - type: "null"
                - type: boolean
            isDeleted:
              oneOf:
                - type: "null"
                - type: integer
            isDeletedDT:
              oneOf:
                - type: "null"
                - type: string
                  format: date-time
            email:
              type: string
            lastName:
              oneOf:
                - type: "null"
                - type: string
            firstName:
              oneOf:
                - type: "null"
                - type: string
            title:
              oneOf:
                - type: "null"
                - $ref: "#/components/schemas/Title"
            nickName:
              oneOf:
                - type: "null"
                - type: string
            Gender:
              oneOf:
                - type: "null"
                - $ref: "#/components/schemas/Gender"
            social:
              oneOf:
                - type: "null"
                - {}
            Language:
              oneOf:
                - type: "null"
                - $ref: "#/components/schemas/Language"
            dob:
              oneOf:
                - type: "null"
                - type: string
                  format: date-time
            address:
              oneOf:
                - type: "null"
                - {}
            isValidated:
              oneOf:
                - type: "null"
                - type: string
                  format: date-time
            isSuspended:
              oneOf:
                - type: "null"
                - type: string
                  format: date-time
            managerId:
              oneOf:
                - type: "null"
                - type: string
            Roles:
              type: array
              items:
                $ref: "#/components/schemas/Role"
            Permissions:
              type: array
              items:
                $ref: "#/components/schemas/PermissionClaim"
            isTfaEnable:
              type: boolean
            tfaSecret:
              oneOf:
                - type: "null"
                - type: string
            passWordFaker:
              oneOf:
                - type: "null"
                - type: string
        relationships:
          type: object
          properties:
            Orgs:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            manager:
              oneOf:
                - type: "null"
                - $ref: "#/components/schemas/_toOneRelationshipWithLinks"
            Team:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            Profiles:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            Groups:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            Posts:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            Comments:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            Stories:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            Todo:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            TodosAuthor:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            Tasks:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            TasksAuthor:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            Files:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            ChangesLogs:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            Tokens:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            ApiKeys:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            userSecret:
              oneOf:
                - type: "null"
                - $ref: "#/components/schemas/_toOneRelationshipWithLinks"
            followers:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            followings:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            posts_liked:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
    UserCreateRequest:
      type: object
      description: Input for creating a "User"
      required:
        - data
      properties:
        data:
          type: object
          description: The "User" model
          required:
            - type
            - attributes
          properties:
            type:
              type: string
            attributes:
              type: object
              required:
                - email
                - Roles
                - Permissions
              properties:
                numSeq:
                  type: integer
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  oneOf:
                    - type: "null"
                    - type: boolean
                isPublic:
                  oneOf:
                    - type: "null"
                    - type: boolean
                isDeleted:
                  oneOf:
                    - type: "null"
                    - type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                email:
                  type: string
                lastName:
                  oneOf:
                    - type: "null"
                    - type: string
                firstName:
                  oneOf:
                    - type: "null"
                    - type: string
                title:
                  oneOf:
                    - type: "null"
                    - $ref: "#/components/schemas/Title"
                nickName:
                  oneOf:
                    - type: "null"
                    - type: string
                Gender:
                  oneOf:
                    - type: "null"
                    - $ref: "#/components/schemas/Gender"
                social:
                  oneOf:
                    - type: "null"
                    - {}
                Language:
                  oneOf:
                    - type: "null"
                    - $ref: "#/components/schemas/Language"
                dob:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                address:
                  oneOf:
                    - type: "null"
                    - {}
                isValidated:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                isSuspended:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                managerId:
                  oneOf:
                    - type: "null"
                    - type: string
                Roles:
                  type: array
                  items:
                    $ref: "#/components/schemas/Role"
                Permissions:
                  type: array
                  items:
                    $ref: "#/components/schemas/PermissionClaim"
                isTfaEnable:
                  type: boolean
                tfaSecret:
                  oneOf:
                    - type: "null"
                    - type: string
                passWordFaker:
                  oneOf:
                    - type: "null"
                    - type: string
            relationships:
              type: object
              properties:
                Orgs:
                  $ref: "#/components/schemas/_toManyRelationship"
                manager:
                  oneOf:
                    - type: "null"
                    - $ref: "#/components/schemas/_toOneRelationship"
                Team:
                  $ref: "#/components/schemas/_toManyRelationship"
                Profiles:
                  $ref: "#/components/schemas/_toManyRelationship"
                Groups:
                  $ref: "#/components/schemas/_toManyRelationship"
                Posts:
                  $ref: "#/components/schemas/_toManyRelationship"
                Comments:
                  $ref: "#/components/schemas/_toManyRelationship"
                Stories:
                  $ref: "#/components/schemas/_toManyRelationship"
                Todo:
                  $ref: "#/components/schemas/_toManyRelationship"
                TodosAuthor:
                  $ref: "#/components/schemas/_toManyRelationship"
                Tasks:
                  $ref: "#/components/schemas/_toManyRelationship"
                TasksAuthor:
                  $ref: "#/components/schemas/_toManyRelationship"
                Files:
                  $ref: "#/components/schemas/_toManyRelationship"
                ChangesLogs:
                  $ref: "#/components/schemas/_toManyRelationship"
                Tokens:
                  $ref: "#/components/schemas/_toManyRelationship"
                ApiKeys:
                  $ref: "#/components/schemas/_toManyRelationship"
                userSecret:
                  oneOf:
                    - type: "null"
                    - $ref: "#/components/schemas/_toOneRelationship"
                followers:
                  $ref: "#/components/schemas/_toManyRelationship"
                followings:
                  $ref: "#/components/schemas/_toManyRelationship"
                posts_liked:
                  $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    UserUpdateRequest:
      type: object
      description: Input for updating a "User"
      required:
        - data
      properties:
        data:
          type: object
          description: The "User" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                numSeq:
                  type: integer
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  oneOf:
                    - type: "null"
                    - type: boolean
                isPublic:
                  oneOf:
                    - type: "null"
                    - type: boolean
                isDeleted:
                  oneOf:
                    - type: "null"
                    - type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                email:
                  type: string
                lastName:
                  oneOf:
                    - type: "null"
                    - type: string
                firstName:
                  oneOf:
                    - type: "null"
                    - type: string
                title:
                  oneOf:
                    - type: "null"
                    - $ref: "#/components/schemas/Title"
                nickName:
                  oneOf:
                    - type: "null"
                    - type: string
                Gender:
                  oneOf:
                    - type: "null"
                    - $ref: "#/components/schemas/Gender"
                social:
                  oneOf:
                    - type: "null"
                    - {}
                Language:
                  oneOf:
                    - type: "null"
                    - $ref: "#/components/schemas/Language"
                dob:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                address:
                  oneOf:
                    - type: "null"
                    - {}
                isValidated:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                isSuspended:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                managerId:
                  oneOf:
                    - type: "null"
                    - type: string
                Roles:
                  type: array
                  items:
                    $ref: "#/components/schemas/Role"
                Permissions:
                  type: array
                  items:
                    $ref: "#/components/schemas/PermissionClaim"
                isTfaEnable:
                  type: boolean
                tfaSecret:
                  oneOf:
                    - type: "null"
                    - type: string
                passWordFaker:
                  oneOf:
                    - type: "null"
                    - type: string
            relationships:
              type: object
              properties:
                Orgs:
                  $ref: "#/components/schemas/_toManyRelationship"
                manager:
                  oneOf:
                    - type: "null"
                    - $ref: "#/components/schemas/_toOneRelationship"
                Team:
                  $ref: "#/components/schemas/_toManyRelationship"
                Profiles:
                  $ref: "#/components/schemas/_toManyRelationship"
                Groups:
                  $ref: "#/components/schemas/_toManyRelationship"
                Posts:
                  $ref: "#/components/schemas/_toManyRelationship"
                Comments:
                  $ref: "#/components/schemas/_toManyRelationship"
                Stories:
                  $ref: "#/components/schemas/_toManyRelationship"
                Todo:
                  $ref: "#/components/schemas/_toManyRelationship"
                TodosAuthor:
                  $ref: "#/components/schemas/_toManyRelationship"
                Tasks:
                  $ref: "#/components/schemas/_toManyRelationship"
                TasksAuthor:
                  $ref: "#/components/schemas/_toManyRelationship"
                Files:
                  $ref: "#/components/schemas/_toManyRelationship"
                ChangesLogs:
                  $ref: "#/components/schemas/_toManyRelationship"
                Tokens:
                  $ref: "#/components/schemas/_toManyRelationship"
                ApiKeys:
                  $ref: "#/components/schemas/_toManyRelationship"
                userSecret:
                  oneOf:
                    - type: "null"
                    - $ref: "#/components/schemas/_toOneRelationship"
                followers:
                  $ref: "#/components/schemas/_toManyRelationship"
                followings:
                  $ref: "#/components/schemas/_toManyRelationship"
                posts_liked:
                  $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    UserResponse:
      type: object
      description: Response for a "User"
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          allOf:
            - $ref: "#/components/schemas/User"
            - type: object
              properties:
                relationships:
                  type: object
                  properties: &a4
                    Orgs:
                      $ref: "#/components/schemas/_toManyRelationship"
                    manager:
                      $ref: "#/components/schemas/_toOneRelationship"
                    Team:
                      $ref: "#/components/schemas/_toManyRelationship"
                    Profiles:
                      $ref: "#/components/schemas/_toManyRelationship"
                    Groups:
                      $ref: "#/components/schemas/_toManyRelationship"
                    Posts:
                      $ref: "#/components/schemas/_toManyRelationship"
                    Comments:
                      $ref: "#/components/schemas/_toManyRelationship"
                    Stories:
                      $ref: "#/components/schemas/_toManyRelationship"
                    Todo:
                      $ref: "#/components/schemas/_toManyRelationship"
                    TodosAuthor:
                      $ref: "#/components/schemas/_toManyRelationship"
                    Tasks:
                      $ref: "#/components/schemas/_toManyRelationship"
                    TasksAuthor:
                      $ref: "#/components/schemas/_toManyRelationship"
                    Files:
                      $ref: "#/components/schemas/_toManyRelationship"
                    ChangesLogs:
                      $ref: "#/components/schemas/_toManyRelationship"
                    Tokens:
                      $ref: "#/components/schemas/_toManyRelationship"
                    ApiKeys:
                      $ref: "#/components/schemas/_toManyRelationship"
                    userSecret:
                      $ref: "#/components/schemas/_toOneRelationship"
                    followers:
                      $ref: "#/components/schemas/_toManyRelationship"
                    followings:
                      $ref: "#/components/schemas/_toManyRelationship"
                    posts_liked:
                      $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          $ref: "#/components/schemas/_links"
    UserListResponse:
      type: object
      description: Response for a list of "User"
      required:
        - data
        - links
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/User"
              - type: object
                properties:
                  relationships:
                    type: object
                    properties: *a4
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          allOf:
            - $ref: "#/components/schemas/_links"
            - $ref: "#/components/schemas/_pagination"
    UserSecret:
      type: object
      description: The "UserSecret" model
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
            userId:
              type: string
            pwdHash:
              oneOf:
                - type: "null"
                - type: string
            salt:
              oneOf:
                - type: "null"
                - type: string
            isAdmin:
              oneOf:
                - type: "null"
                - type: boolean
        relationships:
          type: object
          properties:
            user:
              $ref: "#/components/schemas/_toOneRelationshipWithLinks"
    UserSecretCreateRequest:
      type: object
      description: Input for creating a "UserSecret"
      required:
        - data
      properties:
        data:
          type: object
          description: The "UserSecret" model
          required:
            - type
            - attributes
          properties:
            type:
              type: string
            attributes:
              type: object
              required:
                - userId
              properties:
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                userId:
                  type: string
                pwdHash:
                  oneOf:
                    - type: "null"
                    - type: string
                salt:
                  oneOf:
                    - type: "null"
                    - type: string
                isAdmin:
                  oneOf:
                    - type: "null"
                    - type: boolean
            relationships:
              type: object
              properties:
                user:
                  $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    UserSecretUpdateRequest:
      type: object
      description: Input for updating a "UserSecret"
      required:
        - data
      properties:
        data:
          type: object
          description: The "UserSecret" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                userId:
                  type: string
                pwdHash:
                  oneOf:
                    - type: "null"
                    - type: string
                salt:
                  oneOf:
                    - type: "null"
                    - type: string
                isAdmin:
                  oneOf:
                    - type: "null"
                    - type: boolean
            relationships:
              type: object
              properties:
                user:
                  $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    UserSecretResponse:
      type: object
      description: Response for a "UserSecret"
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          allOf:
            - $ref: "#/components/schemas/UserSecret"
            - type: object
              properties:
                relationships:
                  type: object
                  properties: &a5
                    user:
                      $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          $ref: "#/components/schemas/_links"
    UserSecretListResponse:
      type: object
      description: Response for a list of "UserSecret"
      required:
        - data
        - links
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/UserSecret"
              - type: object
                properties:
                  relationships:
                    type: object
                    properties: *a5
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          allOf:
            - $ref: "#/components/schemas/_links"
            - $ref: "#/components/schemas/_pagination"
    Profile:
      type: object
      description: The "Profile" model
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
            published:
              type: boolean
            isPublic:
              type: boolean
            isDeleted:
              type: integer
            isDeletedDT:
              oneOf:
                - type: "null"
                - type: string
                  format: date-time
            orderProfile:
              type: integer
            bio:
              type: string
        relationships:
          type: object
          properties:
            Users:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
    ProfileCreateRequest:
      type: object
      description: Input for creating a "Profile"
      required:
        - data
      properties:
        data:
          type: object
          description: The "Profile" model
          required:
            - type
            - attributes
          properties:
            type:
              type: string
            attributes:
              type: object
              required:
                - orderProfile
                - bio
              properties:
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  type: boolean
                isPublic:
                  type: boolean
                isDeleted:
                  type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                orderProfile:
                  type: integer
                bio:
                  type: string
            relationships:
              type: object
              properties:
                Users:
                  $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    ProfileUpdateRequest:
      type: object
      description: Input for updating a "Profile"
      required:
        - data
      properties:
        data:
          type: object
          description: The "Profile" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  type: boolean
                isPublic:
                  type: boolean
                isDeleted:
                  type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                orderProfile:
                  type: integer
                bio:
                  type: string
            relationships:
              type: object
              properties:
                Users:
                  $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    ProfileResponse:
      type: object
      description: Response for a "Profile"
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          allOf:
            - $ref: "#/components/schemas/Profile"
            - type: object
              properties:
                relationships:
                  type: object
                  properties: &a6
                    Users:
                      $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          $ref: "#/components/schemas/_links"
    ProfileListResponse:
      type: object
      description: Response for a list of "Profile"
      required:
        - data
        - links
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/Profile"
              - type: object
                properties:
                  relationships:
                    type: object
                    properties: *a6
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          allOf:
            - $ref: "#/components/schemas/_links"
            - $ref: "#/components/schemas/_pagination"
    Group:
      type: object
      description: The "Group" model
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
            published:
              type: boolean
            isPublic:
              type: boolean
            isDeleted:
              type: integer
            isDeletedDT:
              oneOf:
                - type: "null"
                - type: string
                  format: date-time
            orderGroup:
              type: integer
            name:
              type: string
            description:
              oneOf:
                - type: "null"
                - type: string
            isActiv:
              oneOf:
                - type: "null"
                - type: string
                  format: date-time
            orgId:
              type: string
        relationships:
          type: object
          properties:
            Users:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            Tasks:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            Todos:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            Posts:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            Files:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            org:
              $ref: "#/components/schemas/_toOneRelationshipWithLinks"
    GroupCreateRequest:
      type: object
      description: Input for creating a "Group"
      required:
        - data
      properties:
        data:
          type: object
          description: The "Group" model
          required:
            - type
            - attributes
          properties:
            type:
              type: string
            attributes:
              type: object
              required:
                - orderGroup
                - name
                - orgId
              properties:
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  type: boolean
                isPublic:
                  type: boolean
                isDeleted:
                  type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                orderGroup:
                  type: integer
                name:
                  type: string
                description:
                  oneOf:
                    - type: "null"
                    - type: string
                isActiv:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                orgId:
                  type: string
            relationships:
              type: object
              properties:
                Users:
                  $ref: "#/components/schemas/_toManyRelationship"
                Tasks:
                  $ref: "#/components/schemas/_toManyRelationship"
                Todos:
                  $ref: "#/components/schemas/_toManyRelationship"
                Posts:
                  $ref: "#/components/schemas/_toManyRelationship"
                Files:
                  $ref: "#/components/schemas/_toManyRelationship"
                org:
                  $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    GroupUpdateRequest:
      type: object
      description: Input for updating a "Group"
      required:
        - data
      properties:
        data:
          type: object
          description: The "Group" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  type: boolean
                isPublic:
                  type: boolean
                isDeleted:
                  type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                orderGroup:
                  type: integer
                name:
                  type: string
                description:
                  oneOf:
                    - type: "null"
                    - type: string
                isActiv:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                orgId:
                  type: string
            relationships:
              type: object
              properties:
                Users:
                  $ref: "#/components/schemas/_toManyRelationship"
                Tasks:
                  $ref: "#/components/schemas/_toManyRelationship"
                Todos:
                  $ref: "#/components/schemas/_toManyRelationship"
                Posts:
                  $ref: "#/components/schemas/_toManyRelationship"
                Files:
                  $ref: "#/components/schemas/_toManyRelationship"
                org:
                  $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    GroupResponse:
      type: object
      description: Response for a "Group"
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          allOf:
            - $ref: "#/components/schemas/Group"
            - type: object
              properties:
                relationships:
                  type: object
                  properties: &a7
                    Users:
                      $ref: "#/components/schemas/_toManyRelationship"
                    Tasks:
                      $ref: "#/components/schemas/_toManyRelationship"
                    Todos:
                      $ref: "#/components/schemas/_toManyRelationship"
                    Posts:
                      $ref: "#/components/schemas/_toManyRelationship"
                    Files:
                      $ref: "#/components/schemas/_toManyRelationship"
                    org:
                      $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          $ref: "#/components/schemas/_links"
    GroupListResponse:
      type: object
      description: Response for a list of "Group"
      required:
        - data
        - links
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/Group"
              - type: object
                properties:
                  relationships:
                    type: object
                    properties: *a7
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          allOf:
            - $ref: "#/components/schemas/_links"
            - $ref: "#/components/schemas/_pagination"
    Todo:
      type: object
      description: The "Todo" model
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            numSeq:
              type: integer
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
            published:
              type: boolean
            isDeleted:
              type: integer
            isDeletedDT:
              oneOf:
                - type: "null"
                - type: string
                  format: date-time
            isPublic:
              type: boolean
            ownerId:
              type: string
            orgId:
              type: string
            orderTodo:
              type: integer
            title:
              type: string
            content:
              oneOf:
                - type: "null"
                - type: string
            todoState:
              $ref: "#/components/schemas/TodoState"
            mainTodoId:
              oneOf:
                - type: "null"
                - type: string
        relationships:
          type: object
          properties:
            owner:
              $ref: "#/components/schemas/_toOneRelationshipWithLinks"
            org:
              $ref: "#/components/schemas/_toOneRelationshipWithLinks"
            groups:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            mainTodo:
              oneOf:
                - type: "null"
                - $ref: "#/components/schemas/_toOneRelationshipWithLinks"
            SubTodos:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            Users:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            Tasks:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
    TodoCreateRequest:
      type: object
      description: Input for creating a "Todo"
      required:
        - data
      properties:
        data:
          type: object
          description: The "Todo" model
          required:
            - type
            - attributes
          properties:
            type:
              type: string
            attributes:
              type: object
              required:
                - ownerId
                - orgId
                - orderTodo
                - title
              properties:
                numSeq:
                  type: integer
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  type: boolean
                isDeleted:
                  type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                isPublic:
                  type: boolean
                ownerId:
                  type: string
                orgId:
                  type: string
                orderTodo:
                  type: integer
                title:
                  type: string
                content:
                  oneOf:
                    - type: "null"
                    - type: string
                todoState:
                  $ref: "#/components/schemas/TodoState"
                mainTodoId:
                  oneOf:
                    - type: "null"
                    - type: string
            relationships:
              type: object
              properties:
                owner:
                  $ref: "#/components/schemas/_toOneRelationship"
                org:
                  $ref: "#/components/schemas/_toOneRelationship"
                groups:
                  $ref: "#/components/schemas/_toManyRelationship"
                mainTodo:
                  oneOf:
                    - type: "null"
                    - $ref: "#/components/schemas/_toOneRelationship"
                SubTodos:
                  $ref: "#/components/schemas/_toManyRelationship"
                Users:
                  $ref: "#/components/schemas/_toManyRelationship"
                Tasks:
                  $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    TodoUpdateRequest:
      type: object
      description: Input for updating a "Todo"
      required:
        - data
      properties:
        data:
          type: object
          description: The "Todo" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                numSeq:
                  type: integer
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  type: boolean
                isDeleted:
                  type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                isPublic:
                  type: boolean
                ownerId:
                  type: string
                orgId:
                  type: string
                orderTodo:
                  type: integer
                title:
                  type: string
                content:
                  oneOf:
                    - type: "null"
                    - type: string
                todoState:
                  $ref: "#/components/schemas/TodoState"
                mainTodoId:
                  oneOf:
                    - type: "null"
                    - type: string
            relationships:
              type: object
              properties:
                owner:
                  $ref: "#/components/schemas/_toOneRelationship"
                org:
                  $ref: "#/components/schemas/_toOneRelationship"
                groups:
                  $ref: "#/components/schemas/_toManyRelationship"
                mainTodo:
                  oneOf:
                    - type: "null"
                    - $ref: "#/components/schemas/_toOneRelationship"
                SubTodos:
                  $ref: "#/components/schemas/_toManyRelationship"
                Users:
                  $ref: "#/components/schemas/_toManyRelationship"
                Tasks:
                  $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    TodoResponse:
      type: object
      description: Response for a "Todo"
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          allOf:
            - $ref: "#/components/schemas/Todo"
            - type: object
              properties:
                relationships:
                  type: object
                  properties: &a8
                    owner:
                      $ref: "#/components/schemas/_toOneRelationship"
                    org:
                      $ref: "#/components/schemas/_toOneRelationship"
                    groups:
                      $ref: "#/components/schemas/_toManyRelationship"
                    mainTodo:
                      $ref: "#/components/schemas/_toOneRelationship"
                    SubTodos:
                      $ref: "#/components/schemas/_toManyRelationship"
                    Users:
                      $ref: "#/components/schemas/_toManyRelationship"
                    Tasks:
                      $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          $ref: "#/components/schemas/_links"
    TodoListResponse:
      type: object
      description: Response for a list of "Todo"
      required:
        - data
        - links
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/Todo"
              - type: object
                properties:
                  relationships:
                    type: object
                    properties: *a8
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          allOf:
            - $ref: "#/components/schemas/_links"
            - $ref: "#/components/schemas/_pagination"
    UserTodoLink:
      type: object
      description: The "UserTodoLink" model
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            isAuthor:
              type: boolean
            isAssigned:
              type: boolean
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
            comment:
              type: string
        relationships:
          type: object
          properties:
            user:
              $ref: "#/components/schemas/_toOneRelationshipWithLinks"
            todo:
              $ref: "#/components/schemas/_toOneRelationshipWithLinks"
    UserTodoLinkCreateRequest:
      type: object
      description: Input for creating a "UserTodoLink"
      required:
        - data
      properties:
        data:
          type: object
          description: The "UserTodoLink" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              required:
                - updatedAt
                - comment
              properties:
                isAuthor:
                  type: boolean
                isAssigned:
                  type: boolean
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                comment:
                  type: string
            relationships:
              type: object
              properties:
                user:
                  $ref: "#/components/schemas/_toOneRelationship"
                todo:
                  $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    UserTodoLinkUpdateRequest:
      type: object
      description: Input for updating a "UserTodoLink"
      required:
        - data
      properties:
        data:
          type: object
          description: The "UserTodoLink" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                isAuthor:
                  type: boolean
                isAssigned:
                  type: boolean
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                comment:
                  type: string
            relationships:
              type: object
              properties:
                user:
                  $ref: "#/components/schemas/_toOneRelationship"
                todo:
                  $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    UserTodoLinkResponse:
      type: object
      description: Response for a "UserTodoLink"
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          allOf:
            - $ref: "#/components/schemas/UserTodoLink"
            - type: object
              properties:
                relationships:
                  type: object
                  properties: &a9
                    user:
                      $ref: "#/components/schemas/_toOneRelationship"
                    todo:
                      $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          $ref: "#/components/schemas/_links"
    UserTodoLinkListResponse:
      type: object
      description: Response for a list of "UserTodoLink"
      required:
        - data
        - links
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/UserTodoLink"
              - type: object
                properties:
                  relationships:
                    type: object
                    properties: *a9
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          allOf:
            - $ref: "#/components/schemas/_links"
            - $ref: "#/components/schemas/_pagination"
    Task:
      type: object
      description: The "Task" model
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            numSeq:
              type: integer
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
            published:
              type: boolean
            isDeleted:
              type: integer
            isDeletedDT:
              oneOf:
                - type: "null"
                - type: string
                  format: date-time
            isPublic:
              type: boolean
            ownerId:
              type: string
            orgId:
              type: string
            orderTask:
              type: integer
            title:
              type: string
            content:
              oneOf:
                - type: "null"
                - type: string
            taskState:
              $ref: "#/components/schemas/TaskState"
            mainTaskId:
              oneOf:
                - type: "null"
                - type: string
            todoId:
              oneOf:
                - type: "null"
                - type: string
        relationships:
          type: object
          properties:
            owner:
              $ref: "#/components/schemas/_toOneRelationshipWithLinks"
            org:
              $ref: "#/components/schemas/_toOneRelationshipWithLinks"
            groups:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            mainTask:
              oneOf:
                - type: "null"
                - $ref: "#/components/schemas/_toOneRelationshipWithLinks"
            SubTasks:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            Users:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            todo:
              oneOf:
                - type: "null"
                - $ref: "#/components/schemas/_toOneRelationshipWithLinks"
    TaskCreateRequest:
      type: object
      description: Input for creating a "Task"
      required:
        - data
      properties:
        data:
          type: object
          description: The "Task" model
          required:
            - type
            - attributes
          properties:
            type:
              type: string
            attributes:
              type: object
              required:
                - ownerId
                - orgId
                - orderTask
                - title
              properties:
                numSeq:
                  type: integer
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  type: boolean
                isDeleted:
                  type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                isPublic:
                  type: boolean
                ownerId:
                  type: string
                orgId:
                  type: string
                orderTask:
                  type: integer
                title:
                  type: string
                content:
                  oneOf:
                    - type: "null"
                    - type: string
                taskState:
                  $ref: "#/components/schemas/TaskState"
                mainTaskId:
                  oneOf:
                    - type: "null"
                    - type: string
                todoId:
                  oneOf:
                    - type: "null"
                    - type: string
            relationships:
              type: object
              properties:
                owner:
                  $ref: "#/components/schemas/_toOneRelationship"
                org:
                  $ref: "#/components/schemas/_toOneRelationship"
                groups:
                  $ref: "#/components/schemas/_toManyRelationship"
                mainTask:
                  oneOf:
                    - type: "null"
                    - $ref: "#/components/schemas/_toOneRelationship"
                SubTasks:
                  $ref: "#/components/schemas/_toManyRelationship"
                Users:
                  $ref: "#/components/schemas/_toManyRelationship"
                todo:
                  oneOf:
                    - type: "null"
                    - $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    TaskUpdateRequest:
      type: object
      description: Input for updating a "Task"
      required:
        - data
      properties:
        data:
          type: object
          description: The "Task" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                numSeq:
                  type: integer
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  type: boolean
                isDeleted:
                  type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                isPublic:
                  type: boolean
                ownerId:
                  type: string
                orgId:
                  type: string
                orderTask:
                  type: integer
                title:
                  type: string
                content:
                  oneOf:
                    - type: "null"
                    - type: string
                taskState:
                  $ref: "#/components/schemas/TaskState"
                mainTaskId:
                  oneOf:
                    - type: "null"
                    - type: string
                todoId:
                  oneOf:
                    - type: "null"
                    - type: string
            relationships:
              type: object
              properties:
                owner:
                  $ref: "#/components/schemas/_toOneRelationship"
                org:
                  $ref: "#/components/schemas/_toOneRelationship"
                groups:
                  $ref: "#/components/schemas/_toManyRelationship"
                mainTask:
                  oneOf:
                    - type: "null"
                    - $ref: "#/components/schemas/_toOneRelationship"
                SubTasks:
                  $ref: "#/components/schemas/_toManyRelationship"
                Users:
                  $ref: "#/components/schemas/_toManyRelationship"
                todo:
                  oneOf:
                    - type: "null"
                    - $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    TaskResponse:
      type: object
      description: Response for a "Task"
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          allOf:
            - $ref: "#/components/schemas/Task"
            - type: object
              properties:
                relationships:
                  type: object
                  properties: &a10
                    owner:
                      $ref: "#/components/schemas/_toOneRelationship"
                    org:
                      $ref: "#/components/schemas/_toOneRelationship"
                    groups:
                      $ref: "#/components/schemas/_toManyRelationship"
                    mainTask:
                      $ref: "#/components/schemas/_toOneRelationship"
                    SubTasks:
                      $ref: "#/components/schemas/_toManyRelationship"
                    Users:
                      $ref: "#/components/schemas/_toManyRelationship"
                    todo:
                      $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          $ref: "#/components/schemas/_links"
    TaskListResponse:
      type: object
      description: Response for a list of "Task"
      required:
        - data
        - links
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/Task"
              - type: object
                properties:
                  relationships:
                    type: object
                    properties: *a10
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          allOf:
            - $ref: "#/components/schemas/_links"
            - $ref: "#/components/schemas/_pagination"
    UserTaskLink:
      type: object
      description: The "UserTaskLink" model
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            isAuthor:
              type: boolean
            isAssigned:
              type: boolean
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
            comment:
              type: string
        relationships:
          type: object
          properties:
            user:
              $ref: "#/components/schemas/_toOneRelationshipWithLinks"
            task:
              $ref: "#/components/schemas/_toOneRelationshipWithLinks"
    UserTaskLinkCreateRequest:
      type: object
      description: Input for creating a "UserTaskLink"
      required:
        - data
      properties:
        data:
          type: object
          description: The "UserTaskLink" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              required:
                - updatedAt
                - comment
              properties:
                isAuthor:
                  type: boolean
                isAssigned:
                  type: boolean
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                comment:
                  type: string
            relationships:
              type: object
              properties:
                user:
                  $ref: "#/components/schemas/_toOneRelationship"
                task:
                  $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    UserTaskLinkUpdateRequest:
      type: object
      description: Input for updating a "UserTaskLink"
      required:
        - data
      properties:
        data:
          type: object
          description: The "UserTaskLink" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                isAuthor:
                  type: boolean
                isAssigned:
                  type: boolean
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                comment:
                  type: string
            relationships:
              type: object
              properties:
                user:
                  $ref: "#/components/schemas/_toOneRelationship"
                task:
                  $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    UserTaskLinkResponse:
      type: object
      description: Response for a "UserTaskLink"
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          allOf:
            - $ref: "#/components/schemas/UserTaskLink"
            - type: object
              properties:
                relationships:
                  type: object
                  properties: &a11
                    user:
                      $ref: "#/components/schemas/_toOneRelationship"
                    task:
                      $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          $ref: "#/components/schemas/_links"
    UserTaskLinkListResponse:
      type: object
      description: Response for a list of "UserTaskLink"
      required:
        - data
        - links
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/UserTaskLink"
              - type: object
                properties:
                  relationships:
                    type: object
                    properties: *a11
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          allOf:
            - $ref: "#/components/schemas/_links"
            - $ref: "#/components/schemas/_pagination"
    Post:
      type: object
      description: The "Post" model
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            numSeq:
              type: integer
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
            published:
              type: boolean
            isDeleted:
              type: integer
            isDeletedDT:
              oneOf:
                - type: "null"
                - type: string
                  format: date-time
            isPublic:
              type: boolean
            ownerId:
              type: string
            orgId:
              type: string
            orderPost:
              oneOf:
                - type: "null"
                - type: integer
            title:
              type: string
            content:
              oneOf:
                - type: "null"
                - type: string
        relationships:
          type: object
          properties:
            owner:
              $ref: "#/components/schemas/_toOneRelationshipWithLinks"
            org:
              $ref: "#/components/schemas/_toOneRelationshipWithLinks"
            groups:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            Categories:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            Comments:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            LikedBys:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
    PostCreateRequest:
      type: object
      description: Input for creating a "Post"
      required:
        - data
      properties:
        data:
          type: object
          description: The "Post" model
          required:
            - type
            - attributes
          properties:
            type:
              type: string
            attributes:
              type: object
              required:
                - ownerId
                - orgId
                - title
              properties:
                numSeq:
                  type: integer
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  type: boolean
                isDeleted:
                  type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                isPublic:
                  type: boolean
                ownerId:
                  type: string
                orgId:
                  type: string
                orderPost:
                  oneOf:
                    - type: "null"
                    - type: integer
                title:
                  type: string
                content:
                  oneOf:
                    - type: "null"
                    - type: string
            relationships:
              type: object
              properties:
                owner:
                  $ref: "#/components/schemas/_toOneRelationship"
                org:
                  $ref: "#/components/schemas/_toOneRelationship"
                groups:
                  $ref: "#/components/schemas/_toManyRelationship"
                Categories:
                  $ref: "#/components/schemas/_toManyRelationship"
                Comments:
                  $ref: "#/components/schemas/_toManyRelationship"
                LikedBys:
                  $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    PostUpdateRequest:
      type: object
      description: Input for updating a "Post"
      required:
        - data
      properties:
        data:
          type: object
          description: The "Post" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                numSeq:
                  type: integer
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  type: boolean
                isDeleted:
                  type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                isPublic:
                  type: boolean
                ownerId:
                  type: string
                orgId:
                  type: string
                orderPost:
                  oneOf:
                    - type: "null"
                    - type: integer
                title:
                  type: string
                content:
                  oneOf:
                    - type: "null"
                    - type: string
            relationships:
              type: object
              properties:
                owner:
                  $ref: "#/components/schemas/_toOneRelationship"
                org:
                  $ref: "#/components/schemas/_toOneRelationship"
                groups:
                  $ref: "#/components/schemas/_toManyRelationship"
                Categories:
                  $ref: "#/components/schemas/_toManyRelationship"
                Comments:
                  $ref: "#/components/schemas/_toManyRelationship"
                LikedBys:
                  $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    PostResponse:
      type: object
      description: Response for a "Post"
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          allOf:
            - $ref: "#/components/schemas/Post"
            - type: object
              properties:
                relationships:
                  type: object
                  properties: &a12
                    owner:
                      $ref: "#/components/schemas/_toOneRelationship"
                    org:
                      $ref: "#/components/schemas/_toOneRelationship"
                    groups:
                      $ref: "#/components/schemas/_toManyRelationship"
                    Categories:
                      $ref: "#/components/schemas/_toManyRelationship"
                    Comments:
                      $ref: "#/components/schemas/_toManyRelationship"
                    LikedBys:
                      $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          $ref: "#/components/schemas/_links"
    PostListResponse:
      type: object
      description: Response for a list of "Post"
      required:
        - data
        - links
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/Post"
              - type: object
                properties:
                  relationships:
                    type: object
                    properties: *a12
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          allOf:
            - $ref: "#/components/schemas/_links"
            - $ref: "#/components/schemas/_pagination"
    Category:
      type: object
      description: The "Category" model
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            numSeq:
              type: integer
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
            published:
              oneOf:
                - type: "null"
                - type: boolean
            isPublic:
              oneOf:
                - type: "null"
                - type: boolean
            isDeleted:
              oneOf:
                - type: "null"
                - type: integer
            isDeletedDT:
              oneOf:
                - type: "null"
                - type: string
                  format: date-time
            orderCategory:
              type: integer
            name:
              type: string
        relationships:
          type: object
          properties:
            Posts:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
    CategoryCreateRequest:
      type: object
      description: Input for creating a "Category"
      required:
        - data
      properties:
        data:
          type: object
          description: The "Category" model
          required:
            - type
            - attributes
          properties:
            type:
              type: string
            attributes:
              type: object
              required:
                - orderCategory
                - name
              properties:
                numSeq:
                  type: integer
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  oneOf:
                    - type: "null"
                    - type: boolean
                isPublic:
                  oneOf:
                    - type: "null"
                    - type: boolean
                isDeleted:
                  oneOf:
                    - type: "null"
                    - type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                orderCategory:
                  type: integer
                name:
                  type: string
            relationships:
              type: object
              properties:
                Posts:
                  $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    CategoryUpdateRequest:
      type: object
      description: Input for updating a "Category"
      required:
        - data
      properties:
        data:
          type: object
          description: The "Category" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                numSeq:
                  type: integer
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  oneOf:
                    - type: "null"
                    - type: boolean
                isPublic:
                  oneOf:
                    - type: "null"
                    - type: boolean
                isDeleted:
                  oneOf:
                    - type: "null"
                    - type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                orderCategory:
                  type: integer
                name:
                  type: string
            relationships:
              type: object
              properties:
                Posts:
                  $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    CategoryResponse:
      type: object
      description: Response for a "Category"
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          allOf:
            - $ref: "#/components/schemas/Category"
            - type: object
              properties:
                relationships:
                  type: object
                  properties: &a13
                    Posts:
                      $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          $ref: "#/components/schemas/_links"
    CategoryListResponse:
      type: object
      description: Response for a list of "Category"
      required:
        - data
        - links
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/Category"
              - type: object
                properties:
                  relationships:
                    type: object
                    properties: *a13
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          allOf:
            - $ref: "#/components/schemas/_links"
            - $ref: "#/components/schemas/_pagination"
    Comment:
      type: object
      description: The "Comment" model
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            numSeq:
              type: integer
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
            published:
              oneOf:
                - type: "null"
                - type: boolean
            isPublic:
              oneOf:
                - type: "null"
                - type: boolean
            isDeleted:
              oneOf:
                - type: "null"
                - type: integer
            isDeletedDT:
              oneOf:
                - type: "null"
                - type: string
                  format: date-time
            orderComment:
              type: integer
            content:
              oneOf:
                - type: "null"
                - type: string
            postId:
              type: string
            authorId:
              type: string
        relationships:
          type: object
          properties:
            post:
              $ref: "#/components/schemas/_toOneRelationshipWithLinks"
            author:
              $ref: "#/components/schemas/_toOneRelationshipWithLinks"
    CommentCreateRequest:
      type: object
      description: Input for creating a "Comment"
      required:
        - data
      properties:
        data:
          type: object
          description: The "Comment" model
          required:
            - type
            - attributes
          properties:
            type:
              type: string
            attributes:
              type: object
              required:
                - orderComment
                - postId
                - authorId
              properties:
                numSeq:
                  type: integer
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  oneOf:
                    - type: "null"
                    - type: boolean
                isPublic:
                  oneOf:
                    - type: "null"
                    - type: boolean
                isDeleted:
                  oneOf:
                    - type: "null"
                    - type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                orderComment:
                  type: integer
                content:
                  oneOf:
                    - type: "null"
                    - type: string
                postId:
                  type: string
                authorId:
                  type: string
            relationships:
              type: object
              properties:
                post:
                  $ref: "#/components/schemas/_toOneRelationship"
                author:
                  $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    CommentUpdateRequest:
      type: object
      description: Input for updating a "Comment"
      required:
        - data
      properties:
        data:
          type: object
          description: The "Comment" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                numSeq:
                  type: integer
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  oneOf:
                    - type: "null"
                    - type: boolean
                isPublic:
                  oneOf:
                    - type: "null"
                    - type: boolean
                isDeleted:
                  oneOf:
                    - type: "null"
                    - type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                orderComment:
                  type: integer
                content:
                  oneOf:
                    - type: "null"
                    - type: string
                postId:
                  type: string
                authorId:
                  type: string
            relationships:
              type: object
              properties:
                post:
                  $ref: "#/components/schemas/_toOneRelationship"
                author:
                  $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    CommentResponse:
      type: object
      description: Response for a "Comment"
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          allOf:
            - $ref: "#/components/schemas/Comment"
            - type: object
              properties:
                relationships:
                  type: object
                  properties: &a14
                    post:
                      $ref: "#/components/schemas/_toOneRelationship"
                    author:
                      $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          $ref: "#/components/schemas/_links"
    CommentListResponse:
      type: object
      description: Response for a list of "Comment"
      required:
        - data
        - links
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/Comment"
              - type: object
                properties:
                  relationships:
                    type: object
                    properties: *a14
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          allOf:
            - $ref: "#/components/schemas/_links"
            - $ref: "#/components/schemas/_pagination"
    File:
      type: object
      description: The "File" model
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            numSeq:
              type: integer
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
            published:
              type: boolean
            isDeleted:
              type: integer
            isDeletedDT:
              oneOf:
                - type: "null"
                - type: string
                  format: date-time
            isPublic:
              type: boolean
            ownerId:
              type: string
            orgId:
              type: string
            name:
              type: string
            storageName:
              type: string
            type:
              oneOf:
                - type: "null"
                - type: string
            data:
              oneOf:
                - type: "null"
                - type: string
            size:
              oneOf:
                - type: "null"
                - type: integer
            isArchived:
              oneOf:
                - type: "null"
                - type: string
                  format: date-time
        relationships:
          type: object
          properties:
            owner:
              $ref: "#/components/schemas/_toOneRelationshipWithLinks"
            org:
              $ref: "#/components/schemas/_toOneRelationshipWithLinks"
            groups:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
    FileCreateRequest:
      type: object
      description: Input for creating a "File"
      required:
        - data
      properties:
        data:
          type: object
          description: The "File" model
          required:
            - type
            - attributes
          properties:
            type:
              type: string
            attributes:
              type: object
              required:
                - ownerId
                - orgId
                - name
                - storageName
              properties:
                numSeq:
                  type: integer
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  type: boolean
                isDeleted:
                  type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                isPublic:
                  type: boolean
                ownerId:
                  type: string
                orgId:
                  type: string
                name:
                  type: string
                storageName:
                  type: string
                type:
                  oneOf:
                    - type: "null"
                    - type: string
                data:
                  oneOf:
                    - type: "null"
                    - type: string
                size:
                  oneOf:
                    - type: "null"
                    - type: integer
                isArchived:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
            relationships:
              type: object
              properties:
                owner:
                  $ref: "#/components/schemas/_toOneRelationship"
                org:
                  $ref: "#/components/schemas/_toOneRelationship"
                groups:
                  $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    FileUpdateRequest:
      type: object
      description: Input for updating a "File"
      required:
        - data
      properties:
        data:
          type: object
          description: The "File" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                numSeq:
                  type: integer
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  type: boolean
                isDeleted:
                  type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                isPublic:
                  type: boolean
                ownerId:
                  type: string
                orgId:
                  type: string
                name:
                  type: string
                storageName:
                  type: string
                type:
                  oneOf:
                    - type: "null"
                    - type: string
                data:
                  oneOf:
                    - type: "null"
                    - type: string
                size:
                  oneOf:
                    - type: "null"
                    - type: integer
                isArchived:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
            relationships:
              type: object
              properties:
                owner:
                  $ref: "#/components/schemas/_toOneRelationship"
                org:
                  $ref: "#/components/schemas/_toOneRelationship"
                groups:
                  $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    FileResponse:
      type: object
      description: Response for a "File"
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          allOf:
            - $ref: "#/components/schemas/File"
            - type: object
              properties:
                relationships:
                  type: object
                  properties: &a15
                    owner:
                      $ref: "#/components/schemas/_toOneRelationship"
                    org:
                      $ref: "#/components/schemas/_toOneRelationship"
                    groups:
                      $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          $ref: "#/components/schemas/_links"
    FileListResponse:
      type: object
      description: Response for a list of "File"
      required:
        - data
        - links
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/File"
              - type: object
                properties:
                  relationships:
                    type: object
                    properties: *a15
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          allOf:
            - $ref: "#/components/schemas/_links"
            - $ref: "#/components/schemas/_pagination"
    UserFollower:
      type: object
      description: The "UserFollower" model
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
        relationships:
          type: object
          properties:
            user:
              $ref: "#/components/schemas/_toOneRelationshipWithLinks"
            follower:
              $ref: "#/components/schemas/_toOneRelationshipWithLinks"
    UserFollowerCreateRequest:
      type: object
      description: Input for creating a "UserFollower"
      required:
        - data
      properties:
        data:
          type: object
          description: The "UserFollower" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
            relationships:
              type: object
              properties:
                user:
                  $ref: "#/components/schemas/_toOneRelationship"
                follower:
                  $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    UserFollowerUpdateRequest:
      type: object
      description: Input for updating a "UserFollower"
      required:
        - data
      properties:
        data:
          type: object
          description: The "UserFollower" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
            relationships:
              type: object
              properties:
                user:
                  $ref: "#/components/schemas/_toOneRelationship"
                follower:
                  $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    UserFollowerResponse:
      type: object
      description: Response for a "UserFollower"
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          allOf:
            - $ref: "#/components/schemas/UserFollower"
            - type: object
              properties:
                relationships:
                  type: object
                  properties: &a16
                    user:
                      $ref: "#/components/schemas/_toOneRelationship"
                    follower:
                      $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          $ref: "#/components/schemas/_links"
    UserFollowerListResponse:
      type: object
      description: Response for a list of "UserFollower"
      required:
        - data
        - links
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/UserFollower"
              - type: object
                properties:
                  relationships:
                    type: object
                    properties: *a16
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          allOf:
            - $ref: "#/components/schemas/_links"
            - $ref: "#/components/schemas/_pagination"
    PostLike:
      type: object
      description: The "PostLike" model
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
        relationships:
          type: object
          properties:
            user:
              $ref: "#/components/schemas/_toOneRelationshipWithLinks"
            post:
              $ref: "#/components/schemas/_toOneRelationshipWithLinks"
    PostLikeCreateRequest:
      type: object
      description: Input for creating a "PostLike"
      required:
        - data
      properties:
        data:
          type: object
          description: The "PostLike" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
            relationships:
              type: object
              properties:
                user:
                  $ref: "#/components/schemas/_toOneRelationship"
                post:
                  $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    PostLikeUpdateRequest:
      type: object
      description: Input for updating a "PostLike"
      required:
        - data
      properties:
        data:
          type: object
          description: The "PostLike" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
            relationships:
              type: object
              properties:
                user:
                  $ref: "#/components/schemas/_toOneRelationship"
                post:
                  $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    PostLikeResponse:
      type: object
      description: Response for a "PostLike"
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          allOf:
            - $ref: "#/components/schemas/PostLike"
            - type: object
              properties:
                relationships:
                  type: object
                  properties: &a17
                    user:
                      $ref: "#/components/schemas/_toOneRelationship"
                    post:
                      $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          $ref: "#/components/schemas/_links"
    PostLikeListResponse:
      type: object
      description: Response for a list of "PostLike"
      required:
        - data
        - links
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/PostLike"
              - type: object
                properties:
                  relationships:
                    type: object
                    properties: *a17
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          allOf:
            - $ref: "#/components/schemas/_links"
            - $ref: "#/components/schemas/_pagination"
    Story:
      type: object
      description: The "Story" model
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            numSeq:
              type: integer
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
            published:
              oneOf:
                - type: "null"
                - type: boolean
            isPublic:
              oneOf:
                - type: "null"
                - type: boolean
            isDeleted:
              oneOf:
                - type: "null"
                - type: integer
            isDeletedDT:
              oneOf:
                - type: "null"
                - type: string
                  format: date-time
            caption:
              type: string
            user_id:
              type: string
        relationships:
          type: object
          properties:
            user:
              $ref: "#/components/schemas/_toOneRelationshipWithLinks"
    StoryCreateRequest:
      type: object
      description: Input for creating a "Story"
      required:
        - data
      properties:
        data:
          type: object
          description: The "Story" model
          required:
            - type
            - attributes
          properties:
            type:
              type: string
            attributes:
              type: object
              required:
                - caption
                - user_id
              properties:
                numSeq:
                  type: integer
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  oneOf:
                    - type: "null"
                    - type: boolean
                isPublic:
                  oneOf:
                    - type: "null"
                    - type: boolean
                isDeleted:
                  oneOf:
                    - type: "null"
                    - type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                caption:
                  type: string
                user_id:
                  type: string
            relationships:
              type: object
              properties:
                user:
                  $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    StoryUpdateRequest:
      type: object
      description: Input for updating a "Story"
      required:
        - data
      properties:
        data:
          type: object
          description: The "Story" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                numSeq:
                  type: integer
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  oneOf:
                    - type: "null"
                    - type: boolean
                isPublic:
                  oneOf:
                    - type: "null"
                    - type: boolean
                isDeleted:
                  oneOf:
                    - type: "null"
                    - type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                caption:
                  type: string
                user_id:
                  type: string
            relationships:
              type: object
              properties:
                user:
                  $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    StoryResponse:
      type: object
      description: Response for a "Story"
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          allOf:
            - $ref: "#/components/schemas/Story"
            - type: object
              properties:
                relationships:
                  type: object
                  properties: &a18
                    user:
                      $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          $ref: "#/components/schemas/_links"
    StoryListResponse:
      type: object
      description: Response for a list of "Story"
      required:
        - data
        - links
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/Story"
              - type: object
                properties:
                  relationships:
                    type: object
                    properties: *a18
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          allOf:
            - $ref: "#/components/schemas/_links"
            - $ref: "#/components/schemas/_pagination"
    Image:
      type: object
      description: The "Image" model
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
            published:
              type: boolean
            isPublic:
              type: boolean
            isDeleted:
              type: integer
            isDeletedDT:
              oneOf:
                - type: "null"
                - type: string
                  format: date-time
            type:
              type: string
            url:
              type: string
            associated_id:
              type: string
            sequence:
              type: integer
    ImageCreateRequest:
      type: object
      description: Input for creating a "Image"
      required:
        - data
      properties:
        data:
          type: object
          description: The "Image" model
          required:
            - type
            - attributes
          properties:
            type:
              type: string
            attributes:
              type: object
              required:
                - type
                - url
                - associated_id
                - sequence
              properties:
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  type: boolean
                isPublic:
                  type: boolean
                isDeleted:
                  type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                type:
                  type: string
                url:
                  type: string
                associated_id:
                  type: string
                sequence:
                  type: integer
        meta:
          $ref: "#/components/schemas/_meta"
    ImageUpdateRequest:
      type: object
      description: Input for updating a "Image"
      required:
        - data
      properties:
        data:
          type: object
          description: The "Image" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  type: boolean
                isPublic:
                  type: boolean
                isDeleted:
                  type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                type:
                  type: string
                url:
                  type: string
                associated_id:
                  type: string
                sequence:
                  type: integer
        meta:
          $ref: "#/components/schemas/_meta"
    ImageResponse:
      type: object
      description: Response for a "Image"
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          allOf:
            - $ref: "#/components/schemas/Image"
            - type: object
              properties:
                relationships:
                  type: object
                  properties: &a19 {}
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          $ref: "#/components/schemas/_links"
    ImageListResponse:
      type: object
      description: Response for a list of "Image"
      required:
        - data
        - links
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/Image"
              - type: object
                properties:
                  relationships:
                    type: object
                    properties: *a19
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          allOf:
            - $ref: "#/components/schemas/_links"
            - $ref: "#/components/schemas/_pagination"
    ConfigParam:
      type: object
      description: The "ConfigParam" model
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
            published:
              type: boolean
            isPublic:
              type: boolean
            isDeleted:
              type: integer
            isDeletedDT:
              oneOf:
                - type: "null"
                - type: string
                  format: date-time
            name:
              type: string
            value:
              type: string
            utility:
              type: string
    ConfigParamCreateRequest:
      type: object
      description: Input for creating a "ConfigParam"
      required:
        - data
      properties:
        data:
          type: object
          description: The "ConfigParam" model
          required:
            - type
            - attributes
          properties:
            type:
              type: string
            attributes:
              type: object
              required:
                - name
                - value
                - utility
              properties:
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  type: boolean
                isPublic:
                  type: boolean
                isDeleted:
                  type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                name:
                  type: string
                value:
                  type: string
                utility:
                  type: string
        meta:
          $ref: "#/components/schemas/_meta"
    ConfigParamUpdateRequest:
      type: object
      description: Input for updating a "ConfigParam"
      required:
        - data
      properties:
        data:
          type: object
          description: The "ConfigParam" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  type: boolean
                isPublic:
                  type: boolean
                isDeleted:
                  type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                name:
                  type: string
                value:
                  type: string
                utility:
                  type: string
        meta:
          $ref: "#/components/schemas/_meta"
    ConfigParamResponse:
      type: object
      description: Response for a "ConfigParam"
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          allOf:
            - $ref: "#/components/schemas/ConfigParam"
            - type: object
              properties:
                relationships:
                  type: object
                  properties: &a20 {}
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          $ref: "#/components/schemas/_links"
    ConfigParamListResponse:
      type: object
      description: Response for a list of "ConfigParam"
      required:
        - data
        - links
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/ConfigParam"
              - type: object
                properties:
                  relationships:
                    type: object
                    properties: *a20
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          allOf:
            - $ref: "#/components/schemas/_links"
            - $ref: "#/components/schemas/_pagination"
    OrgEmailUseTo:
      type: object
      description: The "OrgEmailUseTo" model
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
            published:
              type: boolean
            isPublic:
              type: boolean
            isDeleted:
              type: integer
            isDeletedDT:
              oneOf:
                - type: "null"
                - type: string
                  format: date-time
            useTo:
              type: string
            isActiv:
              type: boolean
            emailOrgId:
              type: integer
        relationships:
          type: object
          properties:
            emailOrg:
              $ref: "#/components/schemas/_toOneRelationshipWithLinks"
    OrgEmailUseToCreateRequest:
      type: object
      description: Input for creating a "OrgEmailUseTo"
      required:
        - data
      properties:
        data:
          type: object
          description: The "OrgEmailUseTo" model
          required:
            - type
            - attributes
          properties:
            type:
              type: string
            attributes:
              type: object
              required:
                - useTo
                - isActiv
                - emailOrgId
              properties:
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  type: boolean
                isPublic:
                  type: boolean
                isDeleted:
                  type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                useTo:
                  type: string
                isActiv:
                  type: boolean
                emailOrgId:
                  type: integer
            relationships:
              type: object
              properties:
                emailOrg:
                  $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    OrgEmailUseToUpdateRequest:
      type: object
      description: Input for updating a "OrgEmailUseTo"
      required:
        - data
      properties:
        data:
          type: object
          description: The "OrgEmailUseTo" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  type: boolean
                isPublic:
                  type: boolean
                isDeleted:
                  type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                useTo:
                  type: string
                isActiv:
                  type: boolean
                emailOrgId:
                  type: integer
            relationships:
              type: object
              properties:
                emailOrg:
                  $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    OrgEmailUseToResponse:
      type: object
      description: Response for a "OrgEmailUseTo"
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          allOf:
            - $ref: "#/components/schemas/OrgEmailUseTo"
            - type: object
              properties:
                relationships:
                  type: object
                  properties: &a21
                    emailOrg:
                      $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          $ref: "#/components/schemas/_links"
    OrgEmailUseToListResponse:
      type: object
      description: Response for a list of "OrgEmailUseTo"
      required:
        - data
        - links
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/OrgEmailUseTo"
              - type: object
                properties:
                  relationships:
                    type: object
                    properties: *a21
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          allOf:
            - $ref: "#/components/schemas/_links"
            - $ref: "#/components/schemas/_pagination"
    AppEmailDomain:
      type: object
      description: The "AppEmailDomain" model
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
            published:
              type: boolean
            isPublic:
              type: boolean
            isDeleted:
              type: integer
            isDeletedDT:
              oneOf:
                - type: "null"
                - type: string
                  format: date-time
            domain:
              type: string
            allowed:
              type: boolean
    AppEmailDomainCreateRequest:
      type: object
      description: Input for creating a "AppEmailDomain"
      required:
        - data
      properties:
        data:
          type: object
          description: The "AppEmailDomain" model
          required:
            - type
            - attributes
          properties:
            type:
              type: string
            attributes:
              type: object
              required:
                - domain
                - allowed
              properties:
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  type: boolean
                isPublic:
                  type: boolean
                isDeleted:
                  type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                domain:
                  type: string
                allowed:
                  type: boolean
        meta:
          $ref: "#/components/schemas/_meta"
    AppEmailDomainUpdateRequest:
      type: object
      description: Input for updating a "AppEmailDomain"
      required:
        - data
      properties:
        data:
          type: object
          description: The "AppEmailDomain" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  type: boolean
                isPublic:
                  type: boolean
                isDeleted:
                  type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                domain:
                  type: string
                allowed:
                  type: boolean
        meta:
          $ref: "#/components/schemas/_meta"
    AppEmailDomainResponse:
      type: object
      description: Response for a "AppEmailDomain"
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          allOf:
            - $ref: "#/components/schemas/AppEmailDomain"
            - type: object
              properties:
                relationships:
                  type: object
                  properties: &a22 {}
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          $ref: "#/components/schemas/_links"
    AppEmailDomainListResponse:
      type: object
      description: Response for a list of "AppEmailDomain"
      required:
        - data
        - links
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/AppEmailDomain"
              - type: object
                properties:
                  relationships:
                    type: object
                    properties: *a22
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          allOf:
            - $ref: "#/components/schemas/_links"
            - $ref: "#/components/schemas/_pagination"
    RefreshToken:
      type: object
      description: The "RefreshToken" model
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
            published:
              type: boolean
            isPublic:
              type: boolean
            isDeleted:
              type: integer
            isDeletedDT:
              oneOf:
                - type: "null"
                - type: string
                  format: date-time
            userId:
              type: string
            tokenId:
              type: string
    RefreshTokenCreateRequest:
      type: object
      description: Input for creating a "RefreshToken"
      required:
        - data
      properties:
        data:
          type: object
          description: The "RefreshToken" model
          required:
            - type
            - attributes
          properties:
            type:
              type: string
            attributes:
              type: object
              required:
                - userId
                - tokenId
              properties:
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  type: boolean
                isPublic:
                  type: boolean
                isDeleted:
                  type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                userId:
                  type: string
                tokenId:
                  type: string
        meta:
          $ref: "#/components/schemas/_meta"
    RefreshTokenUpdateRequest:
      type: object
      description: Input for updating a "RefreshToken"
      required:
        - data
      properties:
        data:
          type: object
          description: The "RefreshToken" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  type: boolean
                isPublic:
                  type: boolean
                isDeleted:
                  type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                userId:
                  type: string
                tokenId:
                  type: string
        meta:
          $ref: "#/components/schemas/_meta"
    RefreshTokenResponse:
      type: object
      description: Response for a "RefreshToken"
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          allOf:
            - $ref: "#/components/schemas/RefreshToken"
            - type: object
              properties:
                relationships:
                  type: object
                  properties: &a23 {}
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          $ref: "#/components/schemas/_links"
    RefreshTokenListResponse:
      type: object
      description: Response for a list of "RefreshToken"
      required:
        - data
        - links
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/RefreshToken"
              - type: object
                properties:
                  relationships:
                    type: object
                    properties: *a23
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          allOf:
            - $ref: "#/components/schemas/_links"
            - $ref: "#/components/schemas/_pagination"
    ApiKey:
      type: object
      description: The "ApiKey" model
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
            published:
              type: boolean
            isPublic:
              type: boolean
            isDeleted:
              type: integer
            isDeletedDT:
              oneOf:
                - type: "null"
                - type: string
                  format: date-time
            key:
              type: string
            uuid:
              type: string
            userId:
              type: string
        relationships:
          type: object
          properties:
            user:
              $ref: "#/components/schemas/_toOneRelationshipWithLinks"
            Scopes:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
    ApiKeyCreateRequest:
      type: object
      description: Input for creating a "ApiKey"
      required:
        - data
      properties:
        data:
          type: object
          description: The "ApiKey" model
          required:
            - type
            - attributes
          properties:
            type:
              type: string
            attributes:
              type: object
              required:
                - key
                - uuid
                - userId
              properties:
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  type: boolean
                isPublic:
                  type: boolean
                isDeleted:
                  type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                key:
                  type: string
                uuid:
                  type: string
                userId:
                  type: string
            relationships:
              type: object
              properties:
                user:
                  $ref: "#/components/schemas/_toOneRelationship"
                Scopes:
                  $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    ApiKeyUpdateRequest:
      type: object
      description: Input for updating a "ApiKey"
      required:
        - data
      properties:
        data:
          type: object
          description: The "ApiKey" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  type: boolean
                isPublic:
                  type: boolean
                isDeleted:
                  type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                key:
                  type: string
                uuid:
                  type: string
                userId:
                  type: string
            relationships:
              type: object
              properties:
                user:
                  $ref: "#/components/schemas/_toOneRelationship"
                Scopes:
                  $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    ApiKeyResponse:
      type: object
      description: Response for a "ApiKey"
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          allOf:
            - $ref: "#/components/schemas/ApiKey"
            - type: object
              properties:
                relationships:
                  type: object
                  properties: &a24
                    user:
                      $ref: "#/components/schemas/_toOneRelationship"
                    Scopes:
                      $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          $ref: "#/components/schemas/_links"
    ApiKeyListResponse:
      type: object
      description: Response for a list of "ApiKey"
      required:
        - data
        - links
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/ApiKey"
              - type: object
                properties:
                  relationships:
                    type: object
                    properties: *a24
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          allOf:
            - $ref: "#/components/schemas/_links"
            - $ref: "#/components/schemas/_pagination"
    Scope:
      type: object
      description: The "Scope" model
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
            published:
              type: boolean
            isPublic:
              type: boolean
            isDeleted:
              type: integer
            isDeletedDT:
              oneOf:
                - type: "null"
                - type: string
                  format: date-time
            scope:
              type: string
        relationships:
          type: object
          properties:
            ApiKey:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
    ScopeCreateRequest:
      type: object
      description: Input for creating a "Scope"
      required:
        - data
      properties:
        data:
          type: object
          description: The "Scope" model
          required:
            - type
            - attributes
          properties:
            type:
              type: string
            attributes:
              type: object
              required:
                - scope
              properties:
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  type: boolean
                isPublic:
                  type: boolean
                isDeleted:
                  type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                scope:
                  type: string
            relationships:
              type: object
              properties:
                ApiKey:
                  $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    ScopeUpdateRequest:
      type: object
      description: Input for updating a "Scope"
      required:
        - data
      properties:
        data:
          type: object
          description: The "Scope" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  type: boolean
                isPublic:
                  type: boolean
                isDeleted:
                  type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                scope:
                  type: string
            relationships:
              type: object
              properties:
                ApiKey:
                  $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    ScopeResponse:
      type: object
      description: Response for a "Scope"
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          allOf:
            - $ref: "#/components/schemas/Scope"
            - type: object
              properties:
                relationships:
                  type: object
                  properties: &a25
                    ApiKey:
                      $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          $ref: "#/components/schemas/_links"
    ScopeListResponse:
      type: object
      description: Response for a list of "Scope"
      required:
        - data
        - links
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/Scope"
              - type: object
                properties:
                  relationships:
                    type: object
                    properties: *a25
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          allOf:
            - $ref: "#/components/schemas/_links"
            - $ref: "#/components/schemas/_pagination"
    Token:
      type: object
      description: The "Token" model
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
            published:
              type: boolean
            isPublic:
              type: boolean
            isDeleted:
              type: integer
            isDeletedDT:
              oneOf:
                - type: "null"
                - type: string
                  format: date-time
            tokenId:
              oneOf:
                - type: "null"
                - type: string
            type:
              $ref: "#/components/schemas/TokenType"
            emailToken:
              oneOf:
                - type: "null"
                - type: string
            valid:
              type: boolean
            expiration:
              type: string
              format: date-time
            userId:
              type: string
        relationships:
          type: object
          properties:
            user:
              $ref: "#/components/schemas/_toOneRelationshipWithLinks"
    TokenCreateRequest:
      type: object
      description: Input for creating a "Token"
      required:
        - data
      properties:
        data:
          type: object
          description: The "Token" model
          required:
            - type
            - attributes
          properties:
            type:
              type: string
            attributes:
              type: object
              required:
                - type
                - expiration
                - userId
              properties:
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  type: boolean
                isPublic:
                  type: boolean
                isDeleted:
                  type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                tokenId:
                  oneOf:
                    - type: "null"
                    - type: string
                type:
                  $ref: "#/components/schemas/TokenType"
                emailToken:
                  oneOf:
                    - type: "null"
                    - type: string
                valid:
                  type: boolean
                expiration:
                  type: string
                  format: date-time
                userId:
                  type: string
            relationships:
              type: object
              properties:
                user:
                  $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    TokenUpdateRequest:
      type: object
      description: Input for updating a "Token"
      required:
        - data
      properties:
        data:
          type: object
          description: The "Token" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  type: boolean
                isPublic:
                  type: boolean
                isDeleted:
                  type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                tokenId:
                  oneOf:
                    - type: "null"
                    - type: string
                type:
                  $ref: "#/components/schemas/TokenType"
                emailToken:
                  oneOf:
                    - type: "null"
                    - type: string
                valid:
                  type: boolean
                expiration:
                  type: string
                  format: date-time
                userId:
                  type: string
            relationships:
              type: object
              properties:
                user:
                  $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    TokenResponse:
      type: object
      description: Response for a "Token"
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          allOf:
            - $ref: "#/components/schemas/Token"
            - type: object
              properties:
                relationships:
                  type: object
                  properties: &a26
                    user:
                      $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          $ref: "#/components/schemas/_links"
    TokenListResponse:
      type: object
      description: Response for a list of "Token"
      required:
        - data
        - links
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/Token"
              - type: object
                properties:
                  relationships:
                    type: object
                    properties: *a26
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          allOf:
            - $ref: "#/components/schemas/_links"
            - $ref: "#/components/schemas/_pagination"
    ChangesTracking:
      type: object
      description: The "ChangesTracking" model
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
            published:
              type: boolean
            isPublic:
              type: boolean
            isDeleted:
              type: integer
            isDeletedDT:
              oneOf:
                - type: "null"
                - type: string
                  format: date-time
            doneAt:
              type: string
              format: date-time
            modifiedById:
              type: string
            modelName:
              type: string
            recordId:
              type: string
            operation:
              type: string
            newData: {}
            oldData: {}
        relationships:
          type: object
          properties:
            modifiedBy:
              $ref: "#/components/schemas/_toOneRelationshipWithLinks"
    ChangesTrackingCreateRequest:
      type: object
      description: Input for creating a "ChangesTracking"
      required:
        - data
      properties:
        data:
          type: object
          description: The "ChangesTracking" model
          required:
            - type
            - attributes
          properties:
            type:
              type: string
            attributes:
              type: object
              required:
                - modifiedById
                - modelName
                - recordId
                - operation
                - newData
                - oldData
              properties:
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  type: boolean
                isPublic:
                  type: boolean
                isDeleted:
                  type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                doneAt:
                  type: string
                  format: date-time
                modifiedById:
                  type: string
                modelName:
                  type: string
                recordId:
                  type: string
                operation:
                  type: string
                newData: {}
                oldData: {}
            relationships:
              type: object
              properties:
                modifiedBy:
                  $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    ChangesTrackingUpdateRequest:
      type: object
      description: Input for updating a "ChangesTracking"
      required:
        - data
      properties:
        data:
          type: object
          description: The "ChangesTracking" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  type: boolean
                isPublic:
                  type: boolean
                isDeleted:
                  type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                doneAt:
                  type: string
                  format: date-time
                modifiedById:
                  type: string
                modelName:
                  type: string
                recordId:
                  type: string
                operation:
                  type: string
                newData: {}
                oldData: {}
            relationships:
              type: object
              properties:
                modifiedBy:
                  $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    ChangesTrackingResponse:
      type: object
      description: Response for a "ChangesTracking"
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          allOf:
            - $ref: "#/components/schemas/ChangesTracking"
            - type: object
              properties:
                relationships:
                  type: object
                  properties: &a27
                    modifiedBy:
                      $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          $ref: "#/components/schemas/_links"
    ChangesTrackingListResponse:
      type: object
      description: Response for a list of "ChangesTracking"
      required:
        - data
        - links
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/ChangesTracking"
              - type: object
                properties:
                  relationships:
                    type: object
                    properties: *a27
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          allOf:
            - $ref: "#/components/schemas/_links"
            - $ref: "#/components/schemas/_pagination"
    AccountValidation:
      type: object
      description: The "AccountValidation" model
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            numSeq:
              type: integer
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
            published:
              oneOf:
                - type: "null"
                - type: boolean
            isPublic:
              oneOf:
                - type: "null"
                - type: boolean
            isDeleted:
              oneOf:
                - type: "null"
                - type: integer
            isDeletedDT:
              oneOf:
                - type: "null"
                - type: string
                  format: date-time
            isValidated:
              type: boolean
            emailToken:
              type: string
            timeStamp:
              type: string
              format: date-time
    AccountValidationCreateRequest:
      type: object
      description: Input for creating a "AccountValidation"
      required:
        - data
      properties:
        data:
          type: object
          description: The "AccountValidation" model
          required:
            - type
            - attributes
          properties:
            type:
              type: string
            attributes:
              type: object
              required:
                - emailToken
                - timeStamp
              properties:
                numSeq:
                  type: integer
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  oneOf:
                    - type: "null"
                    - type: boolean
                isPublic:
                  oneOf:
                    - type: "null"
                    - type: boolean
                isDeleted:
                  oneOf:
                    - type: "null"
                    - type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                isValidated:
                  type: boolean
                emailToken:
                  type: string
                timeStamp:
                  type: string
                  format: date-time
        meta:
          $ref: "#/components/schemas/_meta"
    AccountValidationUpdateRequest:
      type: object
      description: Input for updating a "AccountValidation"
      required:
        - data
      properties:
        data:
          type: object
          description: The "AccountValidation" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                numSeq:
                  type: integer
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                published:
                  oneOf:
                    - type: "null"
                    - type: boolean
                isPublic:
                  oneOf:
                    - type: "null"
                    - type: boolean
                isDeleted:
                  oneOf:
                    - type: "null"
                    - type: integer
                isDeletedDT:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                isValidated:
                  type: boolean
                emailToken:
                  type: string
                timeStamp:
                  type: string
                  format: date-time
        meta:
          $ref: "#/components/schemas/_meta"
    AccountValidationResponse:
      type: object
      description: Response for a "AccountValidation"
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          allOf:
            - $ref: "#/components/schemas/AccountValidation"
            - type: object
              properties:
                relationships:
                  type: object
                  properties: &a28 {}
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          $ref: "#/components/schemas/_links"
    AccountValidationListResponse:
      type: object
      description: Response for a list of "AccountValidation"
      required:
        - data
        - links
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/AccountValidation"
              - type: object
                properties:
                  relationships:
                    type: object
                    properties: *a28
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          allOf:
            - $ref: "#/components/schemas/_links"
            - $ref: "#/components/schemas/_pagination"
  parameters:
    id:
      name: id
      in: path
      description: The resource id
      required: true
      schema:
        type: string
    include:
      name: include
      in: query
      description: Relationships to include
      required: false
      style: form
      schema:
        type: string
    sort:
      name: sort
      in: query
      description: Fields to sort by
      required: false
      style: form
      schema:
        type: string
    page-offset:
      name: page[offset]
      in: query
      description: Offset for pagination
      required: false
      style: form
      schema:
        type: integer
    page-limit:
      name: page[limit]
      in: query
      description: Limit for pagination
      required: false
      style: form
      schema:
        type: integer
